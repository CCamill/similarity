[{"function_name": "PascalT", "function_instructions": ["call void @llvm.dbg.value(metadata i32 %0, metadata !38, metadata !DIExpression()), !dbg !43", "call void @llvm.dbg.value(metadata i32 0, metadata !39, metadata !DIExpression()), !dbg !43", "%2 = icmp slt i32 %0, 0, !dbg !44", "br i1 %2, label %51, label %3, !dbg !47", "%4 = add nuw i32 %0, 1, !dbg !47", "%5 = zext i32 %4 to i64, !dbg !44", "br label %6, !dbg !47", "%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "call void @llvm.dbg.value(metadata i64 %7, metadata !39, metadata !DIExpression()), !dbg !43", "%8 = add nsw i64 %7, -1, !dbg !48", "%9 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 0, !dbg !48", "store i64 1, i64* %9, align 8, !dbg !50, !tbaa !51", "call void @llvm.dbg.value(metadata i32 1, metadata !40, metadata !DIExpression()), !dbg !43", "%10 = icmp ugt i64 %7, 1, !dbg !55", "br i1 %10, label %11, label %47, !dbg !58", "%12 = add nsw i64 %7, -1, !dbg !59", "%13 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 0, !dbg !59", "%14 = load i64, i64* %13, align 8, !dbg !61, !tbaa !51", "%15 = and i64 %8, 1, !dbg !58", "%16 = icmp eq i64 %7, 2, !dbg !58", "br i1 %16, label %37, label %17, !dbg !58", "%18 = sub i64 %8, %15, !dbg !58", "br label %19, !dbg !58", "%20 = phi i64 [ %14, %17 ], [ %30, %19 ], !dbg !61", "%21 = phi i64 [ 1, %17 ], [ %34, %19 ]", "%22 = phi i64 [ %18, %17 ], [ %35, %19 ]", "call void @llvm.dbg.value(metadata i64 %21, metadata !40, metadata !DIExpression()), !dbg !43", "%23 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %21, !dbg !62", "%24 = load i64, i64* %23, align 8, !dbg !62, !tbaa !51", "%25 = add nsw i64 %24, %20, !dbg !63", "%26 = srem i64 %25, 1000000007, !dbg !64", "%27 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %21, !dbg !65", "store i64 %26, i64* %27, align 8, !dbg !66, !tbaa !51", "%28 = add nuw nsw i64 %21, 1, !dbg !67", "call void @llvm.dbg.value(metadata i64 %28, metadata !40, metadata !DIExpression()), !dbg !43", "%29 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %28, !dbg !62", "%30 = load i64, i64* %29, align 8, !dbg !62, !tbaa !51", "%31 = add nsw i64 %30, %24, !dbg !63", "%32 = srem i64 %31, 1000000007, !dbg !64", "%33 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %28, !dbg !65", "store i64 %32, i64* %33, align 8, !dbg !66, !tbaa !51", "%34 = add nuw nsw i64 %21, 2, !dbg !67", "call void @llvm.dbg.value(metadata i64 %34, metadata !40, metadata !DIExpression()), !dbg !43", "%35 = add i64 %22, -2, !dbg !58", "%36 = icmp eq i64 %35, 0, !dbg !58", "br i1 %36, label %37, label %19, !dbg !58, !llvm.loop !68", "%38 = phi i64 [ %14, %11 ], [ %30, %19 ]", "%39 = phi i64 [ 1, %11 ], [ %34, %19 ]", "%40 = icmp eq i64 %15, 0, !dbg !58", "br i1 %40, label %47, label %41, !dbg !58", "call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression()), !dbg !43", "%42 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %39, !dbg !62", "%43 = load i64, i64* %42, align 8, !dbg !62, !tbaa !51", "%44 = add nsw i64 %43, %38, !dbg !63", "%45 = srem i64 %44, 1000000007, !dbg !64", "%46 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %39, !dbg !65", "store i64 %45, i64* %46, align 8, !dbg !66, !tbaa !51", "call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !43", "br label %47, !dbg !70", "%48 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %7, !dbg !70", "store i64 1, i64* %48, align 8, !dbg !71, !tbaa !51", "%49 = add nuw nsw i64 %7, 1, !dbg !72", "call void @llvm.dbg.value(metadata i64 %49, metadata !39, metadata !DIExpression()), !dbg !43", "%50 = icmp eq i64 %49, %5, !dbg !44", "br i1 %50, label %51, label %6, !dbg !47, !llvm.loop !73", "ret void, !dbg !75"], "bb_num": 10, "function_param_list": ["i32 %0"], "function_blocks": [{"block_name": "block-0", "block_var_list": ["%2"], "inst_num": 4, "block_inst_list": ["call void @llvm.dbg.value(metadata i32 %0, metadata !38, metadata !DIExpression()), !dbg !43", "call void @llvm.dbg.value(metadata i32 0, metadata !39, metadata !DIExpression()), !dbg !43", "%2 = icmp slt i32 %0, 0, !dbg !44", "br i1 %2, label %51, label %3, !dbg !47"], "block_insts": [{"inst_id": "0", "instruction": "call void @llvm.dbg.value(metadata i32 %0, metadata !38, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i32 %0", "!38 = !DILocalVariable(name: \"n\", arg: 1, scope: !34, file: !3, line: 13, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "1", "instruction": "call void @llvm.dbg.value(metadata i32 0, metadata !39, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i32 0", "!39 = !DILocalVariable(name: \"i\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "2", "instruction": "%2 = icmp slt i32 %0, 0, !dbg !44", "opcode": "icmp", "operand_list": ["i32 %0", "i32 0"], "var_name": "%2"}, {"inst_id": "3", "instruction": "br i1 %2, label %51, label %3, !dbg !47", "opcode": "br", "branch_condition": "%2 = icmp slt i32 %0, 0, !dbg !44", "true_target": "%51", "false_target": "%3"}]}, {"block_name": "block-3", "block_var_list": ["%4", "%5"], "inst_num": 3, "block_inst_list": ["%4 = add nuw i32 %0, 1, !dbg !47", "%5 = zext i32 %4 to i64, !dbg !44", "br label %6, !dbg !47"], "block_insts": [{"inst_id": "4", "instruction": "%4 = add nuw i32 %0, 1, !dbg !47", "opcode": "add", "operand_list": ["i32 %0", "i32 1"], "var_name": "%4"}, {"inst_id": "5", "instruction": "%5 = zext i32 %4 to i64, !dbg !44", "opcode": "zext", "operand_list": ["%4 = add nuw i32 %0, 1, !dbg !47"], "var_name": "%5"}, {"inst_id": "6", "instruction": "br label %6, !dbg !47", "opcode": "br", "branch_condition": "False", "br_target": "%6"}]}, {"block_name": "block-6", "block_var_list": ["%7", "%8", "%9", "%10"], "inst_num": 8, "block_inst_list": ["%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "call void @llvm.dbg.value(metadata i64 %7, metadata !39, metadata !DIExpression()), !dbg !43", "%8 = add nsw i64 %7, -1, !dbg !48", "%9 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 0, !dbg !48", "store i64 1, i64* %9, align 8, !dbg !50, !tbaa !51", "call void @llvm.dbg.value(metadata i32 1, metadata !40, metadata !DIExpression()), !dbg !43", "%10 = icmp ugt i64 %7, 1, !dbg !55", "br i1 %10, label %11, label %47, !dbg !58"], "block_insts": [{"inst_id": "7", "instruction": "%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "opcode": "phi", "operand_list": ["i64 0", "%49 = add nuw nsw i64 %7, 1, !dbg !72"], "var_name": "%7"}, {"inst_id": "8", "instruction": "call void @llvm.dbg.value(metadata i64 %7, metadata !39, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i64 %7", "!39 = !DILocalVariable(name: \"i\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "9", "instruction": "%8 = add nsw i64 %7, -1, !dbg !48", "opcode": "add", "operand_list": ["%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "i64 -1"], "var_name": "%8"}, {"inst_id": "10", "instruction": "%9 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 0, !dbg !48", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "i64 0"], "var_name": "%9"}, {"inst_id": "11", "instruction": "store i64 1, i64* %9, align 8, !dbg !50, !tbaa !51", "opcode": "store", "operand_list": ["i64 1", "%9 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 0, !dbg !48"]}, {"inst_id": "12", "instruction": "call void @llvm.dbg.value(metadata i32 1, metadata !40, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i32 1", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "13", "instruction": "%10 = icmp ugt i64 %7, 1, !dbg !55", "opcode": "icmp", "operand_list": ["%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "i64 1"], "var_name": "%10"}, {"inst_id": "14", "instruction": "br i1 %10, label %11, label %47, !dbg !58", "opcode": "br", "branch_condition": "%10 = icmp ugt i64 %7, 1, !dbg !55", "true_target": "%11", "false_target": "%47"}]}, {"block_name": "block-11", "block_var_list": ["%12", "%13", "%14", "%15", "%16"], "inst_num": 6, "block_inst_list": ["%12 = add nsw i64 %7, -1, !dbg !59", "%13 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 0, !dbg !59", "%14 = load i64, i64* %13, align 8, !dbg !61, !tbaa !51", "%15 = and i64 %8, 1, !dbg !58", "%16 = icmp eq i64 %7, 2, !dbg !58", "br i1 %16, label %37, label %17, !dbg !58"], "block_insts": [{"inst_id": "15", "instruction": "%12 = add nsw i64 %7, -1, !dbg !59", "opcode": "add", "operand_list": ["%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "i64 -1"], "var_name": "%12"}, {"inst_id": "16", "instruction": "%13 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 0, !dbg !59", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = add nsw i64 %7, -1, !dbg !59", "i64 0"], "var_name": "%13"}, {"inst_id": "17", "instruction": "%14 = load i64, i64* %13, align 8, !dbg !61, !tbaa !51", "opcode": "load", "operand_list": ["%13 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 0, !dbg !59"], "var_name": "%14"}, {"inst_id": "18", "instruction": "%15 = and i64 %8, 1, !dbg !58", "opcode": "and", "operand_list": ["%8 = add nsw i64 %7, -1, !dbg !48", "i64 1"], "var_name": "%15"}, {"inst_id": "19", "instruction": "%16 = icmp eq i64 %7, 2, !dbg !58", "opcode": "icmp", "operand_list": ["%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "i64 2"], "var_name": "%16"}, {"inst_id": "20", "instruction": "br i1 %16, label %37, label %17, !dbg !58", "opcode": "br", "branch_condition": "%16 = icmp eq i64 %7, 2, !dbg !58", "true_target": "%37", "false_target": "%17"}]}, {"block_name": "block-17", "block_var_list": ["%18"], "inst_num": 2, "block_inst_list": ["%18 = sub i64 %8, %15, !dbg !58", "br label %19, !dbg !58"], "block_insts": [{"inst_id": "21", "instruction": "%18 = sub i64 %8, %15, !dbg !58", "opcode": "sub", "operand_list": ["%8 = add nsw i64 %7, -1, !dbg !48", "%15 = and i64 %8, 1, !dbg !58"], "var_name": "%18"}, {"inst_id": "22", "instruction": "br label %19, !dbg !58", "opcode": "br", "branch_condition": "False", "br_target": "%19"}]}, {"block_name": "block-19", "block_var_list": ["%20", "%21", "%22", "%23", "%24", "%25", "%26", "%27", "%28", "%29", "%30", "%31", "%32", "%33", "%34", "%35", "%36"], "inst_num": 23, "block_inst_list": ["%20 = phi i64 [ %14, %17 ], [ %30, %19 ], !dbg !61", "%21 = phi i64 [ 1, %17 ], [ %34, %19 ]", "%22 = phi i64 [ %18, %17 ], [ %35, %19 ]", "call void @llvm.dbg.value(metadata i64 %21, metadata !40, metadata !DIExpression()), !dbg !43", "%23 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %21, !dbg !62", "%24 = load i64, i64* %23, align 8, !dbg !62, !tbaa !51", "%25 = add nsw i64 %24, %20, !dbg !63", "%26 = srem i64 %25, 1000000007, !dbg !64", "%27 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %21, !dbg !65", "store i64 %26, i64* %27, align 8, !dbg !66, !tbaa !51", "%28 = add nuw nsw i64 %21, 1, !dbg !67", "call void @llvm.dbg.value(metadata i64 %28, metadata !40, metadata !DIExpression()), !dbg !43", "%29 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %28, !dbg !62", "%30 = load i64, i64* %29, align 8, !dbg !62, !tbaa !51", "%31 = add nsw i64 %30, %24, !dbg !63", "%32 = srem i64 %31, 1000000007, !dbg !64", "%33 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %28, !dbg !65", "store i64 %32, i64* %33, align 8, !dbg !66, !tbaa !51", "%34 = add nuw nsw i64 %21, 2, !dbg !67", "call void @llvm.dbg.value(metadata i64 %34, metadata !40, metadata !DIExpression()), !dbg !43", "%35 = add i64 %22, -2, !dbg !58", "%36 = icmp eq i64 %35, 0, !dbg !58", "br i1 %36, label %37, label %19, !dbg !58, !llvm.loop !68"], "block_insts": [{"inst_id": "23", "instruction": "%20 = phi i64 [ %14, %17 ], [ %30, %19 ], !dbg !61", "opcode": "phi", "operand_list": ["%14 = load i64, i64* %13, align 8, !dbg !61, !tbaa !51", "%30 = load i64, i64* %29, align 8, !dbg !62, !tbaa !51"], "var_name": "%20"}, {"inst_id": "24", "instruction": "%21 = phi i64 [ 1, %17 ], [ %34, %19 ]", "opcode": "phi", "operand_list": ["i64 1", "%34 = add nuw nsw i64 %21, 2, !dbg !67"], "var_name": "%21"}, {"inst_id": "25", "instruction": "%22 = phi i64 [ %18, %17 ], [ %35, %19 ]", "opcode": "phi", "operand_list": ["%18 = sub i64 %8, %15, !dbg !58", "%35 = add i64 %22, -2, !dbg !58"], "var_name": "%22"}, {"inst_id": "26", "instruction": "call void @llvm.dbg.value(metadata i64 %21, metadata !40, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i64 %21", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "27", "instruction": "%23 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %21, !dbg !62", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = add nsw i64 %7, -1, !dbg !59", "%21 = phi i64 [ 1, %17 ], [ %34, %19 ]"], "var_name": "%23"}, {"inst_id": "28", "instruction": "%24 = load i64, i64* %23, align 8, !dbg !62, !tbaa !51", "opcode": "load", "operand_list": ["%23 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %21, !dbg !62"], "var_name": "%24"}, {"inst_id": "29", "instruction": "%25 = add nsw i64 %24, %20, !dbg !63", "opcode": "add", "operand_list": ["%24 = load i64, i64* %23, align 8, !dbg !62, !tbaa !51", "%20 = phi i64 [ %14, %17 ], [ %30, %19 ], !dbg !61"], "var_name": "%25"}, {"inst_id": "30", "instruction": "%26 = srem i64 %25, 1000000007, !dbg !64", "opcode": "srem", "operand_list": ["%25 = add nsw i64 %24, %20, !dbg !63", "i64 1000000007"], "var_name": "%26"}, {"inst_id": "31", "instruction": "%27 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %21, !dbg !65", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "%21 = phi i64 [ 1, %17 ], [ %34, %19 ]"], "var_name": "%27"}, {"inst_id": "32", "instruction": "store i64 %26, i64* %27, align 8, !dbg !66, !tbaa !51", "opcode": "store", "operand_list": ["%26 = srem i64 %25, 1000000007, !dbg !64", "%27 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %21, !dbg !65"]}, {"inst_id": "33", "instruction": "%28 = add nuw nsw i64 %21, 1, !dbg !67", "opcode": "add", "operand_list": ["%21 = phi i64 [ 1, %17 ], [ %34, %19 ]", "i64 1"], "var_name": "%28"}, {"inst_id": "34", "instruction": "call void @llvm.dbg.value(metadata i64 %28, metadata !40, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i64 %28", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "35", "instruction": "%29 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %28, !dbg !62", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = add nsw i64 %7, -1, !dbg !59", "%28 = add nuw nsw i64 %21, 1, !dbg !67"], "var_name": "%29"}, {"inst_id": "36", "instruction": "%30 = load i64, i64* %29, align 8, !dbg !62, !tbaa !51", "opcode": "load", "operand_list": ["%29 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %28, !dbg !62"], "var_name": "%30"}, {"inst_id": "37", "instruction": "%31 = add nsw i64 %30, %24, !dbg !63", "opcode": "add", "operand_list": ["%30 = load i64, i64* %29, align 8, !dbg !62, !tbaa !51", "%24 = load i64, i64* %23, align 8, !dbg !62, !tbaa !51"], "var_name": "%31"}, {"inst_id": "38", "instruction": "%32 = srem i64 %31, 1000000007, !dbg !64", "opcode": "srem", "operand_list": ["%31 = add nsw i64 %30, %24, !dbg !63", "i64 1000000007"], "var_name": "%32"}, {"inst_id": "39", "instruction": "%33 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %28, !dbg !65", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "%28 = add nuw nsw i64 %21, 1, !dbg !67"], "var_name": "%33"}, {"inst_id": "40", "instruction": "store i64 %32, i64* %33, align 8, !dbg !66, !tbaa !51", "opcode": "store", "operand_list": ["%32 = srem i64 %31, 1000000007, !dbg !64", "%33 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %28, !dbg !65"]}, {"inst_id": "41", "instruction": "%34 = add nuw nsw i64 %21, 2, !dbg !67", "opcode": "add", "operand_list": ["%21 = phi i64 [ 1, %17 ], [ %34, %19 ]", "i64 2"], "var_name": "%34"}, {"inst_id": "42", "instruction": "call void @llvm.dbg.value(metadata i64 %34, metadata !40, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i64 %34", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "43", "instruction": "%35 = add i64 %22, -2, !dbg !58", "opcode": "add", "operand_list": ["%22 = phi i64 [ %18, %17 ], [ %35, %19 ]", "i64 -2"], "var_name": "%35"}, {"inst_id": "44", "instruction": "%36 = icmp eq i64 %35, 0, !dbg !58", "opcode": "icmp", "operand_list": ["%35 = add i64 %22, -2, !dbg !58", "i64 0"], "var_name": "%36"}, {"inst_id": "45", "instruction": "br i1 %36, label %37, label %19, !dbg !58, !llvm.loop !68", "opcode": "br", "branch_condition": "%36 = icmp eq i64 %35, 0, !dbg !58", "true_target": "%37", "false_target": "%19"}]}, {"block_name": "block-37", "block_var_list": ["%38", "%39", "%40"], "inst_num": 4, "block_inst_list": ["%38 = phi i64 [ %14, %11 ], [ %30, %19 ]", "%39 = phi i64 [ 1, %11 ], [ %34, %19 ]", "%40 = icmp eq i64 %15, 0, !dbg !58", "br i1 %40, label %47, label %41, !dbg !58"], "block_insts": [{"inst_id": "46", "instruction": "%38 = phi i64 [ %14, %11 ], [ %30, %19 ]", "opcode": "phi", "operand_list": ["%14 = load i64, i64* %13, align 8, !dbg !61, !tbaa !51", "%30 = load i64, i64* %29, align 8, !dbg !62, !tbaa !51"], "var_name": "%38"}, {"inst_id": "47", "instruction": "%39 = phi i64 [ 1, %11 ], [ %34, %19 ]", "opcode": "phi", "operand_list": ["i64 1", "%34 = add nuw nsw i64 %21, 2, !dbg !67"], "var_name": "%39"}, {"inst_id": "48", "instruction": "%40 = icmp eq i64 %15, 0, !dbg !58", "opcode": "icmp", "operand_list": ["%15 = and i64 %8, 1, !dbg !58", "i64 0"], "var_name": "%40"}, {"inst_id": "49", "instruction": "br i1 %40, label %47, label %41, !dbg !58", "opcode": "br", "branch_condition": "%40 = icmp eq i64 %15, 0, !dbg !58", "true_target": "%47", "false_target": "%41"}]}, {"block_name": "block-41", "block_var_list": ["%42", "%43", "%44", "%45", "%46"], "inst_num": 9, "block_inst_list": ["call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression()), !dbg !43", "%42 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %39, !dbg !62", "%43 = load i64, i64* %42, align 8, !dbg !62, !tbaa !51", "%44 = add nsw i64 %43, %38, !dbg !63", "%45 = srem i64 %44, 1000000007, !dbg !64", "%46 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %39, !dbg !65", "store i64 %45, i64* %46, align 8, !dbg !66, !tbaa !51", "call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !43", "br label %47, !dbg !70"], "block_insts": [{"inst_id": "50", "instruction": "call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i64 %39", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "51", "instruction": "%42 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %39, !dbg !62", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = add nsw i64 %7, -1, !dbg !59", "%39 = phi i64 [ 1, %11 ], [ %34, %19 ]"], "var_name": "%42"}, {"inst_id": "52", "instruction": "%43 = load i64, i64* %42, align 8, !dbg !62, !tbaa !51", "opcode": "load", "operand_list": ["%42 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %39, !dbg !62"], "var_name": "%43"}, {"inst_id": "53", "instruction": "%44 = add nsw i64 %43, %38, !dbg !63", "opcode": "add", "operand_list": ["%43 = load i64, i64* %42, align 8, !dbg !62, !tbaa !51", "%38 = phi i64 [ %14, %11 ], [ %30, %19 ]"], "var_name": "%44"}, {"inst_id": "54", "instruction": "%45 = srem i64 %44, 1000000007, !dbg !64", "opcode": "srem", "operand_list": ["%44 = add nsw i64 %43, %38, !dbg !63", "i64 1000000007"], "var_name": "%45"}, {"inst_id": "55", "instruction": "%46 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %39, !dbg !65", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "%39 = phi i64 [ 1, %11 ], [ %34, %19 ]"], "var_name": "%46"}, {"inst_id": "56", "instruction": "store i64 %45, i64* %46, align 8, !dbg !66, !tbaa !51", "opcode": "store", "operand_list": ["%45 = srem i64 %44, 1000000007, !dbg !64", "%46 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %39, !dbg !65"]}, {"inst_id": "57", "instruction": "call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !43", "opcode": "call", "operand_list": ["i64 %39", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "58", "instruction": "br label %47, !dbg !70", "opcode": "br", "branch_condition": "False", "br_target": "%47"}]}, {"block_name": "block-47", "block_var_list": ["%48", "%49", "%50"], "inst_num": 6, "block_inst_list": ["%48 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %7, !dbg !70", "store i64 1, i64* %48, align 8, !dbg !71, !tbaa !51", "%49 = add nuw nsw i64 %7, 1, !dbg !72", "call void @llvm.dbg.value(metadata i64 %49, metadata !39, metadata !DIExpression()), !dbg !43", "%50 = icmp eq i64 %49, %5, !dbg !44", "br i1 %50, label %51, label %6, !dbg !47, !llvm.loop !73"], "block_insts": [{"inst_id": "59", "instruction": "%48 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %7, !dbg !70", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "%7 = phi i64 [ 0, %3 ], [ %49, %47 ]"], "var_name": "%48"}, {"inst_id": "60", "instruction": "store i64 1, i64* %48, align 8, !dbg !71, !tbaa !51", "opcode": "store", "operand_list": ["i64 1", "%48 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %7, i64 %7, !dbg !70"]}, {"inst_id": "61", "instruction": "%49 = add nuw nsw i64 %7, 1, !dbg !72", "opcode": "add", "operand_list": ["%7 = phi i64 [ 0, %3 ], [ %49, %47 ]", "i64 1"], "var_name": "%49"}, {"inst_id": "62", "instruction": "call void @llvm.dbg.value(metadata i64 %49, metadata !39, metadata !DIExpression()), !dbg !43", "opcode": "call", "operand_list": ["i64 %49", "!39 = !DILocalVariable(name: \"i\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "63", "instruction": "%50 = icmp eq i64 %49, %5, !dbg !44", "opcode": "icmp", "operand_list": ["%49 = add nuw nsw i64 %7, 1, !dbg !72", "%5 = zext i32 %4 to i64, !dbg !44"], "var_name": "%50"}, {"inst_id": "64", "instruction": "br i1 %50, label %51, label %6, !dbg !47, !llvm.loop !73", "opcode": "br", "branch_condition": "%50 = icmp eq i64 %49, %5, !dbg !44", "true_target": "%51", "false_target": "%6"}]}, {"block_name": "block-51", "block_var_list": [], "inst_num": 1, "block_inst_list": ["ret void, !dbg !75"], "block_insts": [{"inst_id": "65", "instruction": "ret void, !dbg !75", "opcode": "ret", "return_value": "0"}]}]}, {"function_name": "main", "function_instructions": ["%1 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @R, i32* nonnull @C), !dbg !40", "%2 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @X, i32* nonnull @Y), !dbg !41", "%3 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @D, i32* nonnull @L), !dbg !42", "%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "%6 = mul nsw i32 %5, %4, !dbg !49", "call void @llvm.dbg.value(metadata i32 %6, metadata !38, metadata !DIExpression()), !dbg !90", "call void @llvm.dbg.value(metadata i32 0, metadata !39, metadata !DIExpression()), !dbg !90", "%7 = icmp slt i32 %6, 0, !dbg !61", "br i1 %7, label %56, label %8, !dbg !64", "%9 = add nuw i32 %6, 1, !dbg !64", "%10 = zext i32 %9 to i64, !dbg !61", "br label %11, !dbg !64", "%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "call void @llvm.dbg.value(metadata i64 %12, metadata !39, metadata !DIExpression()), !dbg !90", "%13 = add nsw i64 %12, -1, !dbg !65", "%14 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 0, !dbg !65", "store i64 1, i64* %14, align 8, !dbg !67, !tbaa !68", "call void @llvm.dbg.value(metadata i32 1, metadata !40, metadata !DIExpression()), !dbg !90", "%15 = icmp ugt i64 %12, 1, !dbg !70", "br i1 %15, label %16, label %52, !dbg !73", "%17 = add nsw i64 %12, -1, !dbg !74", "%18 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 0, !dbg !74", "%19 = load i64, i64* %18, align 8, !dbg !76, !tbaa !68", "%20 = and i64 %13, 1, !dbg !73", "%21 = icmp eq i64 %12, 2, !dbg !73", "br i1 %21, label %42, label %22, !dbg !73", "%23 = sub i64 %13, %20, !dbg !73", "br label %24, !dbg !73", "%25 = phi i64 [ %19, %22 ], [ %35, %24 ], !dbg !76", "%26 = phi i64 [ 1, %22 ], [ %39, %24 ]", "%27 = phi i64 [ %23, %22 ], [ %40, %24 ]", "call void @llvm.dbg.value(metadata i64 %26, metadata !40, metadata !DIExpression()), !dbg !90", "%28 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %26, !dbg !77", "%29 = load i64, i64* %28, align 8, !dbg !77, !tbaa !68", "%30 = add nsw i64 %29, %25, !dbg !78", "%31 = srem i64 %30, 1000000007, !dbg !79", "%32 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %26, !dbg !80", "store i64 %31, i64* %32, align 8, !dbg !81, !tbaa !68", "%33 = add nuw nsw i64 %26, 1, !dbg !82", "call void @llvm.dbg.value(metadata i64 %33, metadata !40, metadata !DIExpression()), !dbg !90", "%34 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %33, !dbg !77", "%35 = load i64, i64* %34, align 8, !dbg !77, !tbaa !68", "%36 = add nsw i64 %35, %29, !dbg !78", "%37 = srem i64 %36, 1000000007, !dbg !79", "%38 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %33, !dbg !80", "store i64 %37, i64* %38, align 8, !dbg !81, !tbaa !68", "%39 = add nuw nsw i64 %26, 2, !dbg !82", "call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression()), !dbg !90", "%40 = add i64 %27, -2, !dbg !73", "%41 = icmp eq i64 %40, 0, !dbg !73", "br i1 %41, label %42, label %24, !dbg !73, !llvm.loop !83", "%43 = phi i64 [ %19, %16 ], [ %35, %24 ]", "%44 = phi i64 [ 1, %16 ], [ %39, %24 ]", "%45 = icmp eq i64 %20, 0, !dbg !73", "br i1 %45, label %52, label %46, !dbg !73", "call void @llvm.dbg.value(metadata i64 %44, metadata !40, metadata !DIExpression()), !dbg !90", "%47 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %44, !dbg !77", "%48 = load i64, i64* %47, align 8, !dbg !77, !tbaa !68", "%49 = add nsw i64 %48, %43, !dbg !78", "%50 = srem i64 %49, 1000000007, !dbg !79", "%51 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %44, !dbg !80", "store i64 %50, i64* %51, align 8, !dbg !81, !tbaa !68", "call void @llvm.dbg.value(metadata i64 %44, metadata !40, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !90", "br label %52, !dbg !85", "%53 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %12, !dbg !85", "store i64 1, i64* %53, align 8, !dbg !86, !tbaa !68", "%54 = add nuw nsw i64 %12, 1, !dbg !87", "call void @llvm.dbg.value(metadata i64 %54, metadata !39, metadata !DIExpression()), !dbg !90", "%55 = icmp eq i64 %54, %10, !dbg !61", "br i1 %55, label %56, label %11, !dbg !64, !llvm.loop !88", "%57 = sext i32 %6 to i64, !dbg !90", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44", "%59 = sext i32 %58 to i64, !dbg !90", "%60 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %57, i64 %59, !dbg !90", "%61 = load i64, i64* %60, align 8, !dbg !90, !tbaa !68", "%62 = sub nsw i32 %6, %58, !dbg !92", "%63 = sext i32 %62 to i64, !dbg !93", "%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%65 = sext i32 %64 to i64, !dbg !93", "%66 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %63, i64 %65, !dbg !93", "%67 = load i64, i64* %66, align 8, !dbg !93, !tbaa !68", "%68 = mul nsw i64 %67, %61, !dbg !95", "%69 = srem i64 %68, 1000000007, !dbg !96", "store i64 %69, i64* @ans, align 8, !dbg !97, !tbaa !68", "call void @llvm.dbg.value(metadata i32 0, metadata !80, metadata !DIExpression()), !dbg !121", "%70 = icmp sgt i32 %4, 1, !dbg !99", "br i1 %70, label %71, label %96, !dbg !101", "%72 = add nsw i32 %4, -1, !dbg !102", "%73 = mul nsw i32 %72, %5, !dbg !103", "%74 = add nsw i32 %64, %58, !dbg !104", "%75 = icmp slt i32 %73, %74, !dbg !105", "br i1 %75, label %96, label %76, !dbg !106", "%77 = sext i32 %73 to i64, !dbg !107", "%78 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %77, i64 %59, !dbg !107", "%79 = load i64, i64* %78, align 8, !dbg !107, !tbaa !68", "%80 = sub nsw i32 %73, %58, !dbg !109", "%81 = sext i32 %80 to i64, !dbg !110", "%82 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %81, i64 %65, !dbg !110", "%83 = load i64, i64* %82, align 8, !dbg !110, !tbaa !68", "%84 = mul nsw i64 %83, %79, !dbg !111", "%85 = srem i64 %84, 1000000007, !dbg !112", "%86 = shl nsw i64 %85, 1, !dbg !113", "%87 = srem i64 %86, 1000000007, !dbg !114", "%88 = sub nsw i64 %69, %87, !dbg !115", "store i64 %88, i64* @ans, align 8, !dbg !115, !tbaa !68", "%89 = icmp sgt i64 %88, -1, !dbg !116", "br i1 %89, label %90, label %94, !dbg !118", "%91 = trunc i64 %88 to i32, !dbg !119", "%92 = urem i32 %91, 1000000007, !dbg !119", "%93 = zext i32 %92 to i64, !dbg !119", "store i64 %93, i64* @ans, align 8, !dbg !119, !tbaa !68", "br label %96, !dbg !120", "%95 = add nsw i64 %88, 1000000007, !dbg !121", "store i64 %95, i64* @ans, align 8, !dbg !121, !tbaa !68", "br label %96", "%97 = phi i64 [ %69, %71 ], [ %93, %90 ], [ %95, %94 ], [ %69, %56 ]", "%98 = icmp sgt i32 %5, 1, !dbg !122", "br i1 %98, label %99, label %152, !dbg !124", "%100 = add nsw i32 %5, -1, !dbg !125", "%101 = mul nsw i32 %100, %4, !dbg !126", "%102 = add nsw i32 %64, %58, !dbg !127", "%103 = icmp slt i32 %101, %102, !dbg !128", "br i1 %103, label %126, label %104, !dbg !129", "%105 = sext i32 %101 to i64, !dbg !130", "%106 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %105, i64 %59, !dbg !130", "%107 = load i64, i64* %106, align 8, !dbg !130, !tbaa !68", "%108 = sub nsw i32 %101, %58, !dbg !132", "%109 = sext i32 %108 to i64, !dbg !133", "%110 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %109, i64 %65, !dbg !133", "%111 = load i64, i64* %110, align 8, !dbg !133, !tbaa !68", "%112 = mul nsw i64 %111, %107, !dbg !134", "%113 = srem i64 %112, 1000000007, !dbg !135", "%114 = shl nsw i64 %113, 1, !dbg !136", "%115 = srem i64 %114, 1000000007, !dbg !137", "%116 = sub nsw i64 %97, %115, !dbg !138", "store i64 %116, i64* @ans, align 8, !dbg !138, !tbaa !68", "%117 = icmp sgt i64 %116, -1, !dbg !139", "br i1 %117, label %118, label %122, !dbg !141", "%119 = trunc i64 %116 to i32, !dbg !142", "%120 = urem i32 %119, 1000000007, !dbg !142", "%121 = zext i32 %120 to i64, !dbg !142", "br label %124, !dbg !143", "%123 = add nsw i64 %116, 1000000007, !dbg !144", "br label %124", "%125 = phi i64 [ %121, %118 ], [ %123, %122 ]", "store i64 %125, i64* @ans, align 8, !dbg !145, !tbaa !68", "br label %126, !dbg !146", "%127 = phi i64 [ %97, %99 ], [ %125, %124 ]", "br i1 %70, label %128, label %178, !dbg !146", "%129 = add nsw i32 %4, -1, !dbg !148", "%130 = mul nsw i32 %100, %129, !dbg !149", "%131 = icmp slt i32 %130, %102, !dbg !150", "br i1 %131, label %152, label %132, !dbg !151", "%133 = sext i32 %130 to i64, !dbg !152", "%134 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %133, i64 %59, !dbg !152", "%135 = load i64, i64* %134, align 8, !dbg !152, !tbaa !68", "%136 = sub nsw i32 %130, %58, !dbg !154", "%137 = sext i32 %136 to i64, !dbg !155", "%138 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %137, i64 %65, !dbg !155", "%139 = load i64, i64* %138, align 8, !dbg !155, !tbaa !68", "%140 = mul nsw i64 %139, %135, !dbg !156", "%141 = srem i64 %140, 1000000007, !dbg !157", "%142 = shl nsw i64 %141, 2, !dbg !158", "%143 = srem i64 %142, 1000000007, !dbg !159", "%144 = add nsw i64 %143, %127, !dbg !160", "store i64 %144, i64* @ans, align 8, !dbg !160, !tbaa !68", "%145 = icmp sgt i64 %144, -1, !dbg !161", "br i1 %145, label %146, label %150, !dbg !163", "%147 = trunc i64 %144 to i32, !dbg !164", "%148 = urem i32 %147, 1000000007, !dbg !164", "%149 = zext i32 %148 to i64, !dbg !164", "store i64 %149, i64* @ans, align 8, !dbg !164, !tbaa !68", "br label %152, !dbg !165", "%151 = add nsw i64 %144, 1000000007, !dbg !166", "store i64 %151, i64* @ans, align 8, !dbg !166, !tbaa !68", "br label %152", "%153 = phi i64 [ %97, %96 ], [ %127, %128 ], [ %149, %146 ], [ %151, %150 ]", "%154 = icmp sgt i32 %4, 2, !dbg !167", "br i1 %154, label %155, label %178, !dbg !169", "%156 = add nsw i32 %4, -2, !dbg !170", "%157 = mul nsw i32 %156, %5, !dbg !171", "%158 = add nsw i32 %64, %58, !dbg !172", "%159 = icmp slt i32 %157, %158, !dbg !173", "br i1 %159, label %178, label %160, !dbg !174", "%161 = sext i32 %157 to i64, !dbg !175", "%162 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %161, i64 %59, !dbg !175", "%163 = load i64, i64* %162, align 8, !dbg !175, !tbaa !68", "%164 = sub nsw i32 %157, %58, !dbg !177", "%165 = sext i32 %164 to i64, !dbg !178", "%166 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %165, i64 %65, !dbg !178", "%167 = load i64, i64* %166, align 8, !dbg !178, !tbaa !68", "%168 = mul nsw i64 %167, %163, !dbg !179", "%169 = srem i64 %168, 1000000007, !dbg !180", "%170 = add nsw i64 %169, %153, !dbg !181", "store i64 %170, i64* @ans, align 8, !dbg !181, !tbaa !68", "%171 = icmp sgt i64 %170, -1, !dbg !182", "br i1 %171, label %172, label %176, !dbg !184", "%173 = trunc i64 %170 to i32, !dbg !185", "%174 = urem i32 %173, 1000000007, !dbg !185", "%175 = zext i32 %174 to i64, !dbg !185", "store i64 %175, i64* @ans, align 8, !dbg !185, !tbaa !68", "br label %178, !dbg !186", "%177 = add nsw i64 %170, 1000000007, !dbg !187", "store i64 %177, i64* @ans, align 8, !dbg !187, !tbaa !68", "br label %178", "%179 = phi i1 [ true, %155 ], [ true, %172 ], [ true, %176 ], [ false, %152 ], [ false, %126 ]", "%180 = phi i64 [ %153, %155 ], [ %175, %172 ], [ %177, %176 ], [ %153, %152 ], [ %127, %126 ]", "%181 = icmp sgt i32 %5, 2, !dbg !188", "br i1 %181, label %182, label %205, !dbg !190", "%183 = add nsw i32 %5, -2, !dbg !191", "%184 = mul nsw i32 %183, %4, !dbg !192", "%185 = add nsw i32 %64, %58, !dbg !193", "%186 = icmp slt i32 %184, %185, !dbg !194", "br i1 %186, label %205, label %187, !dbg !195", "%188 = sext i32 %184 to i64, !dbg !196", "%189 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %188, i64 %59, !dbg !196", "%190 = load i64, i64* %189, align 8, !dbg !196, !tbaa !68", "%191 = sub nsw i32 %184, %58, !dbg !198", "%192 = sext i32 %191 to i64, !dbg !199", "%193 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %192, i64 %65, !dbg !199", "%194 = load i64, i64* %193, align 8, !dbg !199, !tbaa !68", "%195 = mul nsw i64 %194, %190, !dbg !200", "%196 = srem i64 %195, 1000000007, !dbg !201", "%197 = add nsw i64 %196, %180, !dbg !202", "store i64 %197, i64* @ans, align 8, !dbg !202, !tbaa !68", "%198 = icmp sgt i64 %197, -1, !dbg !203", "br i1 %198, label %199, label %203, !dbg !205", "%200 = trunc i64 %197 to i32, !dbg !206", "%201 = urem i32 %200, 1000000007, !dbg !206", "%202 = zext i32 %201 to i64, !dbg !206", "store i64 %202, i64* @ans, align 8, !dbg !206, !tbaa !68", "br label %205, !dbg !207", "%204 = add nsw i64 %197, 1000000007, !dbg !208", "store i64 %204, i64* @ans, align 8, !dbg !208, !tbaa !68", "br label %205", "%206 = phi i64 [ %180, %182 ], [ %202, %199 ], [ %204, %203 ], [ %180, %178 ]", "%207 = and i1 %179, %98, !dbg !209", "br i1 %207, label %208, label %234, !dbg !209", "%209 = add nsw i32 %4, -2, !dbg !211", "%210 = add nsw i32 %5, -1, !dbg !212", "%211 = mul nsw i32 %210, %209, !dbg !213", "%212 = add nsw i32 %64, %58, !dbg !214", "%213 = icmp slt i32 %211, %212, !dbg !215", "br i1 %213, label %234, label %214, !dbg !216", "%215 = sext i32 %211 to i64, !dbg !217", "%216 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %215, i64 %59, !dbg !217", "%217 = load i64, i64* %216, align 8, !dbg !217, !tbaa !68", "%218 = sub nsw i32 %211, %58, !dbg !219", "%219 = sext i32 %218 to i64, !dbg !220", "%220 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %219, i64 %65, !dbg !220", "%221 = load i64, i64* %220, align 8, !dbg !220, !tbaa !68", "%222 = mul nsw i64 %221, %217, !dbg !221", "%223 = srem i64 %222, 1000000007, !dbg !222", "%224 = shl nsw i64 %223, 1, !dbg !223", "%225 = srem i64 %224, 1000000007, !dbg !224", "%226 = sub nsw i64 %206, %225, !dbg !225", "store i64 %226, i64* @ans, align 8, !dbg !225, !tbaa !68", "%227 = icmp sgt i64 %226, -1, !dbg !226", "br i1 %227, label %228, label %232, !dbg !228", "%229 = trunc i64 %226 to i32, !dbg !229", "%230 = urem i32 %229, 1000000007, !dbg !229", "%231 = zext i32 %230 to i64, !dbg !229", "store i64 %231, i64* @ans, align 8, !dbg !229, !tbaa !68", "br label %234, !dbg !230", "%233 = add nsw i64 %226, 1000000007, !dbg !231", "store i64 %233, i64* @ans, align 8, !dbg !231, !tbaa !68", "br label %234", "%235 = phi i64 [ %206, %208 ], [ %231, %228 ], [ %233, %232 ], [ %206, %205 ]", "%236 = and i1 %70, %181, !dbg !232", "br i1 %236, label %237, label %263, !dbg !232", "%238 = add nsw i32 %4, -1, !dbg !234", "%239 = add nsw i32 %5, -2, !dbg !235", "%240 = mul nsw i32 %239, %238, !dbg !236", "%241 = add nsw i32 %64, %58, !dbg !237", "%242 = icmp slt i32 %240, %241, !dbg !238", "br i1 %242, label %263, label %243, !dbg !239", "%244 = sext i32 %240 to i64, !dbg !240", "%245 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %244, i64 %59, !dbg !240", "%246 = load i64, i64* %245, align 8, !dbg !240, !tbaa !68", "%247 = sub nsw i32 %240, %58, !dbg !242", "%248 = sext i32 %247 to i64, !dbg !243", "%249 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %248, i64 %65, !dbg !243", "%250 = load i64, i64* %249, align 8, !dbg !243, !tbaa !68", "%251 = mul nsw i64 %250, %246, !dbg !244", "%252 = srem i64 %251, 1000000007, !dbg !245", "%253 = shl nsw i64 %252, 1, !dbg !246", "%254 = srem i64 %253, 1000000007, !dbg !247", "%255 = sub nsw i64 %235, %254, !dbg !248", "store i64 %255, i64* @ans, align 8, !dbg !248, !tbaa !68", "%256 = icmp sgt i64 %255, -1, !dbg !249", "br i1 %256, label %257, label %261, !dbg !251", "%258 = trunc i64 %255 to i32, !dbg !252", "%259 = urem i32 %258, 1000000007, !dbg !252", "%260 = zext i32 %259 to i64, !dbg !252", "store i64 %260, i64* @ans, align 8, !dbg !252, !tbaa !68", "br label %263, !dbg !253", "%262 = add nsw i64 %255, 1000000007, !dbg !254", "store i64 %262, i64* @ans, align 8, !dbg !254, !tbaa !68", "br label %263", "%264 = phi i64 [ %235, %237 ], [ %260, %257 ], [ %262, %261 ], [ %235, %234 ]", "%265 = and i1 %179, %181, !dbg !255", "br i1 %265, label %266, label %290, !dbg !255", "%267 = add nsw i32 %4, -2, !dbg !257", "%268 = add nsw i32 %5, -2, !dbg !258", "%269 = mul nsw i32 %268, %267, !dbg !259", "%270 = add nsw i32 %64, %58, !dbg !260", "%271 = icmp slt i32 %269, %270, !dbg !261", "br i1 %271, label %290, label %272, !dbg !262", "%273 = sext i32 %269 to i64, !dbg !263", "%274 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %273, i64 %59, !dbg !263", "%275 = load i64, i64* %274, align 8, !dbg !263, !tbaa !68", "%276 = sub nsw i32 %269, %58, !dbg !265", "%277 = sext i32 %276 to i64, !dbg !266", "%278 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %277, i64 %65, !dbg !266", "%279 = load i64, i64* %278, align 8, !dbg !266, !tbaa !68", "%280 = mul nsw i64 %279, %275, !dbg !267", "%281 = srem i64 %280, 1000000007, !dbg !268", "%282 = add nsw i64 %281, %264, !dbg !269", "store i64 %282, i64* @ans, align 8, !dbg !269, !tbaa !68", "%283 = icmp sgt i64 %282, -1, !dbg !270", "br i1 %283, label %284, label %288, !dbg !272", "%285 = trunc i64 %282 to i32, !dbg !273", "%286 = urem i32 %285, 1000000007, !dbg !273", "%287 = zext i32 %286 to i64, !dbg !273", "store i64 %287, i64* @ans, align 8, !dbg !273, !tbaa !68", "br label %290, !dbg !274", "%289 = add nsw i64 %282, 1000000007, !dbg !275", "store i64 %289, i64* @ans, align 8, !dbg !275, !tbaa !68", "br label %290", "%291 = phi i64 [ %264, %266 ], [ %287, %284 ], [ %289, %288 ], [ %264, %263 ], !dbg !276", "%292 = load i32, i32* @R, align 4, !dbg !277, !tbaa !44", "%293 = sub i32 1, %4, !dbg !278", "%294 = add i32 %293, %292, !dbg !279", "%295 = load i32, i32* @C, align 4, !dbg !280, !tbaa !44", "%296 = sub i32 1, %5, !dbg !281", "%297 = add i32 %296, %295, !dbg !282", "%298 = mul nsw i32 %297, %294, !dbg !283", "call void @llvm.dbg.value(metadata i32 %298, metadata !81, metadata !DIExpression()), !dbg !121", "%299 = sext i32 %298 to i64, !dbg !284", "%300 = mul nsw i64 %291, %299, !dbg !285", "%301 = srem i64 %300, 1000000007, !dbg !286", "store i64 %301, i64* @ans, align 8, !dbg !287, !tbaa !68", "%302 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 %301), !dbg !288", "ret i32 0, !dbg !289"], "bb_num": 51, "function_param_list": [], "function_blocks": [{"block_name": "block-0", "block_var_list": ["%1", "%2", "%3", "%4", "%5", "%6", "%7"], "inst_num": 10, "block_inst_list": ["%1 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @R, i32* nonnull @C), !dbg !40", "%2 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @X, i32* nonnull @Y), !dbg !41", "%3 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @D, i32* nonnull @L), !dbg !42", "%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "%6 = mul nsw i32 %5, %4, !dbg !49", "call void @llvm.dbg.value(metadata i32 %6, metadata !38, metadata !DIExpression()), !dbg !90", "call void @llvm.dbg.value(metadata i32 0, metadata !39, metadata !DIExpression()), !dbg !90", "%7 = icmp slt i32 %6, 0, !dbg !61", "br i1 %7, label %56, label %8, !dbg !64"], "block_insts": [{"inst_id": "66", "instruction": "%1 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @R, i32* nonnull @C), !dbg !40", "opcode": "call", "operand_list": ["@.str", "@R", "@C"], "var_name": "%1", "called_function_name": "@__isoc99_scanf", "called_function_return_type": "dso_local i32"}, {"inst_id": "67", "instruction": "%2 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @X, i32* nonnull @Y), !dbg !41", "opcode": "call", "operand_list": ["@.str", "@X", "@Y"], "var_name": "%2", "called_function_name": "@__isoc99_scanf", "called_function_return_type": "dso_local i32"}, {"inst_id": "68", "instruction": "%3 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32* nonnull @D, i32* nonnull @L), !dbg !42", "opcode": "call", "operand_list": ["@.str", "@D", "@L"], "var_name": "%3", "called_function_name": "@__isoc99_scanf", "called_function_return_type": "dso_local i32"}, {"inst_id": "69", "instruction": "%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "opcode": "load", "operand_list": ["@X"], "var_name": "%4"}, {"inst_id": "70", "instruction": "%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "opcode": "load", "operand_list": ["@Y"], "var_name": "%5"}, {"inst_id": "71", "instruction": "%6 = mul nsw i32 %5, %4, !dbg !49", "opcode": "mul", "operand_list": ["%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44"], "var_name": "%6"}, {"inst_id": "72", "instruction": "call void @llvm.dbg.value(metadata i32 %6, metadata !38, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i32 %6", "!38 = !DILocalVariable(name: \"n\", arg: 1, scope: !34, file: !3, line: 13, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "73", "instruction": "call void @llvm.dbg.value(metadata i32 0, metadata !39, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i32 0", "!39 = !DILocalVariable(name: \"i\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "74", "instruction": "%7 = icmp slt i32 %6, 0, !dbg !61", "opcode": "icmp", "operand_list": ["%6 = mul nsw i32 %5, %4, !dbg !49", "i32 0"], "var_name": "%7"}, {"inst_id": "75", "instruction": "br i1 %7, label %56, label %8, !dbg !64", "opcode": "br", "branch_condition": "%7 = icmp slt i32 %6, 0, !dbg !61", "true_target": "%56", "false_target": "%8"}]}, {"block_name": "block-8", "block_var_list": ["%9", "%10"], "inst_num": 3, "block_inst_list": ["%9 = add nuw i32 %6, 1, !dbg !64", "%10 = zext i32 %9 to i64, !dbg !61", "br label %11, !dbg !64"], "block_insts": [{"inst_id": "76", "instruction": "%9 = add nuw i32 %6, 1, !dbg !64", "opcode": "add", "operand_list": ["%6 = mul nsw i32 %5, %4, !dbg !49", "i32 1"], "var_name": "%9"}, {"inst_id": "77", "instruction": "%10 = zext i32 %9 to i64, !dbg !61", "opcode": "zext", "operand_list": ["%9 = add nuw i32 %6, 1, !dbg !64"], "var_name": "%10"}, {"inst_id": "78", "instruction": "br label %11, !dbg !64", "opcode": "br", "branch_condition": "False", "br_target": "%11"}]}, {"block_name": "block-11", "block_var_list": ["%12", "%13", "%14", "%15"], "inst_num": 8, "block_inst_list": ["%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "call void @llvm.dbg.value(metadata i64 %12, metadata !39, metadata !DIExpression()), !dbg !90", "%13 = add nsw i64 %12, -1, !dbg !65", "%14 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 0, !dbg !65", "store i64 1, i64* %14, align 8, !dbg !67, !tbaa !68", "call void @llvm.dbg.value(metadata i32 1, metadata !40, metadata !DIExpression()), !dbg !90", "%15 = icmp ugt i64 %12, 1, !dbg !70", "br i1 %15, label %16, label %52, !dbg !73"], "block_insts": [{"inst_id": "79", "instruction": "%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "opcode": "phi", "operand_list": ["i64 0", "%54 = add nuw nsw i64 %12, 1, !dbg !87"], "var_name": "%12"}, {"inst_id": "80", "instruction": "call void @llvm.dbg.value(metadata i64 %12, metadata !39, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i64 %12", "!39 = !DILocalVariable(name: \"i\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "81", "instruction": "%13 = add nsw i64 %12, -1, !dbg !65", "opcode": "add", "operand_list": ["%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "i64 -1"], "var_name": "%13"}, {"inst_id": "82", "instruction": "%14 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 0, !dbg !65", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "i64 0"], "var_name": "%14"}, {"inst_id": "83", "instruction": "store i64 1, i64* %14, align 8, !dbg !67, !tbaa !68", "opcode": "store", "operand_list": ["i64 1", "%14 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 0, !dbg !65"]}, {"inst_id": "84", "instruction": "call void @llvm.dbg.value(metadata i32 1, metadata !40, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i32 1", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "85", "instruction": "%15 = icmp ugt i64 %12, 1, !dbg !70", "opcode": "icmp", "operand_list": ["%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "i64 1"], "var_name": "%15"}, {"inst_id": "86", "instruction": "br i1 %15, label %16, label %52, !dbg !73", "opcode": "br", "branch_condition": "%15 = icmp ugt i64 %12, 1, !dbg !70", "true_target": "%16", "false_target": "%52"}]}, {"block_name": "block-16", "block_var_list": ["%17", "%18", "%19", "%20", "%21"], "inst_num": 6, "block_inst_list": ["%17 = add nsw i64 %12, -1, !dbg !74", "%18 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 0, !dbg !74", "%19 = load i64, i64* %18, align 8, !dbg !76, !tbaa !68", "%20 = and i64 %13, 1, !dbg !73", "%21 = icmp eq i64 %12, 2, !dbg !73", "br i1 %21, label %42, label %22, !dbg !73"], "block_insts": [{"inst_id": "87", "instruction": "%17 = add nsw i64 %12, -1, !dbg !74", "opcode": "add", "operand_list": ["%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "i64 -1"], "var_name": "%17"}, {"inst_id": "88", "instruction": "%18 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 0, !dbg !74", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%17 = add nsw i64 %12, -1, !dbg !74", "i64 0"], "var_name": "%18"}, {"inst_id": "89", "instruction": "%19 = load i64, i64* %18, align 8, !dbg !76, !tbaa !68", "opcode": "load", "operand_list": ["%18 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 0, !dbg !74"], "var_name": "%19"}, {"inst_id": "90", "instruction": "%20 = and i64 %13, 1, !dbg !73", "opcode": "and", "operand_list": ["%13 = add nsw i64 %12, -1, !dbg !65", "i64 1"], "var_name": "%20"}, {"inst_id": "91", "instruction": "%21 = icmp eq i64 %12, 2, !dbg !73", "opcode": "icmp", "operand_list": ["%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "i64 2"], "var_name": "%21"}, {"inst_id": "92", "instruction": "br i1 %21, label %42, label %22, !dbg !73", "opcode": "br", "branch_condition": "%21 = icmp eq i64 %12, 2, !dbg !73", "true_target": "%42", "false_target": "%22"}]}, {"block_name": "block-22", "block_var_list": ["%23"], "inst_num": 2, "block_inst_list": ["%23 = sub i64 %13, %20, !dbg !73", "br label %24, !dbg !73"], "block_insts": [{"inst_id": "93", "instruction": "%23 = sub i64 %13, %20, !dbg !73", "opcode": "sub", "operand_list": ["%13 = add nsw i64 %12, -1, !dbg !65", "%20 = and i64 %13, 1, !dbg !73"], "var_name": "%23"}, {"inst_id": "94", "instruction": "br label %24, !dbg !73", "opcode": "br", "branch_condition": "False", "br_target": "%24"}]}, {"block_name": "block-24", "block_var_list": ["%25", "%26", "%27", "%28", "%29", "%30", "%31", "%32", "%33", "%34", "%35", "%36", "%37", "%38", "%39", "%40", "%41"], "inst_num": 23, "block_inst_list": ["%25 = phi i64 [ %19, %22 ], [ %35, %24 ], !dbg !76", "%26 = phi i64 [ 1, %22 ], [ %39, %24 ]", "%27 = phi i64 [ %23, %22 ], [ %40, %24 ]", "call void @llvm.dbg.value(metadata i64 %26, metadata !40, metadata !DIExpression()), !dbg !90", "%28 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %26, !dbg !77", "%29 = load i64, i64* %28, align 8, !dbg !77, !tbaa !68", "%30 = add nsw i64 %29, %25, !dbg !78", "%31 = srem i64 %30, 1000000007, !dbg !79", "%32 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %26, !dbg !80", "store i64 %31, i64* %32, align 8, !dbg !81, !tbaa !68", "%33 = add nuw nsw i64 %26, 1, !dbg !82", "call void @llvm.dbg.value(metadata i64 %33, metadata !40, metadata !DIExpression()), !dbg !90", "%34 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %33, !dbg !77", "%35 = load i64, i64* %34, align 8, !dbg !77, !tbaa !68", "%36 = add nsw i64 %35, %29, !dbg !78", "%37 = srem i64 %36, 1000000007, !dbg !79", "%38 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %33, !dbg !80", "store i64 %37, i64* %38, align 8, !dbg !81, !tbaa !68", "%39 = add nuw nsw i64 %26, 2, !dbg !82", "call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression()), !dbg !90", "%40 = add i64 %27, -2, !dbg !73", "%41 = icmp eq i64 %40, 0, !dbg !73", "br i1 %41, label %42, label %24, !dbg !73, !llvm.loop !83"], "block_insts": [{"inst_id": "95", "instruction": "%25 = phi i64 [ %19, %22 ], [ %35, %24 ], !dbg !76", "opcode": "phi", "operand_list": ["%19 = load i64, i64* %18, align 8, !dbg !76, !tbaa !68", "%35 = load i64, i64* %34, align 8, !dbg !77, !tbaa !68"], "var_name": "%25"}, {"inst_id": "96", "instruction": "%26 = phi i64 [ 1, %22 ], [ %39, %24 ]", "opcode": "phi", "operand_list": ["i64 1", "%39 = add nuw nsw i64 %26, 2, !dbg !82"], "var_name": "%26"}, {"inst_id": "97", "instruction": "%27 = phi i64 [ %23, %22 ], [ %40, %24 ]", "opcode": "phi", "operand_list": ["%23 = sub i64 %13, %20, !dbg !73", "%40 = add i64 %27, -2, !dbg !73"], "var_name": "%27"}, {"inst_id": "98", "instruction": "call void @llvm.dbg.value(metadata i64 %26, metadata !40, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i64 %26", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "99", "instruction": "%28 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %26, !dbg !77", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%17 = add nsw i64 %12, -1, !dbg !74", "%26 = phi i64 [ 1, %22 ], [ %39, %24 ]"], "var_name": "%28"}, {"inst_id": "100", "instruction": "%29 = load i64, i64* %28, align 8, !dbg !77, !tbaa !68", "opcode": "load", "operand_list": ["%28 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %26, !dbg !77"], "var_name": "%29"}, {"inst_id": "101", "instruction": "%30 = add nsw i64 %29, %25, !dbg !78", "opcode": "add", "operand_list": ["%29 = load i64, i64* %28, align 8, !dbg !77, !tbaa !68", "%25 = phi i64 [ %19, %22 ], [ %35, %24 ], !dbg !76"], "var_name": "%30"}, {"inst_id": "102", "instruction": "%31 = srem i64 %30, 1000000007, !dbg !79", "opcode": "srem", "operand_list": ["%30 = add nsw i64 %29, %25, !dbg !78", "i64 1000000007"], "var_name": "%31"}, {"inst_id": "103", "instruction": "%32 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %26, !dbg !80", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "%26 = phi i64 [ 1, %22 ], [ %39, %24 ]"], "var_name": "%32"}, {"inst_id": "104", "instruction": "store i64 %31, i64* %32, align 8, !dbg !81, !tbaa !68", "opcode": "store", "operand_list": ["%31 = srem i64 %30, 1000000007, !dbg !79", "%32 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %26, !dbg !80"]}, {"inst_id": "105", "instruction": "%33 = add nuw nsw i64 %26, 1, !dbg !82", "opcode": "add", "operand_list": ["%26 = phi i64 [ 1, %22 ], [ %39, %24 ]", "i64 1"], "var_name": "%33"}, {"inst_id": "106", "instruction": "call void @llvm.dbg.value(metadata i64 %33, metadata !40, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i64 %33", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "107", "instruction": "%34 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %33, !dbg !77", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%17 = add nsw i64 %12, -1, !dbg !74", "%33 = add nuw nsw i64 %26, 1, !dbg !82"], "var_name": "%34"}, {"inst_id": "108", "instruction": "%35 = load i64, i64* %34, align 8, !dbg !77, !tbaa !68", "opcode": "load", "operand_list": ["%34 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %33, !dbg !77"], "var_name": "%35"}, {"inst_id": "109", "instruction": "%36 = add nsw i64 %35, %29, !dbg !78", "opcode": "add", "operand_list": ["%35 = load i64, i64* %34, align 8, !dbg !77, !tbaa !68", "%29 = load i64, i64* %28, align 8, !dbg !77, !tbaa !68"], "var_name": "%36"}, {"inst_id": "110", "instruction": "%37 = srem i64 %36, 1000000007, !dbg !79", "opcode": "srem", "operand_list": ["%36 = add nsw i64 %35, %29, !dbg !78", "i64 1000000007"], "var_name": "%37"}, {"inst_id": "111", "instruction": "%38 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %33, !dbg !80", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "%33 = add nuw nsw i64 %26, 1, !dbg !82"], "var_name": "%38"}, {"inst_id": "112", "instruction": "store i64 %37, i64* %38, align 8, !dbg !81, !tbaa !68", "opcode": "store", "operand_list": ["%37 = srem i64 %36, 1000000007, !dbg !79", "%38 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %33, !dbg !80"]}, {"inst_id": "113", "instruction": "%39 = add nuw nsw i64 %26, 2, !dbg !82", "opcode": "add", "operand_list": ["%26 = phi i64 [ 1, %22 ], [ %39, %24 ]", "i64 2"], "var_name": "%39"}, {"inst_id": "114", "instruction": "call void @llvm.dbg.value(metadata i64 %39, metadata !40, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i64 %39", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "115", "instruction": "%40 = add i64 %27, -2, !dbg !73", "opcode": "add", "operand_list": ["%27 = phi i64 [ %23, %22 ], [ %40, %24 ]", "i64 -2"], "var_name": "%40"}, {"inst_id": "116", "instruction": "%41 = icmp eq i64 %40, 0, !dbg !73", "opcode": "icmp", "operand_list": ["%40 = add i64 %27, -2, !dbg !73", "i64 0"], "var_name": "%41"}, {"inst_id": "117", "instruction": "br i1 %41, label %42, label %24, !dbg !73, !llvm.loop !83", "opcode": "br", "branch_condition": "%41 = icmp eq i64 %40, 0, !dbg !73", "true_target": "%42", "false_target": "%24"}]}, {"block_name": "block-42", "block_var_list": ["%43", "%44", "%45"], "inst_num": 4, "block_inst_list": ["%43 = phi i64 [ %19, %16 ], [ %35, %24 ]", "%44 = phi i64 [ 1, %16 ], [ %39, %24 ]", "%45 = icmp eq i64 %20, 0, !dbg !73", "br i1 %45, label %52, label %46, !dbg !73"], "block_insts": [{"inst_id": "118", "instruction": "%43 = phi i64 [ %19, %16 ], [ %35, %24 ]", "opcode": "phi", "operand_list": ["%19 = load i64, i64* %18, align 8, !dbg !76, !tbaa !68", "%35 = load i64, i64* %34, align 8, !dbg !77, !tbaa !68"], "var_name": "%43"}, {"inst_id": "119", "instruction": "%44 = phi i64 [ 1, %16 ], [ %39, %24 ]", "opcode": "phi", "operand_list": ["i64 1", "%39 = add nuw nsw i64 %26, 2, !dbg !82"], "var_name": "%44"}, {"inst_id": "120", "instruction": "%45 = icmp eq i64 %20, 0, !dbg !73", "opcode": "icmp", "operand_list": ["%20 = and i64 %13, 1, !dbg !73", "i64 0"], "var_name": "%45"}, {"inst_id": "121", "instruction": "br i1 %45, label %52, label %46, !dbg !73", "opcode": "br", "branch_condition": "%45 = icmp eq i64 %20, 0, !dbg !73", "true_target": "%52", "false_target": "%46"}]}, {"block_name": "block-46", "block_var_list": ["%47", "%48", "%49", "%50", "%51"], "inst_num": 9, "block_inst_list": ["call void @llvm.dbg.value(metadata i64 %44, metadata !40, metadata !DIExpression()), !dbg !90", "%47 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %44, !dbg !77", "%48 = load i64, i64* %47, align 8, !dbg !77, !tbaa !68", "%49 = add nsw i64 %48, %43, !dbg !78", "%50 = srem i64 %49, 1000000007, !dbg !79", "%51 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %44, !dbg !80", "store i64 %50, i64* %51, align 8, !dbg !81, !tbaa !68", "call void @llvm.dbg.value(metadata i64 %44, metadata !40, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !90", "br label %52, !dbg !85"], "block_insts": [{"inst_id": "122", "instruction": "call void @llvm.dbg.value(metadata i64 %44, metadata !40, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i64 %44", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "123", "instruction": "%47 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %44, !dbg !77", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%17 = add nsw i64 %12, -1, !dbg !74", "%44 = phi i64 [ 1, %16 ], [ %39, %24 ]"], "var_name": "%47"}, {"inst_id": "124", "instruction": "%48 = load i64, i64* %47, align 8, !dbg !77, !tbaa !68", "opcode": "load", "operand_list": ["%47 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %17, i64 %44, !dbg !77"], "var_name": "%48"}, {"inst_id": "125", "instruction": "%49 = add nsw i64 %48, %43, !dbg !78", "opcode": "add", "operand_list": ["%48 = load i64, i64* %47, align 8, !dbg !77, !tbaa !68", "%43 = phi i64 [ %19, %16 ], [ %35, %24 ]"], "var_name": "%49"}, {"inst_id": "126", "instruction": "%50 = srem i64 %49, 1000000007, !dbg !79", "opcode": "srem", "operand_list": ["%49 = add nsw i64 %48, %43, !dbg !78", "i64 1000000007"], "var_name": "%50"}, {"inst_id": "127", "instruction": "%51 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %44, !dbg !80", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "%44 = phi i64 [ 1, %16 ], [ %39, %24 ]"], "var_name": "%51"}, {"inst_id": "128", "instruction": "store i64 %50, i64* %51, align 8, !dbg !81, !tbaa !68", "opcode": "store", "operand_list": ["%50 = srem i64 %49, 1000000007, !dbg !79", "%51 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %44, !dbg !80"]}, {"inst_id": "129", "instruction": "call void @llvm.dbg.value(metadata i64 %44, metadata !40, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !90", "opcode": "call", "operand_list": ["i64 %44", "!40 = !DILocalVariable(name: \"j\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "130", "instruction": "br label %52, !dbg !85", "opcode": "br", "branch_condition": "False", "br_target": "%52"}]}, {"block_name": "block-52", "block_var_list": ["%53", "%54", "%55"], "inst_num": 6, "block_inst_list": ["%53 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %12, !dbg !85", "store i64 1, i64* %53, align 8, !dbg !86, !tbaa !68", "%54 = add nuw nsw i64 %12, 1, !dbg !87", "call void @llvm.dbg.value(metadata i64 %54, metadata !39, metadata !DIExpression()), !dbg !90", "%55 = icmp eq i64 %54, %10, !dbg !61", "br i1 %55, label %56, label %11, !dbg !64, !llvm.loop !88"], "block_insts": [{"inst_id": "131", "instruction": "%53 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %12, !dbg !85", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "%12 = phi i64 [ 0, %8 ], [ %54, %52 ]"], "var_name": "%53"}, {"inst_id": "132", "instruction": "store i64 1, i64* %53, align 8, !dbg !86, !tbaa !68", "opcode": "store", "operand_list": ["i64 1", "%53 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %12, i64 %12, !dbg !85"]}, {"inst_id": "133", "instruction": "%54 = add nuw nsw i64 %12, 1, !dbg !87", "opcode": "add", "operand_list": ["%12 = phi i64 [ 0, %8 ], [ %54, %52 ]", "i64 1"], "var_name": "%54"}, {"inst_id": "134", "instruction": "call void @llvm.dbg.value(metadata i64 %54, metadata !39, metadata !DIExpression()), !dbg !90", "opcode": "call", "operand_list": ["i64 %54", "!39 = !DILocalVariable(name: \"i\", scope: !34, file: !3, line: 14, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "135", "instruction": "%55 = icmp eq i64 %54, %10, !dbg !61", "opcode": "icmp", "operand_list": ["%54 = add nuw nsw i64 %12, 1, !dbg !87", "%10 = zext i32 %9 to i64, !dbg !61"], "var_name": "%55"}, {"inst_id": "136", "instruction": "br i1 %55, label %56, label %11, !dbg !64, !llvm.loop !88", "opcode": "br", "branch_condition": "%55 = icmp eq i64 %54, %10, !dbg !61", "true_target": "%56", "false_target": "%11"}]}, {"block_name": "block-56", "block_var_list": ["%57", "%58", "%59", "%60", "%61", "%62", "%63", "%64", "%65", "%66", "%67", "%68", "%69", "%70"], "inst_num": 17, "block_inst_list": ["%57 = sext i32 %6 to i64, !dbg !90", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44", "%59 = sext i32 %58 to i64, !dbg !90", "%60 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %57, i64 %59, !dbg !90", "%61 = load i64, i64* %60, align 8, !dbg !90, !tbaa !68", "%62 = sub nsw i32 %6, %58, !dbg !92", "%63 = sext i32 %62 to i64, !dbg !93", "%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%65 = sext i32 %64 to i64, !dbg !93", "%66 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %63, i64 %65, !dbg !93", "%67 = load i64, i64* %66, align 8, !dbg !93, !tbaa !68", "%68 = mul nsw i64 %67, %61, !dbg !95", "%69 = srem i64 %68, 1000000007, !dbg !96", "store i64 %69, i64* @ans, align 8, !dbg !97, !tbaa !68", "call void @llvm.dbg.value(metadata i32 0, metadata !80, metadata !DIExpression()), !dbg !121", "%70 = icmp sgt i32 %4, 1, !dbg !99", "br i1 %70, label %71, label %96, !dbg !101"], "block_insts": [{"inst_id": "137", "instruction": "%57 = sext i32 %6 to i64, !dbg !90", "opcode": "sext", "operand_list": ["%6 = mul nsw i32 %5, %4, !dbg !49"], "var_name": "%57"}, {"inst_id": "138", "instruction": "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44", "opcode": "load", "operand_list": ["@D"], "var_name": "%58"}, {"inst_id": "139", "instruction": "%59 = sext i32 %58 to i64, !dbg !90", "opcode": "sext", "operand_list": ["%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%59"}, {"inst_id": "140", "instruction": "%60 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %57, i64 %59, !dbg !90", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%57 = sext i32 %6 to i64, !dbg !90", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%60"}, {"inst_id": "141", "instruction": "%61 = load i64, i64* %60, align 8, !dbg !90, !tbaa !68", "opcode": "load", "operand_list": ["%60 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %57, i64 %59, !dbg !90"], "var_name": "%61"}, {"inst_id": "142", "instruction": "%62 = sub nsw i32 %6, %58, !dbg !92", "opcode": "sub", "operand_list": ["%6 = mul nsw i32 %5, %4, !dbg !49", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%62"}, {"inst_id": "143", "instruction": "%63 = sext i32 %62 to i64, !dbg !93", "opcode": "sext", "operand_list": ["%62 = sub nsw i32 %6, %58, !dbg !92"], "var_name": "%63"}, {"inst_id": "144", "instruction": "%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "opcode": "load", "operand_list": ["@L"], "var_name": "%64"}, {"inst_id": "145", "instruction": "%65 = sext i32 %64 to i64, !dbg !93", "opcode": "sext", "operand_list": ["%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44"], "var_name": "%65"}, {"inst_id": "146", "instruction": "%66 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %63, i64 %65, !dbg !93", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%63 = sext i32 %62 to i64, !dbg !93", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%66"}, {"inst_id": "147", "instruction": "%67 = load i64, i64* %66, align 8, !dbg !93, !tbaa !68", "opcode": "load", "operand_list": ["%66 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %63, i64 %65, !dbg !93"], "var_name": "%67"}, {"inst_id": "148", "instruction": "%68 = mul nsw i64 %67, %61, !dbg !95", "opcode": "mul", "operand_list": ["%67 = load i64, i64* %66, align 8, !dbg !93, !tbaa !68", "%61 = load i64, i64* %60, align 8, !dbg !90, !tbaa !68"], "var_name": "%68"}, {"inst_id": "149", "instruction": "%69 = srem i64 %68, 1000000007, !dbg !96", "opcode": "srem", "operand_list": ["%68 = mul nsw i64 %67, %61, !dbg !95", "i64 1000000007"], "var_name": "%69"}, {"inst_id": "150", "instruction": "store i64 %69, i64* @ans, align 8, !dbg !97, !tbaa !68", "opcode": "store", "operand_list": ["%69 = srem i64 %68, 1000000007, !dbg !96", "@ans"]}, {"inst_id": "151", "instruction": "call void @llvm.dbg.value(metadata i32 0, metadata !80, metadata !DIExpression()), !dbg !121", "opcode": "call", "operand_list": ["i32 0", "!80 = !DILocalVariable(name: \"flag\", scope: !76, file: !3, line: 35, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "152", "instruction": "%70 = icmp sgt i32 %4, 1, !dbg !99", "opcode": "icmp", "operand_list": ["%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "i32 1"], "var_name": "%70"}, {"inst_id": "153", "instruction": "br i1 %70, label %71, label %96, !dbg !101", "opcode": "br", "branch_condition": "%70 = icmp sgt i32 %4, 1, !dbg !99", "true_target": "%71", "false_target": "%96"}]}, {"block_name": "block-71", "block_var_list": ["%72", "%73", "%74", "%75"], "inst_num": 5, "block_inst_list": ["%72 = add nsw i32 %4, -1, !dbg !102", "%73 = mul nsw i32 %72, %5, !dbg !103", "%74 = add nsw i32 %64, %58, !dbg !104", "%75 = icmp slt i32 %73, %74, !dbg !105", "br i1 %75, label %96, label %76, !dbg !106"], "block_insts": [{"inst_id": "154", "instruction": "%72 = add nsw i32 %4, -1, !dbg !102", "opcode": "add", "operand_list": ["%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "i32 -1"], "var_name": "%72"}, {"inst_id": "155", "instruction": "%73 = mul nsw i32 %72, %5, !dbg !103", "opcode": "mul", "operand_list": ["%72 = add nsw i32 %4, -1, !dbg !102", "%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44"], "var_name": "%73"}, {"inst_id": "156", "instruction": "%74 = add nsw i32 %64, %58, !dbg !104", "opcode": "add", "operand_list": ["%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%74"}, {"inst_id": "157", "instruction": "%75 = icmp slt i32 %73, %74, !dbg !105", "opcode": "icmp", "operand_list": ["%73 = mul nsw i32 %72, %5, !dbg !103", "%74 = add nsw i32 %64, %58, !dbg !104"], "var_name": "%75"}, {"inst_id": "158", "instruction": "br i1 %75, label %96, label %76, !dbg !106", "opcode": "br", "branch_condition": "%75 = icmp slt i32 %73, %74, !dbg !105", "true_target": "%96", "false_target": "%76"}]}, {"block_name": "block-76", "block_var_list": ["%77", "%78", "%79", "%80", "%81", "%82", "%83", "%84", "%85", "%86", "%87", "%88", "%89"], "inst_num": 15, "block_inst_list": ["%77 = sext i32 %73 to i64, !dbg !107", "%78 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %77, i64 %59, !dbg !107", "%79 = load i64, i64* %78, align 8, !dbg !107, !tbaa !68", "%80 = sub nsw i32 %73, %58, !dbg !109", "%81 = sext i32 %80 to i64, !dbg !110", "%82 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %81, i64 %65, !dbg !110", "%83 = load i64, i64* %82, align 8, !dbg !110, !tbaa !68", "%84 = mul nsw i64 %83, %79, !dbg !111", "%85 = srem i64 %84, 1000000007, !dbg !112", "%86 = shl nsw i64 %85, 1, !dbg !113", "%87 = srem i64 %86, 1000000007, !dbg !114", "%88 = sub nsw i64 %69, %87, !dbg !115", "store i64 %88, i64* @ans, align 8, !dbg !115, !tbaa !68", "%89 = icmp sgt i64 %88, -1, !dbg !116", "br i1 %89, label %90, label %94, !dbg !118"], "block_insts": [{"inst_id": "159", "instruction": "%77 = sext i32 %73 to i64, !dbg !107", "opcode": "sext", "operand_list": ["%73 = mul nsw i32 %72, %5, !dbg !103"], "var_name": "%77"}, {"inst_id": "160", "instruction": "%78 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %77, i64 %59, !dbg !107", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%77 = sext i32 %73 to i64, !dbg !107", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%78"}, {"inst_id": "161", "instruction": "%79 = load i64, i64* %78, align 8, !dbg !107, !tbaa !68", "opcode": "load", "operand_list": ["%78 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %77, i64 %59, !dbg !107"], "var_name": "%79"}, {"inst_id": "162", "instruction": "%80 = sub nsw i32 %73, %58, !dbg !109", "opcode": "sub", "operand_list": ["%73 = mul nsw i32 %72, %5, !dbg !103", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%80"}, {"inst_id": "163", "instruction": "%81 = sext i32 %80 to i64, !dbg !110", "opcode": "sext", "operand_list": ["%80 = sub nsw i32 %73, %58, !dbg !109"], "var_name": "%81"}, {"inst_id": "164", "instruction": "%82 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %81, i64 %65, !dbg !110", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%81 = sext i32 %80 to i64, !dbg !110", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%82"}, {"inst_id": "165", "instruction": "%83 = load i64, i64* %82, align 8, !dbg !110, !tbaa !68", "opcode": "load", "operand_list": ["%82 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %81, i64 %65, !dbg !110"], "var_name": "%83"}, {"inst_id": "166", "instruction": "%84 = mul nsw i64 %83, %79, !dbg !111", "opcode": "mul", "operand_list": ["%83 = load i64, i64* %82, align 8, !dbg !110, !tbaa !68", "%79 = load i64, i64* %78, align 8, !dbg !107, !tbaa !68"], "var_name": "%84"}, {"inst_id": "167", "instruction": "%85 = srem i64 %84, 1000000007, !dbg !112", "opcode": "srem", "operand_list": ["%84 = mul nsw i64 %83, %79, !dbg !111", "i64 1000000007"], "var_name": "%85"}, {"inst_id": "168", "instruction": "%86 = shl nsw i64 %85, 1, !dbg !113", "opcode": "shl", "operand_list": ["%85 = srem i64 %84, 1000000007, !dbg !112", "i64 1"], "var_name": "%86"}, {"inst_id": "169", "instruction": "%87 = srem i64 %86, 1000000007, !dbg !114", "opcode": "srem", "operand_list": ["%86 = shl nsw i64 %85, 1, !dbg !113", "i64 1000000007"], "var_name": "%87"}, {"inst_id": "170", "instruction": "%88 = sub nsw i64 %69, %87, !dbg !115", "opcode": "sub", "operand_list": ["%69 = srem i64 %68, 1000000007, !dbg !96", "%87 = srem i64 %86, 1000000007, !dbg !114"], "var_name": "%88"}, {"inst_id": "171", "instruction": "store i64 %88, i64* @ans, align 8, !dbg !115, !tbaa !68", "opcode": "store", "operand_list": ["%88 = sub nsw i64 %69, %87, !dbg !115", "@ans"]}, {"inst_id": "172", "instruction": "%89 = icmp sgt i64 %88, -1, !dbg !116", "opcode": "icmp", "operand_list": ["%88 = sub nsw i64 %69, %87, !dbg !115", "i64 -1"], "var_name": "%89"}, {"inst_id": "173", "instruction": "br i1 %89, label %90, label %94, !dbg !118", "opcode": "br", "branch_condition": "%89 = icmp sgt i64 %88, -1, !dbg !116", "true_target": "%90", "false_target": "%94"}]}, {"block_name": "block-90", "block_var_list": ["%91", "%92", "%93"], "inst_num": 5, "block_inst_list": ["%91 = trunc i64 %88 to i32, !dbg !119", "%92 = urem i32 %91, 1000000007, !dbg !119", "%93 = zext i32 %92 to i64, !dbg !119", "store i64 %93, i64* @ans, align 8, !dbg !119, !tbaa !68", "br label %96, !dbg !120"], "block_insts": [{"inst_id": "174", "instruction": "%91 = trunc i64 %88 to i32, !dbg !119", "opcode": "trunc", "operand_list": ["%88 = sub nsw i64 %69, %87, !dbg !115"], "var_name": "%91"}, {"inst_id": "175", "instruction": "%92 = urem i32 %91, 1000000007, !dbg !119", "opcode": "urem", "operand_list": ["%91 = trunc i64 %88 to i32, !dbg !119", "i32 1000000007"], "var_name": "%92"}, {"inst_id": "176", "instruction": "%93 = zext i32 %92 to i64, !dbg !119", "opcode": "zext", "operand_list": ["%92 = urem i32 %91, 1000000007, !dbg !119"], "var_name": "%93"}, {"inst_id": "177", "instruction": "store i64 %93, i64* @ans, align 8, !dbg !119, !tbaa !68", "opcode": "store", "operand_list": ["%93 = zext i32 %92 to i64, !dbg !119", "@ans"]}, {"inst_id": "178", "instruction": "br label %96, !dbg !120", "opcode": "br", "branch_condition": "False", "br_target": "%96"}]}, {"block_name": "block-94", "block_var_list": ["%95"], "inst_num": 3, "block_inst_list": ["%95 = add nsw i64 %88, 1000000007, !dbg !121", "store i64 %95, i64* @ans, align 8, !dbg !121, !tbaa !68", "br label %96"], "block_insts": [{"inst_id": "179", "instruction": "%95 = add nsw i64 %88, 1000000007, !dbg !121", "opcode": "add", "operand_list": ["%88 = sub nsw i64 %69, %87, !dbg !115", "i64 1000000007"], "var_name": "%95"}, {"inst_id": "180", "instruction": "store i64 %95, i64* @ans, align 8, !dbg !121, !tbaa !68", "opcode": "store", "operand_list": ["%95 = add nsw i64 %88, 1000000007, !dbg !121", "@ans"]}, {"inst_id": "181", "instruction": "br label %96", "opcode": "br", "branch_condition": "False", "br_target": "%96"}]}, {"block_name": "block-96", "block_var_list": ["%97", "%98"], "inst_num": 3, "block_inst_list": ["%97 = phi i64 [ %69, %71 ], [ %93, %90 ], [ %95, %94 ], [ %69, %56 ]", "%98 = icmp sgt i32 %5, 1, !dbg !122", "br i1 %98, label %99, label %152, !dbg !124"], "block_insts": [{"inst_id": "182", "instruction": "%97 = phi i64 [ %69, %71 ], [ %93, %90 ], [ %95, %94 ], [ %69, %56 ]", "opcode": "phi", "operand_list": ["%69 = srem i64 %68, 1000000007, !dbg !96", "%93 = zext i32 %92 to i64, !dbg !119", "%95 = add nsw i64 %88, 1000000007, !dbg !121", "%69 = srem i64 %68, 1000000007, !dbg !96"], "var_name": "%97"}, {"inst_id": "183", "instruction": "%98 = icmp sgt i32 %5, 1, !dbg !122", "opcode": "icmp", "operand_list": ["%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "i32 1"], "var_name": "%98"}, {"inst_id": "184", "instruction": "br i1 %98, label %99, label %152, !dbg !124", "opcode": "br", "branch_condition": "%98 = icmp sgt i32 %5, 1, !dbg !122", "true_target": "%99", "false_target": "%152"}]}, {"block_name": "block-99", "block_var_list": ["%100", "%101", "%102", "%103"], "inst_num": 5, "block_inst_list": ["%100 = add nsw i32 %5, -1, !dbg !125", "%101 = mul nsw i32 %100, %4, !dbg !126", "%102 = add nsw i32 %64, %58, !dbg !127", "%103 = icmp slt i32 %101, %102, !dbg !128", "br i1 %103, label %126, label %104, !dbg !129"], "block_insts": [{"inst_id": "185", "instruction": "%100 = add nsw i32 %5, -1, !dbg !125", "opcode": "add", "operand_list": ["%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "i32 -1"], "var_name": "%100"}, {"inst_id": "186", "instruction": "%101 = mul nsw i32 %100, %4, !dbg !126", "opcode": "mul", "operand_list": ["%100 = add nsw i32 %5, -1, !dbg !125", "%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44"], "var_name": "%101"}, {"inst_id": "187", "instruction": "%102 = add nsw i32 %64, %58, !dbg !127", "opcode": "add", "operand_list": ["%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%102"}, {"inst_id": "188", "instruction": "%103 = icmp slt i32 %101, %102, !dbg !128", "opcode": "icmp", "operand_list": ["%101 = mul nsw i32 %100, %4, !dbg !126", "%102 = add nsw i32 %64, %58, !dbg !127"], "var_name": "%103"}, {"inst_id": "189", "instruction": "br i1 %103, label %126, label %104, !dbg !129", "opcode": "br", "branch_condition": "%103 = icmp slt i32 %101, %102, !dbg !128", "true_target": "%126", "false_target": "%104"}]}, {"block_name": "block-104", "block_var_list": ["%105", "%106", "%107", "%108", "%109", "%110", "%111", "%112", "%113", "%114", "%115", "%116", "%117"], "inst_num": 15, "block_inst_list": ["%105 = sext i32 %101 to i64, !dbg !130", "%106 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %105, i64 %59, !dbg !130", "%107 = load i64, i64* %106, align 8, !dbg !130, !tbaa !68", "%108 = sub nsw i32 %101, %58, !dbg !132", "%109 = sext i32 %108 to i64, !dbg !133", "%110 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %109, i64 %65, !dbg !133", "%111 = load i64, i64* %110, align 8, !dbg !133, !tbaa !68", "%112 = mul nsw i64 %111, %107, !dbg !134", "%113 = srem i64 %112, 1000000007, !dbg !135", "%114 = shl nsw i64 %113, 1, !dbg !136", "%115 = srem i64 %114, 1000000007, !dbg !137", "%116 = sub nsw i64 %97, %115, !dbg !138", "store i64 %116, i64* @ans, align 8, !dbg !138, !tbaa !68", "%117 = icmp sgt i64 %116, -1, !dbg !139", "br i1 %117, label %118, label %122, !dbg !141"], "block_insts": [{"inst_id": "190", "instruction": "%105 = sext i32 %101 to i64, !dbg !130", "opcode": "sext", "operand_list": ["%101 = mul nsw i32 %100, %4, !dbg !126"], "var_name": "%105"}, {"inst_id": "191", "instruction": "%106 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %105, i64 %59, !dbg !130", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%105 = sext i32 %101 to i64, !dbg !130", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%106"}, {"inst_id": "192", "instruction": "%107 = load i64, i64* %106, align 8, !dbg !130, !tbaa !68", "opcode": "load", "operand_list": ["%106 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %105, i64 %59, !dbg !130"], "var_name": "%107"}, {"inst_id": "193", "instruction": "%108 = sub nsw i32 %101, %58, !dbg !132", "opcode": "sub", "operand_list": ["%101 = mul nsw i32 %100, %4, !dbg !126", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%108"}, {"inst_id": "194", "instruction": "%109 = sext i32 %108 to i64, !dbg !133", "opcode": "sext", "operand_list": ["%108 = sub nsw i32 %101, %58, !dbg !132"], "var_name": "%109"}, {"inst_id": "195", "instruction": "%110 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %109, i64 %65, !dbg !133", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%109 = sext i32 %108 to i64, !dbg !133", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%110"}, {"inst_id": "196", "instruction": "%111 = load i64, i64* %110, align 8, !dbg !133, !tbaa !68", "opcode": "load", "operand_list": ["%110 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %109, i64 %65, !dbg !133"], "var_name": "%111"}, {"inst_id": "197", "instruction": "%112 = mul nsw i64 %111, %107, !dbg !134", "opcode": "mul", "operand_list": ["%111 = load i64, i64* %110, align 8, !dbg !133, !tbaa !68", "%107 = load i64, i64* %106, align 8, !dbg !130, !tbaa !68"], "var_name": "%112"}, {"inst_id": "198", "instruction": "%113 = srem i64 %112, 1000000007, !dbg !135", "opcode": "srem", "operand_list": ["%112 = mul nsw i64 %111, %107, !dbg !134", "i64 1000000007"], "var_name": "%113"}, {"inst_id": "199", "instruction": "%114 = shl nsw i64 %113, 1, !dbg !136", "opcode": "shl", "operand_list": ["%113 = srem i64 %112, 1000000007, !dbg !135", "i64 1"], "var_name": "%114"}, {"inst_id": "200", "instruction": "%115 = srem i64 %114, 1000000007, !dbg !137", "opcode": "srem", "operand_list": ["%114 = shl nsw i64 %113, 1, !dbg !136", "i64 1000000007"], "var_name": "%115"}, {"inst_id": "201", "instruction": "%116 = sub nsw i64 %97, %115, !dbg !138", "opcode": "sub", "operand_list": ["%97 = phi i64 [ %69, %71 ], [ %93, %90 ], [ %95, %94 ], [ %69, %56 ]", "%115 = srem i64 %114, 1000000007, !dbg !137"], "var_name": "%116"}, {"inst_id": "202", "instruction": "store i64 %116, i64* @ans, align 8, !dbg !138, !tbaa !68", "opcode": "store", "operand_list": ["%116 = sub nsw i64 %97, %115, !dbg !138", "@ans"]}, {"inst_id": "203", "instruction": "%117 = icmp sgt i64 %116, -1, !dbg !139", "opcode": "icmp", "operand_list": ["%116 = sub nsw i64 %97, %115, !dbg !138", "i64 -1"], "var_name": "%117"}, {"inst_id": "204", "instruction": "br i1 %117, label %118, label %122, !dbg !141", "opcode": "br", "branch_condition": "%117 = icmp sgt i64 %116, -1, !dbg !139", "true_target": "%118", "false_target": "%122"}]}, {"block_name": "block-118", "block_var_list": ["%119", "%120", "%121"], "inst_num": 4, "block_inst_list": ["%119 = trunc i64 %116 to i32, !dbg !142", "%120 = urem i32 %119, 1000000007, !dbg !142", "%121 = zext i32 %120 to i64, !dbg !142", "br label %124, !dbg !143"], "block_insts": [{"inst_id": "205", "instruction": "%119 = trunc i64 %116 to i32, !dbg !142", "opcode": "trunc", "operand_list": ["%116 = sub nsw i64 %97, %115, !dbg !138"], "var_name": "%119"}, {"inst_id": "206", "instruction": "%120 = urem i32 %119, 1000000007, !dbg !142", "opcode": "urem", "operand_list": ["%119 = trunc i64 %116 to i32, !dbg !142", "i32 1000000007"], "var_name": "%120"}, {"inst_id": "207", "instruction": "%121 = zext i32 %120 to i64, !dbg !142", "opcode": "zext", "operand_list": ["%120 = urem i32 %119, 1000000007, !dbg !142"], "var_name": "%121"}, {"inst_id": "208", "instruction": "br label %124, !dbg !143", "opcode": "br", "branch_condition": "False", "br_target": "%124"}]}, {"block_name": "block-122", "block_var_list": ["%123"], "inst_num": 2, "block_inst_list": ["%123 = add nsw i64 %116, 1000000007, !dbg !144", "br label %124"], "block_insts": [{"inst_id": "209", "instruction": "%123 = add nsw i64 %116, 1000000007, !dbg !144", "opcode": "add", "operand_list": ["%116 = sub nsw i64 %97, %115, !dbg !138", "i64 1000000007"], "var_name": "%123"}, {"inst_id": "210", "instruction": "br label %124", "opcode": "br", "branch_condition": "False", "br_target": "%124"}]}, {"block_name": "block-124", "block_var_list": ["%125"], "inst_num": 3, "block_inst_list": ["%125 = phi i64 [ %121, %118 ], [ %123, %122 ]", "store i64 %125, i64* @ans, align 8, !dbg !145, !tbaa !68", "br label %126, !dbg !146"], "block_insts": [{"inst_id": "211", "instruction": "%125 = phi i64 [ %121, %118 ], [ %123, %122 ]", "opcode": "phi", "operand_list": ["%121 = zext i32 %120 to i64, !dbg !142", "%123 = add nsw i64 %116, 1000000007, !dbg !144"], "var_name": "%125"}, {"inst_id": "212", "instruction": "store i64 %125, i64* @ans, align 8, !dbg !145, !tbaa !68", "opcode": "store", "operand_list": ["%125 = phi i64 [ %121, %118 ], [ %123, %122 ]", "@ans"]}, {"inst_id": "213", "instruction": "br label %126, !dbg !146", "opcode": "br", "branch_condition": "False", "br_target": "%126"}]}, {"block_name": "block-126", "block_var_list": ["%127"], "inst_num": 2, "block_inst_list": ["%127 = phi i64 [ %97, %99 ], [ %125, %124 ]", "br i1 %70, label %128, label %178, !dbg !146"], "block_insts": [{"inst_id": "214", "instruction": "%127 = phi i64 [ %97, %99 ], [ %125, %124 ]", "opcode": "phi", "operand_list": ["%97 = phi i64 [ %69, %71 ], [ %93, %90 ], [ %95, %94 ], [ %69, %56 ]", "%125 = phi i64 [ %121, %118 ], [ %123, %122 ]"], "var_name": "%127"}, {"inst_id": "215", "instruction": "br i1 %70, label %128, label %178, !dbg !146", "opcode": "br", "branch_condition": "False", "br_target": "%128"}]}, {"block_name": "block-128", "block_var_list": ["%129", "%130", "%131"], "inst_num": 4, "block_inst_list": ["%129 = add nsw i32 %4, -1, !dbg !148", "%130 = mul nsw i32 %100, %129, !dbg !149", "%131 = icmp slt i32 %130, %102, !dbg !150", "br i1 %131, label %152, label %132, !dbg !151"], "block_insts": [{"inst_id": "216", "instruction": "%129 = add nsw i32 %4, -1, !dbg !148", "opcode": "add", "operand_list": ["%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "i32 -1"], "var_name": "%129"}, {"inst_id": "217", "instruction": "%130 = mul nsw i32 %100, %129, !dbg !149", "opcode": "mul", "operand_list": ["%100 = add nsw i32 %5, -1, !dbg !125", "%129 = add nsw i32 %4, -1, !dbg !148"], "var_name": "%130"}, {"inst_id": "218", "instruction": "%131 = icmp slt i32 %130, %102, !dbg !150", "opcode": "icmp", "operand_list": ["%130 = mul nsw i32 %100, %129, !dbg !149", "%102 = add nsw i32 %64, %58, !dbg !127"], "var_name": "%131"}, {"inst_id": "219", "instruction": "br i1 %131, label %152, label %132, !dbg !151", "opcode": "br", "branch_condition": "%131 = icmp slt i32 %130, %102, !dbg !150", "true_target": "%152", "false_target": "%132"}]}, {"block_name": "block-132", "block_var_list": ["%133", "%134", "%135", "%136", "%137", "%138", "%139", "%140", "%141", "%142", "%143", "%144", "%145"], "inst_num": 15, "block_inst_list": ["%133 = sext i32 %130 to i64, !dbg !152", "%134 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %133, i64 %59, !dbg !152", "%135 = load i64, i64* %134, align 8, !dbg !152, !tbaa !68", "%136 = sub nsw i32 %130, %58, !dbg !154", "%137 = sext i32 %136 to i64, !dbg !155", "%138 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %137, i64 %65, !dbg !155", "%139 = load i64, i64* %138, align 8, !dbg !155, !tbaa !68", "%140 = mul nsw i64 %139, %135, !dbg !156", "%141 = srem i64 %140, 1000000007, !dbg !157", "%142 = shl nsw i64 %141, 2, !dbg !158", "%143 = srem i64 %142, 1000000007, !dbg !159", "%144 = add nsw i64 %143, %127, !dbg !160", "store i64 %144, i64* @ans, align 8, !dbg !160, !tbaa !68", "%145 = icmp sgt i64 %144, -1, !dbg !161", "br i1 %145, label %146, label %150, !dbg !163"], "block_insts": [{"inst_id": "220", "instruction": "%133 = sext i32 %130 to i64, !dbg !152", "opcode": "sext", "operand_list": ["%130 = mul nsw i32 %100, %129, !dbg !149"], "var_name": "%133"}, {"inst_id": "221", "instruction": "%134 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %133, i64 %59, !dbg !152", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%133 = sext i32 %130 to i64, !dbg !152", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%134"}, {"inst_id": "222", "instruction": "%135 = load i64, i64* %134, align 8, !dbg !152, !tbaa !68", "opcode": "load", "operand_list": ["%134 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %133, i64 %59, !dbg !152"], "var_name": "%135"}, {"inst_id": "223", "instruction": "%136 = sub nsw i32 %130, %58, !dbg !154", "opcode": "sub", "operand_list": ["%130 = mul nsw i32 %100, %129, !dbg !149", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%136"}, {"inst_id": "224", "instruction": "%137 = sext i32 %136 to i64, !dbg !155", "opcode": "sext", "operand_list": ["%136 = sub nsw i32 %130, %58, !dbg !154"], "var_name": "%137"}, {"inst_id": "225", "instruction": "%138 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %137, i64 %65, !dbg !155", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%137 = sext i32 %136 to i64, !dbg !155", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%138"}, {"inst_id": "226", "instruction": "%139 = load i64, i64* %138, align 8, !dbg !155, !tbaa !68", "opcode": "load", "operand_list": ["%138 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %137, i64 %65, !dbg !155"], "var_name": "%139"}, {"inst_id": "227", "instruction": "%140 = mul nsw i64 %139, %135, !dbg !156", "opcode": "mul", "operand_list": ["%139 = load i64, i64* %138, align 8, !dbg !155, !tbaa !68", "%135 = load i64, i64* %134, align 8, !dbg !152, !tbaa !68"], "var_name": "%140"}, {"inst_id": "228", "instruction": "%141 = srem i64 %140, 1000000007, !dbg !157", "opcode": "srem", "operand_list": ["%140 = mul nsw i64 %139, %135, !dbg !156", "i64 1000000007"], "var_name": "%141"}, {"inst_id": "229", "instruction": "%142 = shl nsw i64 %141, 2, !dbg !158", "opcode": "shl", "operand_list": ["%141 = srem i64 %140, 1000000007, !dbg !157", "i64 2"], "var_name": "%142"}, {"inst_id": "230", "instruction": "%143 = srem i64 %142, 1000000007, !dbg !159", "opcode": "srem", "operand_list": ["%142 = shl nsw i64 %141, 2, !dbg !158", "i64 1000000007"], "var_name": "%143"}, {"inst_id": "231", "instruction": "%144 = add nsw i64 %143, %127, !dbg !160", "opcode": "add", "operand_list": ["%143 = srem i64 %142, 1000000007, !dbg !159", "%127 = phi i64 [ %97, %99 ], [ %125, %124 ]"], "var_name": "%144"}, {"inst_id": "232", "instruction": "store i64 %144, i64* @ans, align 8, !dbg !160, !tbaa !68", "opcode": "store", "operand_list": ["%144 = add nsw i64 %143, %127, !dbg !160", "@ans"]}, {"inst_id": "233", "instruction": "%145 = icmp sgt i64 %144, -1, !dbg !161", "opcode": "icmp", "operand_list": ["%144 = add nsw i64 %143, %127, !dbg !160", "i64 -1"], "var_name": "%145"}, {"inst_id": "234", "instruction": "br i1 %145, label %146, label %150, !dbg !163", "opcode": "br", "branch_condition": "%145 = icmp sgt i64 %144, -1, !dbg !161", "true_target": "%146", "false_target": "%150"}]}, {"block_name": "block-146", "block_var_list": ["%147", "%148", "%149"], "inst_num": 5, "block_inst_list": ["%147 = trunc i64 %144 to i32, !dbg !164", "%148 = urem i32 %147, 1000000007, !dbg !164", "%149 = zext i32 %148 to i64, !dbg !164", "store i64 %149, i64* @ans, align 8, !dbg !164, !tbaa !68", "br label %152, !dbg !165"], "block_insts": [{"inst_id": "235", "instruction": "%147 = trunc i64 %144 to i32, !dbg !164", "opcode": "trunc", "operand_list": ["%144 = add nsw i64 %143, %127, !dbg !160"], "var_name": "%147"}, {"inst_id": "236", "instruction": "%148 = urem i32 %147, 1000000007, !dbg !164", "opcode": "urem", "operand_list": ["%147 = trunc i64 %144 to i32, !dbg !164", "i32 1000000007"], "var_name": "%148"}, {"inst_id": "237", "instruction": "%149 = zext i32 %148 to i64, !dbg !164", "opcode": "zext", "operand_list": ["%148 = urem i32 %147, 1000000007, !dbg !164"], "var_name": "%149"}, {"inst_id": "238", "instruction": "store i64 %149, i64* @ans, align 8, !dbg !164, !tbaa !68", "opcode": "store", "operand_list": ["%149 = zext i32 %148 to i64, !dbg !164", "@ans"]}, {"inst_id": "239", "instruction": "br label %152, !dbg !165", "opcode": "br", "branch_condition": "False", "br_target": "%152"}]}, {"block_name": "block-150", "block_var_list": ["%151"], "inst_num": 3, "block_inst_list": ["%151 = add nsw i64 %144, 1000000007, !dbg !166", "store i64 %151, i64* @ans, align 8, !dbg !166, !tbaa !68", "br label %152"], "block_insts": [{"inst_id": "240", "instruction": "%151 = add nsw i64 %144, 1000000007, !dbg !166", "opcode": "add", "operand_list": ["%144 = add nsw i64 %143, %127, !dbg !160", "i64 1000000007"], "var_name": "%151"}, {"inst_id": "241", "instruction": "store i64 %151, i64* @ans, align 8, !dbg !166, !tbaa !68", "opcode": "store", "operand_list": ["%151 = add nsw i64 %144, 1000000007, !dbg !166", "@ans"]}, {"inst_id": "242", "instruction": "br label %152", "opcode": "br", "branch_condition": "False", "br_target": "%152"}]}, {"block_name": "block-152", "block_var_list": ["%153", "%154"], "inst_num": 3, "block_inst_list": ["%153 = phi i64 [ %97, %96 ], [ %127, %128 ], [ %149, %146 ], [ %151, %150 ]", "%154 = icmp sgt i32 %4, 2, !dbg !167", "br i1 %154, label %155, label %178, !dbg !169"], "block_insts": [{"inst_id": "243", "instruction": "%153 = phi i64 [ %97, %96 ], [ %127, %128 ], [ %149, %146 ], [ %151, %150 ]", "opcode": "phi", "operand_list": ["%97 = phi i64 [ %69, %71 ], [ %93, %90 ], [ %95, %94 ], [ %69, %56 ]", "%127 = phi i64 [ %97, %99 ], [ %125, %124 ]", "%149 = zext i32 %148 to i64, !dbg !164", "%151 = add nsw i64 %144, 1000000007, !dbg !166"], "var_name": "%153"}, {"inst_id": "244", "instruction": "%154 = icmp sgt i32 %4, 2, !dbg !167", "opcode": "icmp", "operand_list": ["%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "i32 2"], "var_name": "%154"}, {"inst_id": "245", "instruction": "br i1 %154, label %155, label %178, !dbg !169", "opcode": "br", "branch_condition": "%154 = icmp sgt i32 %4, 2, !dbg !167", "true_target": "%155", "false_target": "%178"}]}, {"block_name": "block-155", "block_var_list": ["%156", "%157", "%158", "%159"], "inst_num": 5, "block_inst_list": ["%156 = add nsw i32 %4, -2, !dbg !170", "%157 = mul nsw i32 %156, %5, !dbg !171", "%158 = add nsw i32 %64, %58, !dbg !172", "%159 = icmp slt i32 %157, %158, !dbg !173", "br i1 %159, label %178, label %160, !dbg !174"], "block_insts": [{"inst_id": "246", "instruction": "%156 = add nsw i32 %4, -2, !dbg !170", "opcode": "add", "operand_list": ["%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "i32 -2"], "var_name": "%156"}, {"inst_id": "247", "instruction": "%157 = mul nsw i32 %156, %5, !dbg !171", "opcode": "mul", "operand_list": ["%156 = add nsw i32 %4, -2, !dbg !170", "%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44"], "var_name": "%157"}, {"inst_id": "248", "instruction": "%158 = add nsw i32 %64, %58, !dbg !172", "opcode": "add", "operand_list": ["%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%158"}, {"inst_id": "249", "instruction": "%159 = icmp slt i32 %157, %158, !dbg !173", "opcode": "icmp", "operand_list": ["%157 = mul nsw i32 %156, %5, !dbg !171", "%158 = add nsw i32 %64, %58, !dbg !172"], "var_name": "%159"}, {"inst_id": "250", "instruction": "br i1 %159, label %178, label %160, !dbg !174", "opcode": "br", "branch_condition": "%159 = icmp slt i32 %157, %158, !dbg !173", "true_target": "%178", "false_target": "%160"}]}, {"block_name": "block-160", "block_var_list": ["%161", "%162", "%163", "%164", "%165", "%166", "%167", "%168", "%169", "%170", "%171"], "inst_num": 13, "block_inst_list": ["%161 = sext i32 %157 to i64, !dbg !175", "%162 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %161, i64 %59, !dbg !175", "%163 = load i64, i64* %162, align 8, !dbg !175, !tbaa !68", "%164 = sub nsw i32 %157, %58, !dbg !177", "%165 = sext i32 %164 to i64, !dbg !178", "%166 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %165, i64 %65, !dbg !178", "%167 = load i64, i64* %166, align 8, !dbg !178, !tbaa !68", "%168 = mul nsw i64 %167, %163, !dbg !179", "%169 = srem i64 %168, 1000000007, !dbg !180", "%170 = add nsw i64 %169, %153, !dbg !181", "store i64 %170, i64* @ans, align 8, !dbg !181, !tbaa !68", "%171 = icmp sgt i64 %170, -1, !dbg !182", "br i1 %171, label %172, label %176, !dbg !184"], "block_insts": [{"inst_id": "251", "instruction": "%161 = sext i32 %157 to i64, !dbg !175", "opcode": "sext", "operand_list": ["%157 = mul nsw i32 %156, %5, !dbg !171"], "var_name": "%161"}, {"inst_id": "252", "instruction": "%162 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %161, i64 %59, !dbg !175", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%161 = sext i32 %157 to i64, !dbg !175", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%162"}, {"inst_id": "253", "instruction": "%163 = load i64, i64* %162, align 8, !dbg !175, !tbaa !68", "opcode": "load", "operand_list": ["%162 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %161, i64 %59, !dbg !175"], "var_name": "%163"}, {"inst_id": "254", "instruction": "%164 = sub nsw i32 %157, %58, !dbg !177", "opcode": "sub", "operand_list": ["%157 = mul nsw i32 %156, %5, !dbg !171", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%164"}, {"inst_id": "255", "instruction": "%165 = sext i32 %164 to i64, !dbg !178", "opcode": "sext", "operand_list": ["%164 = sub nsw i32 %157, %58, !dbg !177"], "var_name": "%165"}, {"inst_id": "256", "instruction": "%166 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %165, i64 %65, !dbg !178", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%165 = sext i32 %164 to i64, !dbg !178", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%166"}, {"inst_id": "257", "instruction": "%167 = load i64, i64* %166, align 8, !dbg !178, !tbaa !68", "opcode": "load", "operand_list": ["%166 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %165, i64 %65, !dbg !178"], "var_name": "%167"}, {"inst_id": "258", "instruction": "%168 = mul nsw i64 %167, %163, !dbg !179", "opcode": "mul", "operand_list": ["%167 = load i64, i64* %166, align 8, !dbg !178, !tbaa !68", "%163 = load i64, i64* %162, align 8, !dbg !175, !tbaa !68"], "var_name": "%168"}, {"inst_id": "259", "instruction": "%169 = srem i64 %168, 1000000007, !dbg !180", "opcode": "srem", "operand_list": ["%168 = mul nsw i64 %167, %163, !dbg !179", "i64 1000000007"], "var_name": "%169"}, {"inst_id": "260", "instruction": "%170 = add nsw i64 %169, %153, !dbg !181", "opcode": "add", "operand_list": ["%169 = srem i64 %168, 1000000007, !dbg !180", "%153 = phi i64 [ %97, %96 ], [ %127, %128 ], [ %149, %146 ], [ %151, %150 ]"], "var_name": "%170"}, {"inst_id": "261", "instruction": "store i64 %170, i64* @ans, align 8, !dbg !181, !tbaa !68", "opcode": "store", "operand_list": ["%170 = add nsw i64 %169, %153, !dbg !181", "@ans"]}, {"inst_id": "262", "instruction": "%171 = icmp sgt i64 %170, -1, !dbg !182", "opcode": "icmp", "operand_list": ["%170 = add nsw i64 %169, %153, !dbg !181", "i64 -1"], "var_name": "%171"}, {"inst_id": "263", "instruction": "br i1 %171, label %172, label %176, !dbg !184", "opcode": "br", "branch_condition": "%171 = icmp sgt i64 %170, -1, !dbg !182", "true_target": "%172", "false_target": "%176"}]}, {"block_name": "block-172", "block_var_list": ["%173", "%174", "%175"], "inst_num": 5, "block_inst_list": ["%173 = trunc i64 %170 to i32, !dbg !185", "%174 = urem i32 %173, 1000000007, !dbg !185", "%175 = zext i32 %174 to i64, !dbg !185", "store i64 %175, i64* @ans, align 8, !dbg !185, !tbaa !68", "br label %178, !dbg !186"], "block_insts": [{"inst_id": "264", "instruction": "%173 = trunc i64 %170 to i32, !dbg !185", "opcode": "trunc", "operand_list": ["%170 = add nsw i64 %169, %153, !dbg !181"], "var_name": "%173"}, {"inst_id": "265", "instruction": "%174 = urem i32 %173, 1000000007, !dbg !185", "opcode": "urem", "operand_list": ["%173 = trunc i64 %170 to i32, !dbg !185", "i32 1000000007"], "var_name": "%174"}, {"inst_id": "266", "instruction": "%175 = zext i32 %174 to i64, !dbg !185", "opcode": "zext", "operand_list": ["%174 = urem i32 %173, 1000000007, !dbg !185"], "var_name": "%175"}, {"inst_id": "267", "instruction": "store i64 %175, i64* @ans, align 8, !dbg !185, !tbaa !68", "opcode": "store", "operand_list": ["%175 = zext i32 %174 to i64, !dbg !185", "@ans"]}, {"inst_id": "268", "instruction": "br label %178, !dbg !186", "opcode": "br", "branch_condition": "False", "br_target": "%178"}]}, {"block_name": "block-176", "block_var_list": ["%177"], "inst_num": 3, "block_inst_list": ["%177 = add nsw i64 %170, 1000000007, !dbg !187", "store i64 %177, i64* @ans, align 8, !dbg !187, !tbaa !68", "br label %178"], "block_insts": [{"inst_id": "269", "instruction": "%177 = add nsw i64 %170, 1000000007, !dbg !187", "opcode": "add", "operand_list": ["%170 = add nsw i64 %169, %153, !dbg !181", "i64 1000000007"], "var_name": "%177"}, {"inst_id": "270", "instruction": "store i64 %177, i64* @ans, align 8, !dbg !187, !tbaa !68", "opcode": "store", "operand_list": ["%177 = add nsw i64 %170, 1000000007, !dbg !187", "@ans"]}, {"inst_id": "271", "instruction": "br label %178", "opcode": "br", "branch_condition": "False", "br_target": "%178"}]}, {"block_name": "block-178", "block_var_list": ["%179", "%180", "%181"], "inst_num": 4, "block_inst_list": ["%179 = phi i1 [ true, %155 ], [ true, %172 ], [ true, %176 ], [ false, %152 ], [ false, %126 ]", "%180 = phi i64 [ %153, %155 ], [ %175, %172 ], [ %177, %176 ], [ %153, %152 ], [ %127, %126 ]", "%181 = icmp sgt i32 %5, 2, !dbg !188", "br i1 %181, label %182, label %205, !dbg !190"], "block_insts": [{"inst_id": "272", "instruction": "%179 = phi i1 [ true, %155 ], [ true, %172 ], [ true, %176 ], [ false, %152 ], [ false, %126 ]", "opcode": "phi", "operand_list": ["i1 true", "i1 true", "i1 true", "i1 false", "i1 false"], "var_name": "%179"}, {"inst_id": "273", "instruction": "%180 = phi i64 [ %153, %155 ], [ %175, %172 ], [ %177, %176 ], [ %153, %152 ], [ %127, %126 ]", "opcode": "phi", "operand_list": ["%153 = phi i64 [ %97, %96 ], [ %127, %128 ], [ %149, %146 ], [ %151, %150 ]", "%175 = zext i32 %174 to i64, !dbg !185", "%177 = add nsw i64 %170, 1000000007, !dbg !187", "%153 = phi i64 [ %97, %96 ], [ %127, %128 ], [ %149, %146 ], [ %151, %150 ]", "%127 = phi i64 [ %97, %99 ], [ %125, %124 ]"], "var_name": "%180"}, {"inst_id": "274", "instruction": "%181 = icmp sgt i32 %5, 2, !dbg !188", "opcode": "icmp", "operand_list": ["%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "i32 2"], "var_name": "%181"}, {"inst_id": "275", "instruction": "br i1 %181, label %182, label %205, !dbg !190", "opcode": "br", "branch_condition": "%181 = icmp sgt i32 %5, 2, !dbg !188", "true_target": "%182", "false_target": "%205"}]}, {"block_name": "block-182", "block_var_list": ["%183", "%184", "%185", "%186"], "inst_num": 5, "block_inst_list": ["%183 = add nsw i32 %5, -2, !dbg !191", "%184 = mul nsw i32 %183, %4, !dbg !192", "%185 = add nsw i32 %64, %58, !dbg !193", "%186 = icmp slt i32 %184, %185, !dbg !194", "br i1 %186, label %205, label %187, !dbg !195"], "block_insts": [{"inst_id": "276", "instruction": "%183 = add nsw i32 %5, -2, !dbg !191", "opcode": "add", "operand_list": ["%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "i32 -2"], "var_name": "%183"}, {"inst_id": "277", "instruction": "%184 = mul nsw i32 %183, %4, !dbg !192", "opcode": "mul", "operand_list": ["%183 = add nsw i32 %5, -2, !dbg !191", "%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44"], "var_name": "%184"}, {"inst_id": "278", "instruction": "%185 = add nsw i32 %64, %58, !dbg !193", "opcode": "add", "operand_list": ["%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%185"}, {"inst_id": "279", "instruction": "%186 = icmp slt i32 %184, %185, !dbg !194", "opcode": "icmp", "operand_list": ["%184 = mul nsw i32 %183, %4, !dbg !192", "%185 = add nsw i32 %64, %58, !dbg !193"], "var_name": "%186"}, {"inst_id": "280", "instruction": "br i1 %186, label %205, label %187, !dbg !195", "opcode": "br", "branch_condition": "%186 = icmp slt i32 %184, %185, !dbg !194", "true_target": "%205", "false_target": "%187"}]}, {"block_name": "block-187", "block_var_list": ["%188", "%189", "%190", "%191", "%192", "%193", "%194", "%195", "%196", "%197", "%198"], "inst_num": 13, "block_inst_list": ["%188 = sext i32 %184 to i64, !dbg !196", "%189 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %188, i64 %59, !dbg !196", "%190 = load i64, i64* %189, align 8, !dbg !196, !tbaa !68", "%191 = sub nsw i32 %184, %58, !dbg !198", "%192 = sext i32 %191 to i64, !dbg !199", "%193 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %192, i64 %65, !dbg !199", "%194 = load i64, i64* %193, align 8, !dbg !199, !tbaa !68", "%195 = mul nsw i64 %194, %190, !dbg !200", "%196 = srem i64 %195, 1000000007, !dbg !201", "%197 = add nsw i64 %196, %180, !dbg !202", "store i64 %197, i64* @ans, align 8, !dbg !202, !tbaa !68", "%198 = icmp sgt i64 %197, -1, !dbg !203", "br i1 %198, label %199, label %203, !dbg !205"], "block_insts": [{"inst_id": "281", "instruction": "%188 = sext i32 %184 to i64, !dbg !196", "opcode": "sext", "operand_list": ["%184 = mul nsw i32 %183, %4, !dbg !192"], "var_name": "%188"}, {"inst_id": "282", "instruction": "%189 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %188, i64 %59, !dbg !196", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%188 = sext i32 %184 to i64, !dbg !196", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%189"}, {"inst_id": "283", "instruction": "%190 = load i64, i64* %189, align 8, !dbg !196, !tbaa !68", "opcode": "load", "operand_list": ["%189 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %188, i64 %59, !dbg !196"], "var_name": "%190"}, {"inst_id": "284", "instruction": "%191 = sub nsw i32 %184, %58, !dbg !198", "opcode": "sub", "operand_list": ["%184 = mul nsw i32 %183, %4, !dbg !192", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%191"}, {"inst_id": "285", "instruction": "%192 = sext i32 %191 to i64, !dbg !199", "opcode": "sext", "operand_list": ["%191 = sub nsw i32 %184, %58, !dbg !198"], "var_name": "%192"}, {"inst_id": "286", "instruction": "%193 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %192, i64 %65, !dbg !199", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%192 = sext i32 %191 to i64, !dbg !199", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%193"}, {"inst_id": "287", "instruction": "%194 = load i64, i64* %193, align 8, !dbg !199, !tbaa !68", "opcode": "load", "operand_list": ["%193 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %192, i64 %65, !dbg !199"], "var_name": "%194"}, {"inst_id": "288", "instruction": "%195 = mul nsw i64 %194, %190, !dbg !200", "opcode": "mul", "operand_list": ["%194 = load i64, i64* %193, align 8, !dbg !199, !tbaa !68", "%190 = load i64, i64* %189, align 8, !dbg !196, !tbaa !68"], "var_name": "%195"}, {"inst_id": "289", "instruction": "%196 = srem i64 %195, 1000000007, !dbg !201", "opcode": "srem", "operand_list": ["%195 = mul nsw i64 %194, %190, !dbg !200", "i64 1000000007"], "var_name": "%196"}, {"inst_id": "290", "instruction": "%197 = add nsw i64 %196, %180, !dbg !202", "opcode": "add", "operand_list": ["%196 = srem i64 %195, 1000000007, !dbg !201", "%180 = phi i64 [ %153, %155 ], [ %175, %172 ], [ %177, %176 ], [ %153, %152 ], [ %127, %126 ]"], "var_name": "%197"}, {"inst_id": "291", "instruction": "store i64 %197, i64* @ans, align 8, !dbg !202, !tbaa !68", "opcode": "store", "operand_list": ["%197 = add nsw i64 %196, %180, !dbg !202", "@ans"]}, {"inst_id": "292", "instruction": "%198 = icmp sgt i64 %197, -1, !dbg !203", "opcode": "icmp", "operand_list": ["%197 = add nsw i64 %196, %180, !dbg !202", "i64 -1"], "var_name": "%198"}, {"inst_id": "293", "instruction": "br i1 %198, label %199, label %203, !dbg !205", "opcode": "br", "branch_condition": "%198 = icmp sgt i64 %197, -1, !dbg !203", "true_target": "%199", "false_target": "%203"}]}, {"block_name": "block-199", "block_var_list": ["%200", "%201", "%202"], "inst_num": 5, "block_inst_list": ["%200 = trunc i64 %197 to i32, !dbg !206", "%201 = urem i32 %200, 1000000007, !dbg !206", "%202 = zext i32 %201 to i64, !dbg !206", "store i64 %202, i64* @ans, align 8, !dbg !206, !tbaa !68", "br label %205, !dbg !207"], "block_insts": [{"inst_id": "294", "instruction": "%200 = trunc i64 %197 to i32, !dbg !206", "opcode": "trunc", "operand_list": ["%197 = add nsw i64 %196, %180, !dbg !202"], "var_name": "%200"}, {"inst_id": "295", "instruction": "%201 = urem i32 %200, 1000000007, !dbg !206", "opcode": "urem", "operand_list": ["%200 = trunc i64 %197 to i32, !dbg !206", "i32 1000000007"], "var_name": "%201"}, {"inst_id": "296", "instruction": "%202 = zext i32 %201 to i64, !dbg !206", "opcode": "zext", "operand_list": ["%201 = urem i32 %200, 1000000007, !dbg !206"], "var_name": "%202"}, {"inst_id": "297", "instruction": "store i64 %202, i64* @ans, align 8, !dbg !206, !tbaa !68", "opcode": "store", "operand_list": ["%202 = zext i32 %201 to i64, !dbg !206", "@ans"]}, {"inst_id": "298", "instruction": "br label %205, !dbg !207", "opcode": "br", "branch_condition": "False", "br_target": "%205"}]}, {"block_name": "block-203", "block_var_list": ["%204"], "inst_num": 3, "block_inst_list": ["%204 = add nsw i64 %197, 1000000007, !dbg !208", "store i64 %204, i64* @ans, align 8, !dbg !208, !tbaa !68", "br label %205"], "block_insts": [{"inst_id": "299", "instruction": "%204 = add nsw i64 %197, 1000000007, !dbg !208", "opcode": "add", "operand_list": ["%197 = add nsw i64 %196, %180, !dbg !202", "i64 1000000007"], "var_name": "%204"}, {"inst_id": "300", "instruction": "store i64 %204, i64* @ans, align 8, !dbg !208, !tbaa !68", "opcode": "store", "operand_list": ["%204 = add nsw i64 %197, 1000000007, !dbg !208", "@ans"]}, {"inst_id": "301", "instruction": "br label %205", "opcode": "br", "branch_condition": "False", "br_target": "%205"}]}, {"block_name": "block-205", "block_var_list": ["%206", "%207"], "inst_num": 3, "block_inst_list": ["%206 = phi i64 [ %180, %182 ], [ %202, %199 ], [ %204, %203 ], [ %180, %178 ]", "%207 = and i1 %179, %98, !dbg !209", "br i1 %207, label %208, label %234, !dbg !209"], "block_insts": [{"inst_id": "302", "instruction": "%206 = phi i64 [ %180, %182 ], [ %202, %199 ], [ %204, %203 ], [ %180, %178 ]", "opcode": "phi", "operand_list": ["%180 = phi i64 [ %153, %155 ], [ %175, %172 ], [ %177, %176 ], [ %153, %152 ], [ %127, %126 ]", "%202 = zext i32 %201 to i64, !dbg !206", "%204 = add nsw i64 %197, 1000000007, !dbg !208", "%180 = phi i64 [ %153, %155 ], [ %175, %172 ], [ %177, %176 ], [ %153, %152 ], [ %127, %126 ]"], "var_name": "%206"}, {"inst_id": "303", "instruction": "%207 = and i1 %179, %98, !dbg !209", "opcode": "and", "operand_list": ["%179 = phi i1 [ true, %155 ], [ true, %172 ], [ true, %176 ], [ false, %152 ], [ false, %126 ]", "%98 = icmp sgt i32 %5, 1, !dbg !122"], "var_name": "%207"}, {"inst_id": "304", "instruction": "br i1 %207, label %208, label %234, !dbg !209", "opcode": "br", "branch_condition": "False", "br_target": "%208"}]}, {"block_name": "block-208", "block_var_list": ["%209", "%210", "%211", "%212", "%213"], "inst_num": 6, "block_inst_list": ["%209 = add nsw i32 %4, -2, !dbg !211", "%210 = add nsw i32 %5, -1, !dbg !212", "%211 = mul nsw i32 %210, %209, !dbg !213", "%212 = add nsw i32 %64, %58, !dbg !214", "%213 = icmp slt i32 %211, %212, !dbg !215", "br i1 %213, label %234, label %214, !dbg !216"], "block_insts": [{"inst_id": "305", "instruction": "%209 = add nsw i32 %4, -2, !dbg !211", "opcode": "add", "operand_list": ["%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "i32 -2"], "var_name": "%209"}, {"inst_id": "306", "instruction": "%210 = add nsw i32 %5, -1, !dbg !212", "opcode": "add", "operand_list": ["%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "i32 -1"], "var_name": "%210"}, {"inst_id": "307", "instruction": "%211 = mul nsw i32 %210, %209, !dbg !213", "opcode": "mul", "operand_list": ["%210 = add nsw i32 %5, -1, !dbg !212", "%209 = add nsw i32 %4, -2, !dbg !211"], "var_name": "%211"}, {"inst_id": "308", "instruction": "%212 = add nsw i32 %64, %58, !dbg !214", "opcode": "add", "operand_list": ["%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%212"}, {"inst_id": "309", "instruction": "%213 = icmp slt i32 %211, %212, !dbg !215", "opcode": "icmp", "operand_list": ["%211 = mul nsw i32 %210, %209, !dbg !213", "%212 = add nsw i32 %64, %58, !dbg !214"], "var_name": "%213"}, {"inst_id": "310", "instruction": "br i1 %213, label %234, label %214, !dbg !216", "opcode": "br", "branch_condition": "%213 = icmp slt i32 %211, %212, !dbg !215", "true_target": "%234", "false_target": "%214"}]}, {"block_name": "block-214", "block_var_list": ["%215", "%216", "%217", "%218", "%219", "%220", "%221", "%222", "%223", "%224", "%225", "%226", "%227"], "inst_num": 15, "block_inst_list": ["%215 = sext i32 %211 to i64, !dbg !217", "%216 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %215, i64 %59, !dbg !217", "%217 = load i64, i64* %216, align 8, !dbg !217, !tbaa !68", "%218 = sub nsw i32 %211, %58, !dbg !219", "%219 = sext i32 %218 to i64, !dbg !220", "%220 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %219, i64 %65, !dbg !220", "%221 = load i64, i64* %220, align 8, !dbg !220, !tbaa !68", "%222 = mul nsw i64 %221, %217, !dbg !221", "%223 = srem i64 %222, 1000000007, !dbg !222", "%224 = shl nsw i64 %223, 1, !dbg !223", "%225 = srem i64 %224, 1000000007, !dbg !224", "%226 = sub nsw i64 %206, %225, !dbg !225", "store i64 %226, i64* @ans, align 8, !dbg !225, !tbaa !68", "%227 = icmp sgt i64 %226, -1, !dbg !226", "br i1 %227, label %228, label %232, !dbg !228"], "block_insts": [{"inst_id": "311", "instruction": "%215 = sext i32 %211 to i64, !dbg !217", "opcode": "sext", "operand_list": ["%211 = mul nsw i32 %210, %209, !dbg !213"], "var_name": "%215"}, {"inst_id": "312", "instruction": "%216 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %215, i64 %59, !dbg !217", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%215 = sext i32 %211 to i64, !dbg !217", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%216"}, {"inst_id": "313", "instruction": "%217 = load i64, i64* %216, align 8, !dbg !217, !tbaa !68", "opcode": "load", "operand_list": ["%216 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %215, i64 %59, !dbg !217"], "var_name": "%217"}, {"inst_id": "314", "instruction": "%218 = sub nsw i32 %211, %58, !dbg !219", "opcode": "sub", "operand_list": ["%211 = mul nsw i32 %210, %209, !dbg !213", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%218"}, {"inst_id": "315", "instruction": "%219 = sext i32 %218 to i64, !dbg !220", "opcode": "sext", "operand_list": ["%218 = sub nsw i32 %211, %58, !dbg !219"], "var_name": "%219"}, {"inst_id": "316", "instruction": "%220 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %219, i64 %65, !dbg !220", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%219 = sext i32 %218 to i64, !dbg !220", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%220"}, {"inst_id": "317", "instruction": "%221 = load i64, i64* %220, align 8, !dbg !220, !tbaa !68", "opcode": "load", "operand_list": ["%220 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %219, i64 %65, !dbg !220"], "var_name": "%221"}, {"inst_id": "318", "instruction": "%222 = mul nsw i64 %221, %217, !dbg !221", "opcode": "mul", "operand_list": ["%221 = load i64, i64* %220, align 8, !dbg !220, !tbaa !68", "%217 = load i64, i64* %216, align 8, !dbg !217, !tbaa !68"], "var_name": "%222"}, {"inst_id": "319", "instruction": "%223 = srem i64 %222, 1000000007, !dbg !222", "opcode": "srem", "operand_list": ["%222 = mul nsw i64 %221, %217, !dbg !221", "i64 1000000007"], "var_name": "%223"}, {"inst_id": "320", "instruction": "%224 = shl nsw i64 %223, 1, !dbg !223", "opcode": "shl", "operand_list": ["%223 = srem i64 %222, 1000000007, !dbg !222", "i64 1"], "var_name": "%224"}, {"inst_id": "321", "instruction": "%225 = srem i64 %224, 1000000007, !dbg !224", "opcode": "srem", "operand_list": ["%224 = shl nsw i64 %223, 1, !dbg !223", "i64 1000000007"], "var_name": "%225"}, {"inst_id": "322", "instruction": "%226 = sub nsw i64 %206, %225, !dbg !225", "opcode": "sub", "operand_list": ["%206 = phi i64 [ %180, %182 ], [ %202, %199 ], [ %204, %203 ], [ %180, %178 ]", "%225 = srem i64 %224, 1000000007, !dbg !224"], "var_name": "%226"}, {"inst_id": "323", "instruction": "store i64 %226, i64* @ans, align 8, !dbg !225, !tbaa !68", "opcode": "store", "operand_list": ["%226 = sub nsw i64 %206, %225, !dbg !225", "@ans"]}, {"inst_id": "324", "instruction": "%227 = icmp sgt i64 %226, -1, !dbg !226", "opcode": "icmp", "operand_list": ["%226 = sub nsw i64 %206, %225, !dbg !225", "i64 -1"], "var_name": "%227"}, {"inst_id": "325", "instruction": "br i1 %227, label %228, label %232, !dbg !228", "opcode": "br", "branch_condition": "%227 = icmp sgt i64 %226, -1, !dbg !226", "true_target": "%228", "false_target": "%232"}]}, {"block_name": "block-228", "block_var_list": ["%229", "%230", "%231"], "inst_num": 5, "block_inst_list": ["%229 = trunc i64 %226 to i32, !dbg !229", "%230 = urem i32 %229, 1000000007, !dbg !229", "%231 = zext i32 %230 to i64, !dbg !229", "store i64 %231, i64* @ans, align 8, !dbg !229, !tbaa !68", "br label %234, !dbg !230"], "block_insts": [{"inst_id": "326", "instruction": "%229 = trunc i64 %226 to i32, !dbg !229", "opcode": "trunc", "operand_list": ["%226 = sub nsw i64 %206, %225, !dbg !225"], "var_name": "%229"}, {"inst_id": "327", "instruction": "%230 = urem i32 %229, 1000000007, !dbg !229", "opcode": "urem", "operand_list": ["%229 = trunc i64 %226 to i32, !dbg !229", "i32 1000000007"], "var_name": "%230"}, {"inst_id": "328", "instruction": "%231 = zext i32 %230 to i64, !dbg !229", "opcode": "zext", "operand_list": ["%230 = urem i32 %229, 1000000007, !dbg !229"], "var_name": "%231"}, {"inst_id": "329", "instruction": "store i64 %231, i64* @ans, align 8, !dbg !229, !tbaa !68", "opcode": "store", "operand_list": ["%231 = zext i32 %230 to i64, !dbg !229", "@ans"]}, {"inst_id": "330", "instruction": "br label %234, !dbg !230", "opcode": "br", "branch_condition": "False", "br_target": "%234"}]}, {"block_name": "block-232", "block_var_list": ["%233"], "inst_num": 3, "block_inst_list": ["%233 = add nsw i64 %226, 1000000007, !dbg !231", "store i64 %233, i64* @ans, align 8, !dbg !231, !tbaa !68", "br label %234"], "block_insts": [{"inst_id": "331", "instruction": "%233 = add nsw i64 %226, 1000000007, !dbg !231", "opcode": "add", "operand_list": ["%226 = sub nsw i64 %206, %225, !dbg !225", "i64 1000000007"], "var_name": "%233"}, {"inst_id": "332", "instruction": "store i64 %233, i64* @ans, align 8, !dbg !231, !tbaa !68", "opcode": "store", "operand_list": ["%233 = add nsw i64 %226, 1000000007, !dbg !231", "@ans"]}, {"inst_id": "333", "instruction": "br label %234", "opcode": "br", "branch_condition": "False", "br_target": "%234"}]}, {"block_name": "block-234", "block_var_list": ["%235", "%236"], "inst_num": 3, "block_inst_list": ["%235 = phi i64 [ %206, %208 ], [ %231, %228 ], [ %233, %232 ], [ %206, %205 ]", "%236 = and i1 %70, %181, !dbg !232", "br i1 %236, label %237, label %263, !dbg !232"], "block_insts": [{"inst_id": "334", "instruction": "%235 = phi i64 [ %206, %208 ], [ %231, %228 ], [ %233, %232 ], [ %206, %205 ]", "opcode": "phi", "operand_list": ["%206 = phi i64 [ %180, %182 ], [ %202, %199 ], [ %204, %203 ], [ %180, %178 ]", "%231 = zext i32 %230 to i64, !dbg !229", "%233 = add nsw i64 %226, 1000000007, !dbg !231", "%206 = phi i64 [ %180, %182 ], [ %202, %199 ], [ %204, %203 ], [ %180, %178 ]"], "var_name": "%235"}, {"inst_id": "335", "instruction": "%236 = and i1 %70, %181, !dbg !232", "opcode": "and", "operand_list": ["%70 = icmp sgt i32 %4, 1, !dbg !99", "%181 = icmp sgt i32 %5, 2, !dbg !188"], "var_name": "%236"}, {"inst_id": "336", "instruction": "br i1 %236, label %237, label %263, !dbg !232", "opcode": "br", "branch_condition": "False", "br_target": "%237"}]}, {"block_name": "block-237", "block_var_list": ["%238", "%239", "%240", "%241", "%242"], "inst_num": 6, "block_inst_list": ["%238 = add nsw i32 %4, -1, !dbg !234", "%239 = add nsw i32 %5, -2, !dbg !235", "%240 = mul nsw i32 %239, %238, !dbg !236", "%241 = add nsw i32 %64, %58, !dbg !237", "%242 = icmp slt i32 %240, %241, !dbg !238", "br i1 %242, label %263, label %243, !dbg !239"], "block_insts": [{"inst_id": "337", "instruction": "%238 = add nsw i32 %4, -1, !dbg !234", "opcode": "add", "operand_list": ["%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "i32 -1"], "var_name": "%238"}, {"inst_id": "338", "instruction": "%239 = add nsw i32 %5, -2, !dbg !235", "opcode": "add", "operand_list": ["%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "i32 -2"], "var_name": "%239"}, {"inst_id": "339", "instruction": "%240 = mul nsw i32 %239, %238, !dbg !236", "opcode": "mul", "operand_list": ["%239 = add nsw i32 %5, -2, !dbg !235", "%238 = add nsw i32 %4, -1, !dbg !234"], "var_name": "%240"}, {"inst_id": "340", "instruction": "%241 = add nsw i32 %64, %58, !dbg !237", "opcode": "add", "operand_list": ["%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%241"}, {"inst_id": "341", "instruction": "%242 = icmp slt i32 %240, %241, !dbg !238", "opcode": "icmp", "operand_list": ["%240 = mul nsw i32 %239, %238, !dbg !236", "%241 = add nsw i32 %64, %58, !dbg !237"], "var_name": "%242"}, {"inst_id": "342", "instruction": "br i1 %242, label %263, label %243, !dbg !239", "opcode": "br", "branch_condition": "%242 = icmp slt i32 %240, %241, !dbg !238", "true_target": "%263", "false_target": "%243"}]}, {"block_name": "block-243", "block_var_list": ["%244", "%245", "%246", "%247", "%248", "%249", "%250", "%251", "%252", "%253", "%254", "%255", "%256"], "inst_num": 15, "block_inst_list": ["%244 = sext i32 %240 to i64, !dbg !240", "%245 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %244, i64 %59, !dbg !240", "%246 = load i64, i64* %245, align 8, !dbg !240, !tbaa !68", "%247 = sub nsw i32 %240, %58, !dbg !242", "%248 = sext i32 %247 to i64, !dbg !243", "%249 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %248, i64 %65, !dbg !243", "%250 = load i64, i64* %249, align 8, !dbg !243, !tbaa !68", "%251 = mul nsw i64 %250, %246, !dbg !244", "%252 = srem i64 %251, 1000000007, !dbg !245", "%253 = shl nsw i64 %252, 1, !dbg !246", "%254 = srem i64 %253, 1000000007, !dbg !247", "%255 = sub nsw i64 %235, %254, !dbg !248", "store i64 %255, i64* @ans, align 8, !dbg !248, !tbaa !68", "%256 = icmp sgt i64 %255, -1, !dbg !249", "br i1 %256, label %257, label %261, !dbg !251"], "block_insts": [{"inst_id": "343", "instruction": "%244 = sext i32 %240 to i64, !dbg !240", "opcode": "sext", "operand_list": ["%240 = mul nsw i32 %239, %238, !dbg !236"], "var_name": "%244"}, {"inst_id": "344", "instruction": "%245 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %244, i64 %59, !dbg !240", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%244 = sext i32 %240 to i64, !dbg !240", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%245"}, {"inst_id": "345", "instruction": "%246 = load i64, i64* %245, align 8, !dbg !240, !tbaa !68", "opcode": "load", "operand_list": ["%245 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %244, i64 %59, !dbg !240"], "var_name": "%246"}, {"inst_id": "346", "instruction": "%247 = sub nsw i32 %240, %58, !dbg !242", "opcode": "sub", "operand_list": ["%240 = mul nsw i32 %239, %238, !dbg !236", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%247"}, {"inst_id": "347", "instruction": "%248 = sext i32 %247 to i64, !dbg !243", "opcode": "sext", "operand_list": ["%247 = sub nsw i32 %240, %58, !dbg !242"], "var_name": "%248"}, {"inst_id": "348", "instruction": "%249 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %248, i64 %65, !dbg !243", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%248 = sext i32 %247 to i64, !dbg !243", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%249"}, {"inst_id": "349", "instruction": "%250 = load i64, i64* %249, align 8, !dbg !243, !tbaa !68", "opcode": "load", "operand_list": ["%249 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %248, i64 %65, !dbg !243"], "var_name": "%250"}, {"inst_id": "350", "instruction": "%251 = mul nsw i64 %250, %246, !dbg !244", "opcode": "mul", "operand_list": ["%250 = load i64, i64* %249, align 8, !dbg !243, !tbaa !68", "%246 = load i64, i64* %245, align 8, !dbg !240, !tbaa !68"], "var_name": "%251"}, {"inst_id": "351", "instruction": "%252 = srem i64 %251, 1000000007, !dbg !245", "opcode": "srem", "operand_list": ["%251 = mul nsw i64 %250, %246, !dbg !244", "i64 1000000007"], "var_name": "%252"}, {"inst_id": "352", "instruction": "%253 = shl nsw i64 %252, 1, !dbg !246", "opcode": "shl", "operand_list": ["%252 = srem i64 %251, 1000000007, !dbg !245", "i64 1"], "var_name": "%253"}, {"inst_id": "353", "instruction": "%254 = srem i64 %253, 1000000007, !dbg !247", "opcode": "srem", "operand_list": ["%253 = shl nsw i64 %252, 1, !dbg !246", "i64 1000000007"], "var_name": "%254"}, {"inst_id": "354", "instruction": "%255 = sub nsw i64 %235, %254, !dbg !248", "opcode": "sub", "operand_list": ["%235 = phi i64 [ %206, %208 ], [ %231, %228 ], [ %233, %232 ], [ %206, %205 ]", "%254 = srem i64 %253, 1000000007, !dbg !247"], "var_name": "%255"}, {"inst_id": "355", "instruction": "store i64 %255, i64* @ans, align 8, !dbg !248, !tbaa !68", "opcode": "store", "operand_list": ["%255 = sub nsw i64 %235, %254, !dbg !248", "@ans"]}, {"inst_id": "356", "instruction": "%256 = icmp sgt i64 %255, -1, !dbg !249", "opcode": "icmp", "operand_list": ["%255 = sub nsw i64 %235, %254, !dbg !248", "i64 -1"], "var_name": "%256"}, {"inst_id": "357", "instruction": "br i1 %256, label %257, label %261, !dbg !251", "opcode": "br", "branch_condition": "%256 = icmp sgt i64 %255, -1, !dbg !249", "true_target": "%257", "false_target": "%261"}]}, {"block_name": "block-257", "block_var_list": ["%258", "%259", "%260"], "inst_num": 5, "block_inst_list": ["%258 = trunc i64 %255 to i32, !dbg !252", "%259 = urem i32 %258, 1000000007, !dbg !252", "%260 = zext i32 %259 to i64, !dbg !252", "store i64 %260, i64* @ans, align 8, !dbg !252, !tbaa !68", "br label %263, !dbg !253"], "block_insts": [{"inst_id": "358", "instruction": "%258 = trunc i64 %255 to i32, !dbg !252", "opcode": "trunc", "operand_list": ["%255 = sub nsw i64 %235, %254, !dbg !248"], "var_name": "%258"}, {"inst_id": "359", "instruction": "%259 = urem i32 %258, 1000000007, !dbg !252", "opcode": "urem", "operand_list": ["%258 = trunc i64 %255 to i32, !dbg !252", "i32 1000000007"], "var_name": "%259"}, {"inst_id": "360", "instruction": "%260 = zext i32 %259 to i64, !dbg !252", "opcode": "zext", "operand_list": ["%259 = urem i32 %258, 1000000007, !dbg !252"], "var_name": "%260"}, {"inst_id": "361", "instruction": "store i64 %260, i64* @ans, align 8, !dbg !252, !tbaa !68", "opcode": "store", "operand_list": ["%260 = zext i32 %259 to i64, !dbg !252", "@ans"]}, {"inst_id": "362", "instruction": "br label %263, !dbg !253", "opcode": "br", "branch_condition": "False", "br_target": "%263"}]}, {"block_name": "block-261", "block_var_list": ["%262"], "inst_num": 3, "block_inst_list": ["%262 = add nsw i64 %255, 1000000007, !dbg !254", "store i64 %262, i64* @ans, align 8, !dbg !254, !tbaa !68", "br label %263"], "block_insts": [{"inst_id": "363", "instruction": "%262 = add nsw i64 %255, 1000000007, !dbg !254", "opcode": "add", "operand_list": ["%255 = sub nsw i64 %235, %254, !dbg !248", "i64 1000000007"], "var_name": "%262"}, {"inst_id": "364", "instruction": "store i64 %262, i64* @ans, align 8, !dbg !254, !tbaa !68", "opcode": "store", "operand_list": ["%262 = add nsw i64 %255, 1000000007, !dbg !254", "@ans"]}, {"inst_id": "365", "instruction": "br label %263", "opcode": "br", "branch_condition": "False", "br_target": "%263"}]}, {"block_name": "block-263", "block_var_list": ["%264", "%265"], "inst_num": 3, "block_inst_list": ["%264 = phi i64 [ %235, %237 ], [ %260, %257 ], [ %262, %261 ], [ %235, %234 ]", "%265 = and i1 %179, %181, !dbg !255", "br i1 %265, label %266, label %290, !dbg !255"], "block_insts": [{"inst_id": "366", "instruction": "%264 = phi i64 [ %235, %237 ], [ %260, %257 ], [ %262, %261 ], [ %235, %234 ]", "opcode": "phi", "operand_list": ["%235 = phi i64 [ %206, %208 ], [ %231, %228 ], [ %233, %232 ], [ %206, %205 ]", "%260 = zext i32 %259 to i64, !dbg !252", "%262 = add nsw i64 %255, 1000000007, !dbg !254", "%235 = phi i64 [ %206, %208 ], [ %231, %228 ], [ %233, %232 ], [ %206, %205 ]"], "var_name": "%264"}, {"inst_id": "367", "instruction": "%265 = and i1 %179, %181, !dbg !255", "opcode": "and", "operand_list": ["%179 = phi i1 [ true, %155 ], [ true, %172 ], [ true, %176 ], [ false, %152 ], [ false, %126 ]", "%181 = icmp sgt i32 %5, 2, !dbg !188"], "var_name": "%265"}, {"inst_id": "368", "instruction": "br i1 %265, label %266, label %290, !dbg !255", "opcode": "br", "branch_condition": "False", "br_target": "%266"}]}, {"block_name": "block-266", "block_var_list": ["%267", "%268", "%269", "%270", "%271"], "inst_num": 6, "block_inst_list": ["%267 = add nsw i32 %4, -2, !dbg !257", "%268 = add nsw i32 %5, -2, !dbg !258", "%269 = mul nsw i32 %268, %267, !dbg !259", "%270 = add nsw i32 %64, %58, !dbg !260", "%271 = icmp slt i32 %269, %270, !dbg !261", "br i1 %271, label %290, label %272, !dbg !262"], "block_insts": [{"inst_id": "369", "instruction": "%267 = add nsw i32 %4, -2, !dbg !257", "opcode": "add", "operand_list": ["%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44", "i32 -2"], "var_name": "%267"}, {"inst_id": "370", "instruction": "%268 = add nsw i32 %5, -2, !dbg !258", "opcode": "add", "operand_list": ["%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44", "i32 -2"], "var_name": "%268"}, {"inst_id": "371", "instruction": "%269 = mul nsw i32 %268, %267, !dbg !259", "opcode": "mul", "operand_list": ["%268 = add nsw i32 %5, -2, !dbg !258", "%267 = add nsw i32 %4, -2, !dbg !257"], "var_name": "%269"}, {"inst_id": "372", "instruction": "%270 = add nsw i32 %64, %58, !dbg !260", "opcode": "add", "operand_list": ["%64 = load i32, i32* @L, align 4, !dbg !94, !tbaa !44", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%270"}, {"inst_id": "373", "instruction": "%271 = icmp slt i32 %269, %270, !dbg !261", "opcode": "icmp", "operand_list": ["%269 = mul nsw i32 %268, %267, !dbg !259", "%270 = add nsw i32 %64, %58, !dbg !260"], "var_name": "%271"}, {"inst_id": "374", "instruction": "br i1 %271, label %290, label %272, !dbg !262", "opcode": "br", "branch_condition": "%271 = icmp slt i32 %269, %270, !dbg !261", "true_target": "%290", "false_target": "%272"}]}, {"block_name": "block-272", "block_var_list": ["%273", "%274", "%275", "%276", "%277", "%278", "%279", "%280", "%281", "%282", "%283"], "inst_num": 13, "block_inst_list": ["%273 = sext i32 %269 to i64, !dbg !263", "%274 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %273, i64 %59, !dbg !263", "%275 = load i64, i64* %274, align 8, !dbg !263, !tbaa !68", "%276 = sub nsw i32 %269, %58, !dbg !265", "%277 = sext i32 %276 to i64, !dbg !266", "%278 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %277, i64 %65, !dbg !266", "%279 = load i64, i64* %278, align 8, !dbg !266, !tbaa !68", "%280 = mul nsw i64 %279, %275, !dbg !267", "%281 = srem i64 %280, 1000000007, !dbg !268", "%282 = add nsw i64 %281, %264, !dbg !269", "store i64 %282, i64* @ans, align 8, !dbg !269, !tbaa !68", "%283 = icmp sgt i64 %282, -1, !dbg !270", "br i1 %283, label %284, label %288, !dbg !272"], "block_insts": [{"inst_id": "375", "instruction": "%273 = sext i32 %269 to i64, !dbg !263", "opcode": "sext", "operand_list": ["%269 = mul nsw i32 %268, %267, !dbg !259"], "var_name": "%273"}, {"inst_id": "376", "instruction": "%274 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %273, i64 %59, !dbg !263", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%273 = sext i32 %269 to i64, !dbg !263", "%59 = sext i32 %58 to i64, !dbg !90"], "var_name": "%274"}, {"inst_id": "377", "instruction": "%275 = load i64, i64* %274, align 8, !dbg !263, !tbaa !68", "opcode": "load", "operand_list": ["%274 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %273, i64 %59, !dbg !263"], "var_name": "%275"}, {"inst_id": "378", "instruction": "%276 = sub nsw i32 %269, %58, !dbg !265", "opcode": "sub", "operand_list": ["%269 = mul nsw i32 %268, %267, !dbg !259", "%58 = load i32, i32* @D, align 4, !dbg !91, !tbaa !44"], "var_name": "%276"}, {"inst_id": "379", "instruction": "%277 = sext i32 %276 to i64, !dbg !266", "opcode": "sext", "operand_list": ["%276 = sub nsw i32 %269, %58, !dbg !265"], "var_name": "%277"}, {"inst_id": "380", "instruction": "%278 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %277, i64 %65, !dbg !266", "opcode": "getelementptr", "operand_list": ["@p", "i64 0", "%277 = sext i32 %276 to i64, !dbg !266", "%65 = sext i32 %64 to i64, !dbg !93"], "var_name": "%278"}, {"inst_id": "381", "instruction": "%279 = load i64, i64* %278, align 8, !dbg !266, !tbaa !68", "opcode": "load", "operand_list": ["%278 = getelementptr inbounds [901 x [901 x i64]], [901 x [901 x i64]]* @p, i64 0, i64 %277, i64 %65, !dbg !266"], "var_name": "%279"}, {"inst_id": "382", "instruction": "%280 = mul nsw i64 %279, %275, !dbg !267", "opcode": "mul", "operand_list": ["%279 = load i64, i64* %278, align 8, !dbg !266, !tbaa !68", "%275 = load i64, i64* %274, align 8, !dbg !263, !tbaa !68"], "var_name": "%280"}, {"inst_id": "383", "instruction": "%281 = srem i64 %280, 1000000007, !dbg !268", "opcode": "srem", "operand_list": ["%280 = mul nsw i64 %279, %275, !dbg !267", "i64 1000000007"], "var_name": "%281"}, {"inst_id": "384", "instruction": "%282 = add nsw i64 %281, %264, !dbg !269", "opcode": "add", "operand_list": ["%281 = srem i64 %280, 1000000007, !dbg !268", "%264 = phi i64 [ %235, %237 ], [ %260, %257 ], [ %262, %261 ], [ %235, %234 ]"], "var_name": "%282"}, {"inst_id": "385", "instruction": "store i64 %282, i64* @ans, align 8, !dbg !269, !tbaa !68", "opcode": "store", "operand_list": ["%282 = add nsw i64 %281, %264, !dbg !269", "@ans"]}, {"inst_id": "386", "instruction": "%283 = icmp sgt i64 %282, -1, !dbg !270", "opcode": "icmp", "operand_list": ["%282 = add nsw i64 %281, %264, !dbg !269", "i64 -1"], "var_name": "%283"}, {"inst_id": "387", "instruction": "br i1 %283, label %284, label %288, !dbg !272", "opcode": "br", "branch_condition": "%283 = icmp sgt i64 %282, -1, !dbg !270", "true_target": "%284", "false_target": "%288"}]}, {"block_name": "block-284", "block_var_list": ["%285", "%286", "%287"], "inst_num": 5, "block_inst_list": ["%285 = trunc i64 %282 to i32, !dbg !273", "%286 = urem i32 %285, 1000000007, !dbg !273", "%287 = zext i32 %286 to i64, !dbg !273", "store i64 %287, i64* @ans, align 8, !dbg !273, !tbaa !68", "br label %290, !dbg !274"], "block_insts": [{"inst_id": "388", "instruction": "%285 = trunc i64 %282 to i32, !dbg !273", "opcode": "trunc", "operand_list": ["%282 = add nsw i64 %281, %264, !dbg !269"], "var_name": "%285"}, {"inst_id": "389", "instruction": "%286 = urem i32 %285, 1000000007, !dbg !273", "opcode": "urem", "operand_list": ["%285 = trunc i64 %282 to i32, !dbg !273", "i32 1000000007"], "var_name": "%286"}, {"inst_id": "390", "instruction": "%287 = zext i32 %286 to i64, !dbg !273", "opcode": "zext", "operand_list": ["%286 = urem i32 %285, 1000000007, !dbg !273"], "var_name": "%287"}, {"inst_id": "391", "instruction": "store i64 %287, i64* @ans, align 8, !dbg !273, !tbaa !68", "opcode": "store", "operand_list": ["%287 = zext i32 %286 to i64, !dbg !273", "@ans"]}, {"inst_id": "392", "instruction": "br label %290, !dbg !274", "opcode": "br", "branch_condition": "False", "br_target": "%290"}]}, {"block_name": "block-288", "block_var_list": ["%289"], "inst_num": 3, "block_inst_list": ["%289 = add nsw i64 %282, 1000000007, !dbg !275", "store i64 %289, i64* @ans, align 8, !dbg !275, !tbaa !68", "br label %290"], "block_insts": [{"inst_id": "393", "instruction": "%289 = add nsw i64 %282, 1000000007, !dbg !275", "opcode": "add", "operand_list": ["%282 = add nsw i64 %281, %264, !dbg !269", "i64 1000000007"], "var_name": "%289"}, {"inst_id": "394", "instruction": "store i64 %289, i64* @ans, align 8, !dbg !275, !tbaa !68", "opcode": "store", "operand_list": ["%289 = add nsw i64 %282, 1000000007, !dbg !275", "@ans"]}, {"inst_id": "395", "instruction": "br label %290", "opcode": "br", "branch_condition": "False", "br_target": "%290"}]}, {"block_name": "block-290", "block_var_list": ["%291", "%292", "%293", "%294", "%295", "%296", "%297", "%298", "%299", "%300", "%301", "%302"], "inst_num": 15, "block_inst_list": ["%291 = phi i64 [ %264, %266 ], [ %287, %284 ], [ %289, %288 ], [ %264, %263 ], !dbg !276", "%292 = load i32, i32* @R, align 4, !dbg !277, !tbaa !44", "%293 = sub i32 1, %4, !dbg !278", "%294 = add i32 %293, %292, !dbg !279", "%295 = load i32, i32* @C, align 4, !dbg !280, !tbaa !44", "%296 = sub i32 1, %5, !dbg !281", "%297 = add i32 %296, %295, !dbg !282", "%298 = mul nsw i32 %297, %294, !dbg !283", "call void @llvm.dbg.value(metadata i32 %298, metadata !81, metadata !DIExpression()), !dbg !121", "%299 = sext i32 %298 to i64, !dbg !284", "%300 = mul nsw i64 %291, %299, !dbg !285", "%301 = srem i64 %300, 1000000007, !dbg !286", "store i64 %301, i64* @ans, align 8, !dbg !287, !tbaa !68", "%302 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 %301), !dbg !288", "ret i32 0, !dbg !289"], "block_insts": [{"inst_id": "396", "instruction": "%291 = phi i64 [ %264, %266 ], [ %287, %284 ], [ %289, %288 ], [ %264, %263 ], !dbg !276", "opcode": "phi", "operand_list": ["%264 = phi i64 [ %235, %237 ], [ %260, %257 ], [ %262, %261 ], [ %235, %234 ]", "%287 = zext i32 %286 to i64, !dbg !273", "%289 = add nsw i64 %282, 1000000007, !dbg !275", "%264 = phi i64 [ %235, %237 ], [ %260, %257 ], [ %262, %261 ], [ %235, %234 ]"], "var_name": "%291"}, {"inst_id": "397", "instruction": "%292 = load i32, i32* @R, align 4, !dbg !277, !tbaa !44", "opcode": "load", "operand_list": ["@R"], "var_name": "%292"}, {"inst_id": "398", "instruction": "%293 = sub i32 1, %4, !dbg !278", "opcode": "sub", "operand_list": ["i32 1", "%4 = load i32, i32* @X, align 4, !dbg !43, !tbaa !44"], "var_name": "%293"}, {"inst_id": "399", "instruction": "%294 = add i32 %293, %292, !dbg !279", "opcode": "add", "operand_list": ["%293 = sub i32 1, %4, !dbg !278", "%292 = load i32, i32* @R, align 4, !dbg !277, !tbaa !44"], "var_name": "%294"}, {"inst_id": "400", "instruction": "%295 = load i32, i32* @C, align 4, !dbg !280, !tbaa !44", "opcode": "load", "operand_list": ["@C"], "var_name": "%295"}, {"inst_id": "401", "instruction": "%296 = sub i32 1, %5, !dbg !281", "opcode": "sub", "operand_list": ["i32 1", "%5 = load i32, i32* @Y, align 4, !dbg !48, !tbaa !44"], "var_name": "%296"}, {"inst_id": "402", "instruction": "%297 = add i32 %296, %295, !dbg !282", "opcode": "add", "operand_list": ["%296 = sub i32 1, %5, !dbg !281", "%295 = load i32, i32* @C, align 4, !dbg !280, !tbaa !44"], "var_name": "%297"}, {"inst_id": "403", "instruction": "%298 = mul nsw i32 %297, %294, !dbg !283", "opcode": "mul", "operand_list": ["%297 = add i32 %296, %295, !dbg !282", "%294 = add i32 %293, %292, !dbg !279"], "var_name": "%298"}, {"inst_id": "404", "instruction": "call void @llvm.dbg.value(metadata i32 %298, metadata !81, metadata !DIExpression()), !dbg !121", "opcode": "call", "operand_list": ["i32 %298", "!81 = !DILocalVariable(name: \"space\", scope: !76, file: !3, line: 77, type: !16)", "!DIExpression()"], "called_function_name": "@llvm.dbg.value", "called_function_return_type": "void"}, {"inst_id": "405", "instruction": "%299 = sext i32 %298 to i64, !dbg !284", "opcode": "sext", "operand_list": ["%298 = mul nsw i32 %297, %294, !dbg !283"], "var_name": "%299"}, {"inst_id": "406", "instruction": "%300 = mul nsw i64 %291, %299, !dbg !285", "opcode": "mul", "operand_list": ["%291 = phi i64 [ %264, %266 ], [ %287, %284 ], [ %289, %288 ], [ %264, %263 ], !dbg !276", "%299 = sext i32 %298 to i64, !dbg !284"], "var_name": "%300"}, {"inst_id": "407", "instruction": "%301 = srem i64 %300, 1000000007, !dbg !286", "opcode": "srem", "operand_list": ["%300 = mul nsw i64 %291, %299, !dbg !285", "i64 1000000007"], "var_name": "%301"}, {"inst_id": "408", "instruction": "store i64 %301, i64* @ans, align 8, !dbg !287, !tbaa !68", "opcode": "store", "operand_list": ["%301 = srem i64 %300, 1000000007, !dbg !286", "@ans"]}, {"inst_id": "409", "instruction": "%302 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 %301), !dbg !288", "opcode": "call", "operand_list": ["@.str.1", "%301 = srem i64 %300, 1000000007, !dbg !286"], "var_name": "%302", "called_function_name": "@printf", "called_function_return_type": "dso_local i32"}, {"inst_id": "410", "instruction": "ret i32 0, !dbg !289", "opcode": "ret", "return_value": "i32 0"}]}]}]