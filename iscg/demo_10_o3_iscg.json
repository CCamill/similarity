{"main": {"nodes": ["main", "block-0", "0", "1", "2", "3", "4", "@.str", "5", "@.str.1", "6", "7", "8", "9", "block-9", "block-11", "10", "@str.23", "11", "block-100", "12", "13", "14", "15", "16", "17", "18", "block-17", "block-19", "19", "@str.22", "20", "21", "22", "23", "24", "@.str.18", "25", "26", "27", "28", "29", "30", "@.str.19", "31", "32", "block-31", "33", "34", "35", "36", "block-35", "block-60", "37", "38", "block-37", "39", "46", "40", "45", "41", "42", "block-41", "block-43", "43", "44", "block-47", "47", "48", "49", "52", "50", "51", "53", "54", "55", "56", "block-55", "block-58", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "@str", "68", "69", "70", "block-64", "block-88", "71", "90", "72", "73", "74", "75", "block-69", "block-73", "76", "77", "@.str.6", "@.str.7", "@.str.8", "78", "79", "80", "@.str.9", "81", "82", "83", "84", "85", "86", "87", "88", "89", "@.str.10", "91", "92", "93", "94", "95", "@str.24", "96", "@.str.12", "97", "@.str.13", "98", "@.str.14", "99", "@.str.15", "100", "@.str.16", "101", "@str.21", "102", "@.str.20", "103", "104", "105", "106", "107", "108", "109", "110"], "links": [["main", "block-0", "Function_Entry"], ["block-0", "0", "Sequential"], ["block-0", "1", "Sequential"], ["block-0", "4", "Sequential"], ["0", "37", "Data"], ["1", "2", "Data"], ["1", "5", "Data"], ["1", "6", "Data"], ["1", "33", "Data"], ["1", "68", "Data"], ["1", "91", "Data"], ["2", "3", "Data"], ["2", "109", "Data"], ["@.str", "4", "Global"], ["@.str.1", "5", "Global"], ["6", "7", "Data"], ["6", "12", "Data"], ["6", "13", "Data"], ["7", "8", "Data"], ["8", "9", "Data"], ["9", "block-9", "Control"], ["9", "block-11", "Control"], ["block-9", "10", "Sequential"], ["block-11", "12", "Sequential"], ["block-11", "13", "Sequential"], ["10", "11", "Sequential"], ["@str.23", "10", "Global"], ["11", "block-100", "Control"], ["block-100", "108", "Sequential"], ["block-100", "109", "Sequential"], ["13", "14", "Data"], ["13", "31", "Data"], ["14", "15", "Data"], ["15", "16", "Data"], ["15", "17", "Data"], ["15", "106", "Data"], ["16", "25", "Data"], ["16", "26", "Data"], ["16", "27", "Data"], ["16", "28", "Data"], ["16", "29", "Data"], ["16", "50", "Data"], ["16", "53", "Data"], ["16", "58", "Data"], ["16", "60", "Data"], ["16", "72", "Data"], ["16", "81", "Data"], ["16", "82", "Data"], ["16", "84", "Data"], ["16", "87", "Data"], ["17", "18", "Data"], ["18", "block-17", "Control"], ["18", "block-19", "Control"], ["block-17", "19", "Sequential"], ["19", "20", "Sequential"], ["@str.22", "19", "Global"], ["20", "block-100", "Control"], ["21", "22", "Data"], ["21", "25", "Data"], ["21", "26", "Data"], ["21", "27", "Data"], ["21", "28", "Data"], ["21", "29", "Data"], ["22", "21", "Data"], ["22", "23", "Data"], ["22", "31", "Data"], ["23", "24", "Data"], ["@.str.18", "24", "Global"], ["25", "30", "Data"], ["26", "30", "Data"], ["27", "30", "Data"], ["28", "30", "Data"], ["29", "30", "Data"], ["@.str.19", "30", "Global"], ["31", "32", "Data"], ["32", "block-31", "Control"], ["32", "block-19", "Control"], ["block-31", "33", "Sequential"], ["33", "34", "Data"], ["33", "35", "Data"], ["34", "39", "Data"], ["34", "41", "Data"], ["34", "47", "Data"], ["35", "36", "Data"], ["36", "block-35", "Control"], ["36", "block-60", "Control"], ["block-35", "37", "Sequential"], ["block-60", "67", "Sequential"], ["block-60", "68", "Sequential"], ["37", "38", "Sequential"], ["37", "57", "Data"], ["37", "59", "Data"], ["37", "62", "Data"], ["37", "63", "Data"], ["38", "block-37", "Control"], ["block-37", "39", "Sequential"], ["block-37", "40", "Sequential"], ["39", "43", "Data"], ["39", "46", "Data"], ["46", "39", "Data"], ["40", "41", "Data"], ["40", "45", "Data"], ["45", "40", "Data"], ["45", "47", "Data"], ["41", "42", "Data"], ["42", "block-41", "Control"], ["42", "block-43", "Control"], ["block-41", "43", "Sequential"], ["block-43", "45", "Sequential"], ["block-43", "46", "Sequential"], ["43", "44", "Sequential"], ["43", "65", "Data"], ["44", "block-47", "Control"], ["47", "48", "Data"], ["48", "block-60", "Control"], ["48", "block-37", "Control"], ["49", "50", "Data"], ["49", "52", "Data"], ["49", "58", "Data"], ["52", "49", "Data"], ["52", "53", "Data"], ["52", "60", "Data"], ["52", "65", "Data"], ["50", "51", "Data"], ["51", "55", "Data"], ["53", "54", "Data"], ["54", "55", "Data"], ["55", "56", "Data"], ["56", "block-55", "Control"], ["56", "block-58", "Control"], ["block-55", "57", "Sequential"], ["block-55", "58", "Sequential"], ["block-55", "60", "Sequential"], ["block-55", "63", "Sequential"], ["block-58", "65", "Sequential"], ["57", "64", "Sequential"], ["58", "59", "Data"], ["58", "61", "Data"], ["59", "64", "Sequential"], ["60", "61", "Data"], ["60", "62", "Data"], ["61", "64", "Sequential"], ["62", "64", "Sequential"], ["63", "64", "Sequential"], ["64", "block-58", "Control"], ["65", "66", "Data"], ["66", "block-43", "Control"], ["66", "block-47", "Control"], ["@str", "67", "Global"], ["68", "69", "Data"], ["69", "70", "Data"], ["70", "block-64", "Control"], ["70", "block-88", "Control"], ["block-64", "71", "Sequential"], ["block-88", "95", "Sequential"], ["block-88", "96", "Sequential"], ["block-88", "97", "Sequential"], ["block-88", "98", "Sequential"], ["block-88", "99", "Sequential"], ["block-88", "100", "Sequential"], ["block-88", "101", "Sequential"], ["block-88", "102", "Sequential"], ["block-88", "103", "Sequential"], ["block-88", "104", "Sequential"], ["block-88", "105", "Sequential"], ["block-88", "106", "Sequential"], ["71", "72", "Data"], ["71", "81", "Data"], ["71", "82", "Data"], ["71", "84", "Data"], ["71", "87", "Data"], ["71", "90", "Data"], ["90", "71", "Data"], ["90", "93", "Data"], ["72", "73", "Data"], ["73", "74", "Data"], ["73", "76", "Data"], ["74", "75", "Data"], ["75", "block-69", "Control"], ["75", "block-73", "Control"], ["block-69", "76", "Sequential"], ["block-73", "80", "Sequential"], ["block-73", "81", "Sequential"], ["block-73", "82", "Sequential"], ["block-73", "84", "Sequential"], ["block-73", "87", "Sequential"], ["block-73", "90", "Sequential"], ["block-73", "91", "Sequential"], ["76", "77", "Data"], ["77", "78", "Data"], ["@.str.6", "77", "Global"], ["@.str.7", "77", "Global"], ["@.str.8", "77", "Global"], ["78", "79", "Sequential"], ["78", "80", "Data"], ["79", "block-73", "Control"], ["80", "89", "Data"], ["@.str.9", "80", "Global"], ["81", "89", "Data"], ["82", "83", "Data"], ["83", "89", "Data"], ["84", "85", "Data"], ["85", "86", "Data"], ["86", "89", "Data"], ["87", "88", "Data"], ["88", "89", "Data"], ["@.str.10", "89", "Global"], ["91", "92", "Data"], ["92", "93", "Data"], ["93", "94", "Data"], ["94", "block-64", "Control"], ["94", "block-88", "Control"], ["95", "107", "Sequential"], ["@str.24", "95", "Global"], ["96", "107", "Sequential"], ["@.str.12", "96", "Global"], ["97", "107", "Sequential"], ["@.str.13", "97", "Global"], ["98", "107", "Sequential"], ["@.str.14", "98", "Global"], ["99", "107", "Sequential"], ["@.str.15", "99", "Global"], ["100", "107", "Sequential"], ["@.str.16", "100", "Global"], ["101", "107", "Sequential"], ["@str.21", "101", "Global"], ["102", "107", "Sequential"], ["@.str.20", "102", "Global"], ["@.str.20", "103", "Global"], ["@.str.20", "104", "Global"], ["@.str.20", "105", "Global"], ["103", "107", "Sequential"], ["104", "107", "Sequential"], ["105", "107", "Sequential"], ["106", "107", "Sequential"], ["107", "block-100", "Control"], ["108", "110", "Data"]], "nodes_info": {"main": {"function_params": [], "bb_num": 19}, "block-0": {"block_var_list": ["%1", "%2", "%3", "%4", "%5", "%6", "%7", "%8"], "block_inst_count": 10}, "0": {"instruction": "%1 = alloca %struct.Person.3, align 8", "opcode": "alloca"}, "1": {"instruction": "%2 = alloca i32, align 4", "opcode": "alloca"}, "2": {"instruction": "%3 = bitcast i32* %2 to i8*", "opcode": "bitcast"}, "3": {"instruction": "call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8", "opcode": "call"}, "4": {"instruction": "%4 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 100)", "opcode": "call"}, "@.str": {"define": "@.str = private unnamed_addr constant [39 x i8] c\"Enter the number of persons (max %d): \\00\", align 1 ", "is_global": "true"}, "5": {"instruction": "%5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %2)", "opcode": "call"}, "@.str.1": {"define": "@.str.1 = private unnamed_addr constant [3 x i8] c\"%d\\00\", align 1 ", "is_global": "true"}, "6": {"instruction": "%6 = load i32, i32* %2, align 4, !tbaa !2", "opcode": "load"}, "7": {"instruction": "%7 = add i32 %6, -1", "opcode": "add"}, "8": {"instruction": "%8 = icmp ugt i32 %7, 99", "opcode": "icmp"}, "9": {"instruction": "br i1 %8, label %9, label %11", "opcode": "br"}, "block-9": {"block_var_list": ["%10"], "block_inst_count": 2}, "block-11": {"block_var_list": ["%12", "%13", "%14", "%15", "%16"], "block_inst_count": 7}, "10": {"instruction": "%10 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([27 x i8], [27 x i8]* @str.23, i64 0, i64 0))", "opcode": "call"}, "@str.23": {"define": "@str.23 = private unnamed_addr constant [27 x i8] c\"Invalid number of persons.\\00\", align 1 ", "is_global": "true"}, "11": {"instruction": "br label %100", "opcode": "br"}, "block-100": {"block_var_list": ["%101"], "block_inst_count": 3}, "12": {"instruction": "store i32 %6, i32* @global_count, align 4, !tbaa !2", "opcode": "store"}, "13": {"instruction": "%12 = zext i32 %6 to i64", "opcode": "zext"}, "14": {"instruction": "%13 = mul nuw nsw i64 %12, 80", "opcode": "mul"}, "15": {"instruction": "%14 = call noalias i8* @malloc(i64 %13) #8", "opcode": "call"}, "16": {"instruction": "%15 = bitcast i8* %14 to %struct.Person.3*", "opcode": "bitcast"}, "17": {"instruction": "%16 = icmp eq i8* %14, null", "opcode": "icmp"}, "18": {"instruction": "br i1 %16, label %17, label %19", "opcode": "br"}, "block-17": {"block_var_list": ["%18"], "block_inst_count": 2}, "block-19": {"block_var_list": ["%20", "%21", "%22", "%23", "%24", "%25", "%26", "%27", "%28", "%29", "%30"], "block_inst_count": 12}, "19": {"instruction": "%18 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @str.22, i64 0, i64 0))", "opcode": "call"}, "@str.22": {"define": "@str.22 = private unnamed_addr constant [25 x i8] c\"Memory allocation failed\\00\", align 1 ", "is_global": "true"}, "20": {"instruction": "br label %100", "opcode": "br"}, "21": {"instruction": "%20 = phi i64 [ %21, %19 ], [ 0, %11 ]", "opcode": "phi"}, "22": {"instruction": "%21 = add nuw nsw i64 %20, 1", "opcode": "add"}, "23": {"instruction": "%22 = trunc i64 %21 to i32", "opcode": "trunc"}, "24": {"instruction": "%23 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([96 x i8], [96 x i8]* @.str.18, i64 0, i64 0), i32 %22) #8", "opcode": "call"}, "@.str.18": {"define": "@.str.18 = private unnamed_addr constant [96 x i8] c\"Enter name, age, height (m), weight (kg) and gender (0-Male, 1-Female, 2-Other) for person %d: \\00\", align 1 ", "is_global": "true"}, "25": {"instruction": "%24 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %20, i32 0, i64 0", "opcode": "getelementptr"}, "26": {"instruction": "%25 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %20, i32 1", "opcode": "getelementptr"}, "27": {"instruction": "%26 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %20, i32 2", "opcode": "getelementptr"}, "28": {"instruction": "%27 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %20, i32 3", "opcode": "getelementptr"}, "29": {"instruction": "%28 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %20, i32 4", "opcode": "getelementptr"}, "30": {"instruction": "%29 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i8* nonnull %24, i32* nonnull %25, float* nonnull %26, double* nonnull %27, i32* nonnull %28) #8", "opcode": "call"}, "@.str.19": {"define": "@.str.19 = private unnamed_addr constant [16 x i8] c\"%s %d %f %lf %d\\00\", align 1 ", "is_global": "true"}, "31": {"instruction": "%30 = icmp eq i64 %21, %12", "opcode": "icmp"}, "32": {"instruction": "br i1 %30, label %31, label %19", "opcode": "br"}, "block-31": {"block_var_list": ["%32", "%33", "%34"], "block_inst_count": 4}, "33": {"instruction": "%32 = load i32, i32* %2, align 4, !tbaa !2", "opcode": "load"}, "34": {"instruction": "%33 = add i32 %32, -1", "opcode": "add"}, "35": {"instruction": "%34 = icmp sgt i32 %32, 1", "opcode": "icmp"}, "36": {"instruction": "br i1 %34, label %35, label %60", "opcode": "br"}, "block-35": {"block_var_list": ["%36"], "block_inst_count": 2}, "block-60": {"block_var_list": ["%61", "%62", "%63"], "block_inst_count": 4}, "37": {"instruction": "%36 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %1, i64 0, i32 0, i64 0", "opcode": "getelementptr"}, "38": {"instruction": "br label %37", "opcode": "br"}, "block-37": {"block_var_list": ["%38", "%39", "%40"], "block_inst_count": 4}, "39": {"instruction": "%38 = phi i32 [ %33, %35 ], [ %45, %43 ]", "opcode": "phi"}, "46": {"instruction": "%45 = add i32 %38, -1", "opcode": "add"}, "40": {"instruction": "%39 = phi i32 [ 0, %35 ], [ %44, %43 ]", "opcode": "phi"}, "45": {"instruction": "%44 = add nuw nsw i32 %39, 1", "opcode": "add"}, "41": {"instruction": "%40 = icmp sgt i32 %33, %39", "opcode": "icmp"}, "42": {"instruction": "br i1 %40, label %41, label %43", "opcode": "br"}, "block-41": {"block_var_list": ["%42"], "block_inst_count": 2}, "block-43": {"block_var_list": ["%44", "%45", "%46"], "block_inst_count": 4}, "43": {"instruction": "%42 = zext i32 %38 to i64", "opcode": "zext"}, "44": {"instruction": "br label %47", "opcode": "br"}, "block-47": {"block_var_list": ["%48", "%49", "%50", "%51", "%52", "%53", "%54"], "block_inst_count": 8}, "47": {"instruction": "%46 = icmp eq i32 %44, %33", "opcode": "icmp"}, "48": {"instruction": "br i1 %46, label %60, label %37", "opcode": "br"}, "49": {"instruction": "%48 = phi i64 [ 0, %41 ], [ %51, %58 ]", "opcode": "phi"}, "52": {"instruction": "%51 = add nuw nsw i64 %48, 1", "opcode": "add"}, "50": {"instruction": "%49 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %48, i32 1", "opcode": "getelementptr"}, "51": {"instruction": "%50 = load i32, i32* %49, align 4, !tbaa !6", "opcode": "load"}, "53": {"instruction": "%52 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %51, i32 1", "opcode": "getelementptr"}, "54": {"instruction": "%53 = load i32, i32* %52, align 4, !tbaa !6", "opcode": "load"}, "55": {"instruction": "%54 = icmp sgt i32 %50, %53", "opcode": "icmp"}, "56": {"instruction": "br i1 %54, label %55, label %58", "opcode": "br"}, "block-55": {"block_var_list": ["%56", "%57"], "block_inst_count": 8}, "block-58": {"block_var_list": ["%59"], "block_inst_count": 2}, "57": {"instruction": "call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %36)", "opcode": "call"}, "58": {"instruction": "%56 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %48, i32 0, i64 0", "opcode": "getelementptr"}, "59": {"instruction": "call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %36, i8* nonnull align 8 dereferenceable(80) %56, i64 80, i1 false) #8, !tbaa.struct !10", "opcode": "call"}, "60": {"instruction": "%57 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %51, i32 0, i64 0", "opcode": "getelementptr"}, "61": {"instruction": "call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %56, i8* nonnull align 8 dereferenceable(80) %57, i64 80, i1 false) #8, !tbaa.struct !10", "opcode": "call"}, "62": {"instruction": "call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %57, i8* nonnull align 8 dereferenceable(80) %36, i64 80, i1 false) #8, !tbaa.struct !10", "opcode": "call"}, "63": {"instruction": "call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %36)", "opcode": "call"}, "64": {"instruction": "br label %58", "opcode": "br"}, "65": {"instruction": "%59 = icmp eq i64 %51, %42", "opcode": "icmp"}, "66": {"instruction": "br i1 %59, label %43, label %47", "opcode": "br"}, "67": {"instruction": "%61 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @str, i64 0, i64 0))", "opcode": "call"}, "@str": {"define": "@str = private unnamed_addr constant [17 x i8] c\"\\0ASorted Persons:\\00\", align 1 ", "is_global": "true"}, "68": {"instruction": "%62 = load i32, i32* %2, align 4, !tbaa !2", "opcode": "load"}, "69": {"instruction": "%63 = icmp sgt i32 %62, 0", "opcode": "icmp"}, "70": {"instruction": "br i1 %63, label %64, label %88", "opcode": "br"}, "block-64": {"block_var_list": ["%65", "%66", "%67", "%68"], "block_inst_count": 5}, "block-88": {"block_var_list": ["%89", "%90", "%91", "%92", "%93", "%94", "%95", "%96", "%97", "%98", "%99"], "block_inst_count": 13}, "71": {"instruction": "%65 = phi i64 [ %84, %73 ], [ 0, %60 ]", "opcode": "phi"}, "90": {"instruction": "%84 = add nuw nsw i64 %65, 1", "opcode": "add"}, "72": {"instruction": "%66 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %65, i32 4", "opcode": "getelementptr"}, "73": {"instruction": "%67 = load i32, i32* %66, align 8, !tbaa !14", "opcode": "load"}, "74": {"instruction": "%68 = icmp ult i32 %67, 3", "opcode": "icmp"}, "75": {"instruction": "br i1 %68, label %69, label %73", "opcode": "br"}, "block-69": {"block_var_list": ["%70", "%71", "%72"], "block_inst_count": 4}, "block-73": {"block_var_list": ["%74", "%75", "%76", "%77", "%78", "%79", "%80", "%81", "%82", "%83", "%84", "%85", "%86", "%87"], "block_inst_count": 15}, "76": {"instruction": "%70 = sext i32 %67 to i64", "opcode": "sext"}, "77": {"instruction": "%71 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.displayPerson, i64 0, i64 %70", "opcode": "getelementptr"}, "@.str.6": {"define": "@.str.6 = private unnamed_addr constant [5 x i8] c\"Male\\00\", align 1 ", "is_global": "true"}, "@.str.7": {"define": "@.str.7 = private unnamed_addr constant [7 x i8] c\"Female\\00\", align 1 ", "is_global": "true"}, "@.str.8": {"define": "@.str.8 = private unnamed_addr constant [6 x i8] c\"Other\\00\", align 1 ", "is_global": "true"}, "78": {"instruction": "%72 = load i8*, i8** %71, align 8", "opcode": "load"}, "79": {"instruction": "br label %73", "opcode": "br"}, "80": {"instruction": "%74 = phi i8* [ %72, %69 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), %64 ]", "opcode": "phi"}, "@.str.9": {"define": "@.str.9 = private unnamed_addr constant [8 x i8] c\"Unknown\\00\", align 1 ", "is_global": "true"}, "81": {"instruction": "%75 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %65, i32 0, i64 0", "opcode": "getelementptr"}, "82": {"instruction": "%76 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %65, i32 1", "opcode": "getelementptr"}, "83": {"instruction": "%77 = load i32, i32* %76, align 4, !tbaa !6", "opcode": "load"}, "84": {"instruction": "%78 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %65, i32 2", "opcode": "getelementptr"}, "85": {"instruction": "%79 = load float, float* %78, align 8, !tbaa !15", "opcode": "load"}, "86": {"instruction": "%80 = fpext float %79 to double", "opcode": "fpext"}, "87": {"instruction": "%81 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %15, i64 %65, i32 3", "opcode": "getelementptr"}, "88": {"instruction": "%82 = load double, double* %81, align 8, !tbaa !16", "opcode": "load"}, "89": {"instruction": "%83 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i8* nonnull %75, i32 %77, double %80, double %82, i8* nonnull %74) #8", "opcode": "call"}, "@.str.10": {"define": "@.str.10 = private unnamed_addr constant [64 x i8] c\"Name: %s, Age: %d, Height: %.2f m, Weight: %.2f kg, Gender: %s\\0A\\00\", align 1 ", "is_global": "true"}, "91": {"instruction": "%85 = load i32, i32* %2, align 4, !tbaa !2", "opcode": "load"}, "92": {"instruction": "%86 = sext i32 %85 to i64", "opcode": "sext"}, "93": {"instruction": "%87 = icmp slt i64 %84, %86", "opcode": "icmp"}, "94": {"instruction": "br i1 %87, label %64, label %88", "opcode": "br"}, "95": {"instruction": "%89 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @str.24, i64 0, i64 0)) #8", "opcode": "call"}, "@str.24": {"define": "@str.24 = private unnamed_addr constant [24 x i8] c\"\\0AArithmetic Operations:\\00\", align 1 ", "is_global": "true"}, "96": {"instruction": "%90 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 10, i32 5, i32 15) #8", "opcode": "call"}, "@.str.12": {"define": "@.str.12 = private unnamed_addr constant [24 x i8] c\"Addition: %d + %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "97": {"instruction": "%91 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i32 10, i32 5, i32 5) #8", "opcode": "call"}, "@.str.13": {"define": "@.str.13 = private unnamed_addr constant [27 x i8] c\"Subtraction: %d - %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "98": {"instruction": "%92 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i32 10, i32 5, i32 50) #8", "opcode": "call"}, "@.str.14": {"define": "@.str.14 = private unnamed_addr constant [30 x i8] c\"Multiplication: %d * %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "99": {"instruction": "%93 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i32 10, i32 5, double 2.000000e+00) #8", "opcode": "call"}, "@.str.15": {"define": "@.str.15 = private unnamed_addr constant [26 x i8] c\"Division: %d / %d = %.2f\\0A\\00\", align 1 ", "is_global": "true"}, "100": {"instruction": "%94 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i32 10, i32 5, i32 0) #8", "opcode": "call"}, "@.str.16": {"define": "@.str.16 = private unnamed_addr constant [23 x i8] c\"Modulo: %d %% %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "101": {"instruction": "%95 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @str.21, i64 0, i64 0))", "opcode": "call"}, "@str.21": {"define": "@str.21 = private unnamed_addr constant [53 x i8] c\"\\0AUsing callback functions for arithmetic operations:\\00\", align 1 ", "is_global": "true"}, "102": {"instruction": "%96 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 15) #8", "opcode": "call"}, "@.str.20": {"define": "@.str.20 = private unnamed_addr constant [25 x i8] c\"Result of operation: %d\\0A\\00\", align 1 ", "is_global": "true"}, "103": {"instruction": "%97 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 5) #8", "opcode": "call"}, "104": {"instruction": "%98 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 50) #8", "opcode": "call"}, "105": {"instruction": "%99 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 2) #8", "opcode": "call"}, "106": {"instruction": "call void @free(i8* %14) #8", "opcode": "call"}, "107": {"instruction": "br label %100", "opcode": "br"}, "108": {"instruction": "%101 = phi i32 [ 1, %9 ], [ 1, %17 ], [ 0, %88 ]", "opcode": "phi"}, "109": {"instruction": "call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8", "opcode": "call"}, "110": {"instruction": "ret i32 %101", "opcode": "ret"}}}, "initializePersons": {"nodes": ["initializePersons", "block-0", "111", "112", "block-4", "block-6", "113", "114", "block-7", "115", "116", "117", "118", "119", "@.str.18", "120", "121", "122", "123", "124", "125", "@.str.19", "126", "127"], "links": [["initializePersons", "block-0", "Function_Entry"], ["block-0", "111", "Sequential"], ["111", "112", "Data"], ["112", "block-4", "Control"], ["112", "block-6", "Control"], ["block-4", "113", "Sequential"], ["block-6", "115", "Sequential"], ["113", "114", "Sequential"], ["113", "126", "Data"], ["114", "block-7", "Control"], ["116", "117", "Data"], ["116", "120", "Data"], ["116", "121", "Data"], ["116", "122", "Data"], ["116", "123", "Data"], ["116", "124", "Data"], ["117", "116", "Data"], ["117", "118", "Data"], ["117", "126", "Data"], ["118", "119", "Data"], ["@.str.18", "119", "Global"], ["120", "125", "Data"], ["121", "125", "Data"], ["122", "125", "Data"], ["123", "125", "Data"], ["124", "125", "Data"], ["@.str.19", "125", "Global"], ["126", "127", "Data"], ["127", "block-6", "Control"], ["127", "block-7", "Control"]], "nodes_info": {"initializePersons": {"function_params": ["%struct.Person.3* %0", "i32 %1"], "bb_num": 4}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "111": {"instruction": "%3 = icmp sgt i32 %1, 0", "opcode": "icmp", "call_fun_param": "True"}, "112": {"instruction": "br i1 %3, label %4, label %6", "opcode": "br"}, "block-4": {"block_var_list": ["%5"], "block_inst_count": 2}, "block-6": {"block_var_list": [], "block_inst_count": 1}, "113": {"instruction": "%5 = zext i32 %1 to i64", "opcode": "zext", "call_fun_param": "True"}, "114": {"instruction": "br label %7", "opcode": "br"}, "block-7": {"block_var_list": ["%8", "%9", "%10", "%11", "%12", "%13", "%14", "%15", "%16", "%17", "%18"], "block_inst_count": 12}, "115": {"instruction": "ret void", "opcode": "ret"}, "116": {"instruction": "%8 = phi i64 [ 0, %4 ], [ %9, %7 ]", "opcode": "phi"}, "117": {"instruction": "%9 = add nuw nsw i64 %8, 1", "opcode": "add"}, "118": {"instruction": "%10 = trunc i64 %9 to i32", "opcode": "trunc"}, "119": {"instruction": "%11 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([96 x i8], [96 x i8]* @.str.18, i64 0, i64 0), i32 %10)", "opcode": "call"}, "@.str.18": {"define": "@.str.18 = private unnamed_addr constant [96 x i8] c\"Enter name, age, height (m), weight (kg) and gender (0-Male, 1-Female, 2-Other) for person %d: \\00\", align 1 ", "is_global": "true"}, "120": {"instruction": "%12 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %8, i32 0, i64 0", "opcode": "getelementptr", "call_fun_param": "True"}, "121": {"instruction": "%13 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %8, i32 1", "opcode": "getelementptr", "call_fun_param": "True"}, "122": {"instruction": "%14 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %8, i32 2", "opcode": "getelementptr", "call_fun_param": "True"}, "123": {"instruction": "%15 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %8, i32 3", "opcode": "getelementptr", "call_fun_param": "True"}, "124": {"instruction": "%16 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %8, i32 4", "opcode": "getelementptr", "call_fun_param": "True"}, "125": {"instruction": "%17 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i8* %12, i32* nonnull %13, float* nonnull %14, double* nonnull %15, i32* nonnull %16)", "opcode": "call"}, "@.str.19": {"define": "@.str.19 = private unnamed_addr constant [16 x i8] c\"%s %d %f %lf %d\\00\", align 1 ", "is_global": "true"}, "126": {"instruction": "%18 = icmp eq i64 %9, %5", "opcode": "icmp"}, "127": {"instruction": "br i1 %18, label %6, label %7", "opcode": "br"}}}, "sortPersons": {"nodes": ["sortPersons", "block-0", "128", "129", "130", "131", "block-6", "block-14", "132", "133", "block-8", "134", "142", "135", "141", "136", "137", "block-12", "block-15", "138", "139", "block-19", "140", "143", "144", "145", "148", "146", "147", "149", "150", "151", "152", "block-27", "block-30", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162"], "links": [["sortPersons", "block-0", "Function_Entry"], ["block-0", "128", "Sequential"], ["block-0", "129", "Sequential"], ["block-0", "130", "Sequential"], ["128", "132", "Data"], ["129", "134", "Data"], ["129", "136", "Data"], ["129", "143", "Data"], ["130", "131", "Data"], ["131", "block-6", "Control"], ["131", "block-14", "Control"], ["block-6", "132", "Sequential"], ["block-14", "140", "Sequential"], ["132", "133", "Sequential"], ["132", "153", "Data"], ["132", "155", "Data"], ["132", "158", "Data"], ["132", "159", "Data"], ["133", "block-8", "Control"], ["block-8", "134", "Sequential"], ["block-8", "135", "Sequential"], ["134", "138", "Data"], ["134", "142", "Data"], ["142", "134", "Data"], ["135", "136", "Data"], ["135", "141", "Data"], ["141", "135", "Data"], ["141", "143", "Data"], ["136", "137", "Data"], ["137", "block-12", "Control"], ["137", "block-15", "Control"], ["block-12", "138", "Sequential"], ["block-15", "141", "Sequential"], ["block-15", "142", "Sequential"], ["138", "139", "Sequential"], ["138", "161", "Data"], ["139", "block-19", "Control"], ["143", "144", "Data"], ["144", "block-14", "Control"], ["144", "block-8", "Control"], ["145", "146", "Data"], ["145", "148", "Data"], ["145", "154", "Data"], ["148", "145", "Data"], ["148", "149", "Data"], ["148", "156", "Data"], ["148", "161", "Data"], ["146", "147", "Data"], ["147", "151", "Data"], ["149", "150", "Data"], ["150", "151", "Data"], ["151", "152", "Data"], ["152", "block-27", "Control"], ["152", "block-30", "Control"], ["block-27", "153", "Sequential"], ["block-27", "154", "Sequential"], ["block-27", "156", "Sequential"], ["block-27", "159", "Sequential"], ["block-30", "161", "Sequential"], ["153", "160", "Sequential"], ["154", "155", "Data"], ["154", "157", "Data"], ["155", "160", "Sequential"], ["156", "157", "Data"], ["156", "158", "Data"], ["157", "160", "Sequential"], ["158", "160", "Sequential"], ["159", "160", "Sequential"], ["160", "block-30", "Control"], ["161", "162", "Data"], ["162", "block-15", "Control"], ["162", "block-19", "Control"]], "nodes_info": {"sortPersons": {"function_params": ["%struct.Person.3* %0", "i32 %1"], "bb_num": 9}, "block-0": {"block_var_list": ["%3", "%4", "%5"], "block_inst_count": 4}, "128": {"instruction": "%3 = alloca %struct.Person.3, align 8", "opcode": "alloca"}, "129": {"instruction": "%4 = add i32 %1, -1", "opcode": "add", "call_fun_param": "True"}, "130": {"instruction": "%5 = icmp sgt i32 %1, 1", "opcode": "icmp", "call_fun_param": "True"}, "131": {"instruction": "br i1 %5, label %6, label %14", "opcode": "br"}, "block-6": {"block_var_list": ["%7"], "block_inst_count": 2}, "block-14": {"block_var_list": [], "block_inst_count": 1}, "132": {"instruction": "%7 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %3, i64 0, i32 0, i64 0", "opcode": "getelementptr"}, "133": {"instruction": "br label %8", "opcode": "br"}, "block-8": {"block_var_list": ["%9", "%10", "%11"], "block_inst_count": 4}, "134": {"instruction": "%9 = phi i32 [ %4, %6 ], [ %17, %15 ]", "opcode": "phi"}, "142": {"instruction": "%17 = add i32 %9, -1", "opcode": "add"}, "135": {"instruction": "%10 = phi i32 [ 0, %6 ], [ %16, %15 ]", "opcode": "phi"}, "141": {"instruction": "%16 = add nuw nsw i32 %10, 1", "opcode": "add"}, "136": {"instruction": "%11 = icmp sgt i32 %4, %10", "opcode": "icmp"}, "137": {"instruction": "br i1 %11, label %12, label %15", "opcode": "br"}, "block-12": {"block_var_list": ["%13"], "block_inst_count": 2}, "block-15": {"block_var_list": ["%16", "%17", "%18"], "block_inst_count": 4}, "138": {"instruction": "%13 = zext i32 %9 to i64", "opcode": "zext"}, "139": {"instruction": "br label %19", "opcode": "br"}, "block-19": {"block_var_list": ["%20", "%21", "%22", "%23", "%24", "%25", "%26"], "block_inst_count": 8}, "140": {"instruction": "ret void", "opcode": "ret"}, "143": {"instruction": "%18 = icmp eq i32 %16, %4", "opcode": "icmp"}, "144": {"instruction": "br i1 %18, label %14, label %8", "opcode": "br"}, "145": {"instruction": "%20 = phi i64 [ 0, %12 ], [ %23, %30 ]", "opcode": "phi"}, "148": {"instruction": "%23 = add nuw nsw i64 %20, 1", "opcode": "add"}, "146": {"instruction": "%21 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %20, i32 1", "opcode": "getelementptr", "call_fun_param": "True"}, "147": {"instruction": "%22 = load i32, i32* %21, align 4, !tbaa !2", "opcode": "load"}, "149": {"instruction": "%24 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %23, i32 1", "opcode": "getelementptr", "call_fun_param": "True"}, "150": {"instruction": "%25 = load i32, i32* %24, align 4, !tbaa !2", "opcode": "load"}, "151": {"instruction": "%26 = icmp sgt i32 %22, %25", "opcode": "icmp"}, "152": {"instruction": "br i1 %26, label %27, label %30", "opcode": "br"}, "block-27": {"block_var_list": ["%28", "%29"], "block_inst_count": 8}, "block-30": {"block_var_list": ["%31"], "block_inst_count": 2}, "153": {"instruction": "call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7)", "opcode": "call"}, "154": {"instruction": "%28 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %20, i32 0, i64 0", "opcode": "getelementptr", "call_fun_param": "True"}, "155": {"instruction": "call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %7, i8* nonnull align 8 dereferenceable(80) %28, i64 80, i1 false), !tbaa.struct !9", "opcode": "call"}, "156": {"instruction": "%29 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 %23, i32 0, i64 0", "opcode": "getelementptr", "call_fun_param": "True"}, "157": {"instruction": "tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %28, i8* nonnull align 8 dereferenceable(80) %29, i64 80, i1 false), !tbaa.struct !9", "opcode": "call"}, "158": {"instruction": "call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %29, i8* nonnull align 8 dereferenceable(80) %7, i64 80, i1 false), !tbaa.struct !9", "opcode": "call"}, "159": {"instruction": "call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7)", "opcode": "call"}, "160": {"instruction": "br label %30", "opcode": "br"}, "161": {"instruction": "%31 = icmp eq i64 %23, %13", "opcode": "icmp"}, "162": {"instruction": "br i1 %31, label %15, label %19", "opcode": "br"}}}, "displayPerson": {"nodes": ["displayPerson", "block-0", "163", "164", "165", "166", "block-5", "block-9", "167", "168", "@.str.6", "@.str.7", "@.str.8", "169", "170", "171", "@.str.9", "172", "173", "174", "175", "176", "177", "178", "179", "180", "@.str.10", "181"], "links": [["displayPerson", "block-0", "Function_Entry"], ["block-0", "163", "Sequential"], ["163", "164", "Data"], ["164", "165", "Data"], ["164", "167", "Data"], ["165", "166", "Data"], ["166", "block-5", "Control"], ["166", "block-9", "Control"], ["block-5", "167", "Sequential"], ["block-9", "171", "Sequential"], ["block-9", "172", "Sequential"], ["block-9", "173", "Sequential"], ["block-9", "175", "Sequential"], ["block-9", "178", "Sequential"], ["167", "168", "Data"], ["168", "169", "Data"], ["@.str.6", "168", "Global"], ["@.str.7", "168", "Global"], ["@.str.8", "168", "Global"], ["169", "170", "Sequential"], ["169", "171", "Data"], ["170", "block-9", "Control"], ["171", "180", "Data"], ["@.str.9", "171", "Global"], ["172", "180", "Data"], ["172", "181", "Sequential"], ["173", "174", "Data"], ["174", "180", "Data"], ["174", "181", "Sequential"], ["175", "176", "Data"], ["176", "177", "Data"], ["177", "180", "Data"], ["177", "181", "Sequential"], ["178", "179", "Data"], ["179", "180", "Data"], ["179", "181", "Sequential"], ["180", "181", "Sequential"], ["@.str.10", "180", "Global"]], "nodes_info": {"displayPerson": {"function_params": ["%struct.Person.3* %0"], "bb_num": 3}, "block-0": {"block_var_list": ["%2", "%3", "%4"], "block_inst_count": 4}, "163": {"instruction": "%2 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 0, i32 4", "opcode": "getelementptr", "call_fun_param": "True"}, "164": {"instruction": "%3 = load i32, i32* %2, align 8, !tbaa !2", "opcode": "load"}, "165": {"instruction": "%4 = icmp ult i32 %3, 3", "opcode": "icmp"}, "166": {"instruction": "br i1 %4, label %5, label %9", "opcode": "br"}, "block-5": {"block_var_list": ["%6", "%7", "%8"], "block_inst_count": 4}, "block-9": {"block_var_list": ["%10", "%11", "%12", "%13", "%14", "%15", "%16", "%17", "%18", "%19"], "block_inst_count": 11}, "167": {"instruction": "%6 = sext i32 %3 to i64", "opcode": "sext"}, "168": {"instruction": "%7 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.displayPerson, i64 0, i64 %6", "opcode": "getelementptr"}, "@.str.6": {"define": "@.str.6 = private unnamed_addr constant [5 x i8] c\"Male\\00\", align 1 ", "is_global": "true"}, "@.str.7": {"define": "@.str.7 = private unnamed_addr constant [7 x i8] c\"Female\\00\", align 1 ", "is_global": "true"}, "@.str.8": {"define": "@.str.8 = private unnamed_addr constant [6 x i8] c\"Other\\00\", align 1 ", "is_global": "true"}, "169": {"instruction": "%8 = load i8*, i8** %7, align 8", "opcode": "load"}, "170": {"instruction": "br label %9", "opcode": "br"}, "171": {"instruction": "%10 = phi i8* [ %8, %5 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), %1 ]", "opcode": "phi"}, "@.str.9": {"define": "@.str.9 = private unnamed_addr constant [8 x i8] c\"Unknown\\00\", align 1 ", "is_global": "true"}, "172": {"instruction": "%11 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 0, i32 0, i64 0", "opcode": "getelementptr", "call_fun_param": "True"}, "173": {"instruction": "%12 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 0, i32 1", "opcode": "getelementptr", "call_fun_param": "True"}, "174": {"instruction": "%13 = load i32, i32* %12, align 4, !tbaa !9", "opcode": "load"}, "175": {"instruction": "%14 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 0, i32 2", "opcode": "getelementptr", "call_fun_param": "True"}, "176": {"instruction": "%15 = load float, float* %14, align 8, !tbaa !10", "opcode": "load"}, "177": {"instruction": "%16 = fpext float %15 to double", "opcode": "fpext"}, "178": {"instruction": "%17 = getelementptr inbounds %struct.Person.3, %struct.Person.3* %0, i64 0, i32 3", "opcode": "getelementptr", "call_fun_param": "True"}, "179": {"instruction": "%18 = load double, double* %17, align 8, !tbaa !11", "opcode": "load"}, "180": {"instruction": "%19 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i8* %11, i32 %13, double %16, double %18, i8* nonnull %10)", "opcode": "call"}, "@.str.10": {"define": "@.str.10 = private unnamed_addr constant [64 x i8] c\"Name: %s, Age: %d, Height: %.2f m, Weight: %.2f kg, Gender: %s\\0A\\00\", align 1 ", "is_global": "true"}, "181": {"instruction": "ret void", "opcode": "ret"}}}, "performArithmeticOperations": {"nodes": ["performArithmeticOperations", "block-0", "182", "@str.24", "183", "184", "@.str.12", "185", "186", "@.str.13", "187", "188", "@.str.14", "189", "190", "block-19", "block-11", "191", "192", "193", "194", "195", "@.str.15", "196", "197", "@.str.16", "198", "block-21", "199", "@str.26", "200", "201"], "links": [["performArithmeticOperations", "block-0", "Function_Entry"], ["block-0", "182", "Sequential"], ["block-0", "183", "Sequential"], ["block-0", "185", "Sequential"], ["block-0", "187", "Sequential"], ["block-0", "189", "Sequential"], ["@str.24", "182", "Global"], ["183", "184", "Data"], ["@.str.12", "184", "Global"], ["185", "186", "Data"], ["@.str.13", "186", "Global"], ["187", "188", "Data"], ["@.str.14", "188", "Global"], ["189", "190", "Data"], ["190", "block-19", "Control"], ["190", "block-11", "Control"], ["block-19", "199", "Sequential"], ["block-11", "191", "Sequential"], ["block-11", "192", "Sequential"], ["block-11", "196", "Sequential"], ["191", "193", "Data"], ["192", "193", "Data"], ["192", "198", "Sequential"], ["193", "194", "Data"], ["194", "195", "Data"], ["195", "198", "Sequential"], ["@.str.15", "195", "Global"], ["196", "197", "Data"], ["197", "198", "Sequential"], ["@.str.16", "197", "Global"], ["198", "block-21", "Control"], ["block-21", "201", "Sequential"], ["199", "200", "Sequential"], ["@str.26", "199", "Global"], ["200", "block-21", "Control"]], "nodes_info": {"performArithmeticOperations": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 4}, "block-0": {"block_var_list": ["%3", "%4", "%5", "%6", "%7", "%8", "%9", "%10"], "block_inst_count": 9}, "182": {"instruction": "%3 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @str.24, i64 0, i64 0))", "opcode": "call"}, "@str.24": {"define": "@str.24 = private unnamed_addr constant [24 x i8] c\"\\0AArithmetic Operations:\\00\", align 1 ", "is_global": "true"}, "183": {"instruction": "%4 = add nsw i32 %1, %0", "opcode": "add", "call_fun_param": "True"}, "184": {"instruction": "%5 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 %0, i32 %1, i32 %4)", "opcode": "call", "call_fun_param": "True"}, "@.str.12": {"define": "@.str.12 = private unnamed_addr constant [24 x i8] c\"Addition: %d + %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "185": {"instruction": "%6 = sub nsw i32 %0, %1", "opcode": "sub", "call_fun_param": "True"}, "186": {"instruction": "%7 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i32 %0, i32 %1, i32 %6)", "opcode": "call", "call_fun_param": "True"}, "@.str.13": {"define": "@.str.13 = private unnamed_addr constant [27 x i8] c\"Subtraction: %d - %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "187": {"instruction": "%8 = mul nsw i32 %1, %0", "opcode": "mul", "call_fun_param": "True"}, "188": {"instruction": "%9 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i32 %0, i32 %1, i32 %8)", "opcode": "call", "call_fun_param": "True"}, "@.str.14": {"define": "@.str.14 = private unnamed_addr constant [30 x i8] c\"Multiplication: %d * %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "189": {"instruction": "%10 = icmp eq i32 %1, 0", "opcode": "icmp", "call_fun_param": "True"}, "190": {"instruction": "br i1 %10, label %19, label %11", "opcode": "br"}, "block-19": {"block_var_list": ["%20"], "block_inst_count": 2}, "block-11": {"block_var_list": ["%12", "%13", "%14", "%15", "%16", "%17", "%18"], "block_inst_count": 8}, "191": {"instruction": "%12 = sitofp i32 %0 to float", "opcode": "sitofp", "call_fun_param": "True"}, "192": {"instruction": "%13 = sitofp i32 %1 to float", "opcode": "sitofp", "call_fun_param": "True"}, "193": {"instruction": "%14 = fdiv float %12, %13", "opcode": "fdiv"}, "194": {"instruction": "%15 = fpext float %14 to double", "opcode": "fpext"}, "195": {"instruction": "%16 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i32 %0, i32 %1, double %15)", "opcode": "call", "call_fun_param": "True"}, "@.str.15": {"define": "@.str.15 = private unnamed_addr constant [26 x i8] c\"Division: %d / %d = %.2f\\0A\\00\", align 1 ", "is_global": "true"}, "196": {"instruction": "%17 = srem i32 %0, %1", "opcode": "srem", "call_fun_param": "True"}, "197": {"instruction": "%18 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i32 %0, i32 %1, i32 %17)", "opcode": "call", "call_fun_param": "True"}, "@.str.16": {"define": "@.str.16 = private unnamed_addr constant [23 x i8] c\"Modulo: %d %% %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "198": {"instruction": "br label %21", "opcode": "br"}, "block-21": {"block_var_list": [], "block_inst_count": 1}, "199": {"instruction": "%20 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @str.26, i64 0, i64 0))", "opcode": "call"}, "@str.26": {"define": "@str.26 = private unnamed_addr constant [31 x i8] c\"Division by zero is undefined.\\00\", align 1 ", "is_global": "true"}, "200": {"instruction": "br label %21", "opcode": "br"}, "201": {"instruction": "ret void", "opcode": "ret"}}}, "callbackFunction": {"nodes": ["callbackFunction", "block-0", "202", "203", "@.str.20", "204"], "links": [["callbackFunction", "block-0", "Function_Entry"], ["block-0", "202", "Sequential"], ["202", "203", "Data"], ["203", "204", "Sequential"], ["@.str.20", "203", "Global"]], "nodes_info": {"callbackFunction": {"function_params": ["i32 %0", "i32 %1", "i32 (i32, i32)* %2"], "bb_num": 1}, "block-0": {"block_var_list": ["%4", "%5"], "block_inst_count": 3}, "202": {"instruction": "%4 = tail call i32 %2(i32 %0, i32 %1) #8", "opcode": "call", "call_fun_param": "True"}, "203": {"instruction": "%5 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 %4)", "opcode": "call"}, "@.str.20": {"define": "@.str.20 = private unnamed_addr constant [25 x i8] c\"Result of operation: %d\\0A\\00\", align 1 ", "is_global": "true"}, "204": {"instruction": "ret void", "opcode": "ret"}}}, "add": {"nodes": ["add", "block-0", "205", "206"], "links": [["add", "block-0", "Function_Entry"], ["block-0", "205", "Sequential"], ["205", "206", "Data"]], "nodes_info": {"add": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 1}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "205": {"instruction": "%3 = add nsw i32 %1, %0", "opcode": "add", "call_fun_param": "True"}, "206": {"instruction": "ret i32 %3", "opcode": "ret"}}}, "subtract": {"nodes": ["subtract", "block-0", "207", "208"], "links": [["subtract", "block-0", "Function_Entry"], ["block-0", "207", "Sequential"], ["207", "208", "Data"]], "nodes_info": {"subtract": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 1}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "207": {"instruction": "%3 = sub nsw i32 %0, %1", "opcode": "sub", "call_fun_param": "True"}, "208": {"instruction": "ret i32 %3", "opcode": "ret"}}}, "multiply": {"nodes": ["multiply", "block-0", "209", "210"], "links": [["multiply", "block-0", "Function_Entry"], ["block-0", "209", "Sequential"], ["209", "210", "Data"]], "nodes_info": {"multiply": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 1}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "209": {"instruction": "%3 = mul nsw i32 %1, %0", "opcode": "mul", "call_fun_param": "True"}, "210": {"instruction": "ret i32 %3", "opcode": "ret"}}}, "divide": {"nodes": ["divide", "block-0", "211", "212", "block-6", "block-4", "213", "214", "block-8", "215", "@str.26", "216", "217", "218"], "links": [["divide", "block-0", "Function_Entry"], ["block-0", "211", "Sequential"], ["211", "212", "Data"], ["212", "block-6", "Control"], ["212", "block-4", "Control"], ["block-6", "215", "Sequential"], ["block-4", "213", "Sequential"], ["213", "214", "Sequential"], ["213", "217", "Data"], ["214", "block-8", "Control"], ["block-8", "217", "Sequential"], ["215", "216", "Sequential"], ["@str.26", "215", "Global"], ["216", "block-8", "Control"], ["217", "218", "Data"]], "nodes_info": {"divide": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 4}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "211": {"instruction": "%3 = icmp eq i32 %1, 0", "opcode": "icmp", "call_fun_param": "True"}, "212": {"instruction": "br i1 %3, label %6, label %4", "opcode": "br"}, "block-6": {"block_var_list": ["%7"], "block_inst_count": 2}, "block-4": {"block_var_list": ["%5"], "block_inst_count": 2}, "213": {"instruction": "%5 = sdiv i32 %0, %1", "opcode": "sdiv", "call_fun_param": "True"}, "214": {"instruction": "br label %8", "opcode": "br"}, "block-8": {"block_var_list": ["%9"], "block_inst_count": 2}, "215": {"instruction": "%7 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @str.26, i64 0, i64 0))", "opcode": "call"}, "@str.26": {"define": "@str.26 = private unnamed_addr constant [31 x i8] c\"Division by zero is undefined.\\00\", align 1 ", "is_global": "true"}, "216": {"instruction": "br label %8", "opcode": "br"}, "217": {"instruction": "%9 = phi i32 [ %5, %4 ], [ 0, %6 ]", "opcode": "phi"}, "218": {"instruction": "ret i32 %9", "opcode": "ret"}}}}