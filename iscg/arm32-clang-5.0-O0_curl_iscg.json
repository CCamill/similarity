{"slist_wc_append": {"nodes": ["slist_wc_append", "block-dec_label_pc_4c0f0", "0", "1", "2", "3", "4", "block-dec_label_pc_4c1c4", "block-dec_label_pc_4c134", "5", "6", "block-dec_label_pc_4c144", "block-dec_label_pc_4c198", "7", "8", "9", "block-dec_label_pc_4c160", "block-dec_label_pc_4c174", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34"], "links": [["slist_wc_append", "block-dec_label_pc_4c0f0", "Function_Entry"], ["block-dec_label_pc_4c0f0", "0", "Sequential"], ["block-dec_label_pc_4c0f0", "1", "Sequential"], ["0", "3", "Data"], ["0", "11", "Data"], ["0", "18", "Data"], ["0", "31", "Data"], ["0", "33", "Data"], ["1", "2", "Data"], ["1", "10", "Data"], ["1", "14", "Data"], ["1", "17", "Data"], ["1", "25", "Data"], ["2", "4", "Data"], ["4", "block-dec_label_pc_4c1c4", "Control"], ["4", "block-dec_label_pc_4c134", "Control"], ["block-dec_label_pc_4c1c4", "33", "Sequential"], ["block-dec_label_pc_4c134", "5", "Sequential"], ["5", "6", "Data"], ["6", "block-dec_label_pc_4c144", "Control"], ["6", "block-dec_label_pc_4c198", "Control"], ["block-dec_label_pc_4c144", "7", "Sequential"], ["block-dec_label_pc_4c198", "20", "Sequential"], ["block-dec_label_pc_4c198", "31", "Sequential"], ["7", "8", "Data"], ["7", "13", "Data"], ["7", "14", "Data"], ["8", "9", "Data"], ["9", "block-dec_label_pc_4c160", "Control"], ["9", "block-dec_label_pc_4c174", "Control"], ["block-dec_label_pc_4c160", "10", "Sequential"], ["block-dec_label_pc_4c160", "11", "Sequential"], ["block-dec_label_pc_4c174", "13", "Sequential"], ["block-dec_label_pc_4c174", "14", "Sequential"], ["10", "12", "Sequential"], ["11", "12", "Sequential"], ["12", "block-dec_label_pc_4c1c4", "Control"], ["13", "15", "Data"], ["13", "18", "Data"], ["14", "19", "Sequential"], ["15", "16", "Data"], ["16", "17", "Data"], ["17", "19", "Sequential"], ["18", "19", "Sequential"], ["19", "block-dec_label_pc_4c1c4", "Control"], ["20", "21", "Data"], ["21", "22", "Data"], ["21", "26", "Data"], ["21", "30", "Data"], ["22", "23", "Data"], ["23", "24", "Data"], ["24", "25", "Data"], ["25", "32", "Sequential"], ["26", "27", "Data"], ["27", "28", "Data"], ["28", "29", "Data"], ["29", "30", "Data"], ["30", "32", "Sequential"], ["31", "32", "Sequential"], ["32", "block-dec_label_pc_4c1c4", "Control"], ["33", "34", "Data"]], "nodes_info": {"slist_wc_append": {"function_params": ["i32 %arg1", "i32 %arg2"], "bb_num": 7}, "block-dec_label_pc_4c0f0": {"block_var_list": ["%stack_var_-12.0.reg2mem", "%0", "%1"], "block_inst_count": 5}, "0": {"instruction": "%stack_var_-12.0.reg2mem = alloca i32, align 4, !insn.addr !0", "opcode": "alloca"}, "1": {"instruction": "%0 = call i32 @curl_slist_append(i32 0, i32 %arg2), !insn.addr !1", "opcode": "call", "call_fun_param": "True"}, "2": {"instruction": "%1 = icmp eq i32 %0, 0, !insn.addr !2", "opcode": "icmp"}, "3": {"instruction": "store i32 0, i32* %stack_var_-12.0.reg2mem, align 4, !insn.addr !3", "opcode": "store"}, "4": {"instruction": "br i1 %1, label %dec_label_pc_4c1c4, label %dec_label_pc_4c134, !insn.addr !3", "opcode": "br"}, "block-dec_label_pc_4c1c4": {"block_var_list": ["%stack_var_-12.0.reload"], "block_inst_count": 2}, "block-dec_label_pc_4c134": {"block_var_list": ["%2"], "block_inst_count": 2}, "5": {"instruction": "%2 = icmp eq i32 %arg1, 0, !insn.addr !4", "opcode": "icmp", "call_fun_param": "True"}, "6": {"instruction": "br i1 %2, label %dec_label_pc_4c144, label %dec_label_pc_4c198, !insn.addr !5", "opcode": "br"}, "block-dec_label_pc_4c144": {"block_var_list": ["%3", "%4"], "block_inst_count": 3}, "block-dec_label_pc_4c198": {"block_var_list": ["%9", "%10", "%11", "%12", "%13", "%14", "%15", "%16", "%17"], "block_inst_count": 13}, "7": {"instruction": "%3 = call i32* @malloc(i32 8), !insn.addr !6", "opcode": "call"}, "8": {"instruction": "%4 = icmp eq i32* %3, null, !insn.addr !7", "opcode": "icmp"}, "9": {"instruction": "br i1 %4, label %dec_label_pc_4c160, label %dec_label_pc_4c174, !insn.addr !8", "opcode": "br"}, "block-dec_label_pc_4c160": {"block_var_list": ["%5"], "block_inst_count": 3}, "block-dec_label_pc_4c174": {"block_var_list": ["%6", "%7", "%8"], "block_inst_count": 7}, "10": {"instruction": "%5 = call i32 @curl_slist_free_all(i32 %0), !insn.addr !9", "opcode": "call"}, "11": {"instruction": "store i32 0, i32* %stack_var_-12.0.reg2mem, align 4, !insn.addr !10", "opcode": "store"}, "12": {"instruction": "br label %dec_label_pc_4c1c4, !insn.addr !10", "opcode": "br"}, "13": {"instruction": "%6 = ptrtoint i32* %3 to i32, !insn.addr !6", "opcode": "ptrtoint"}, "14": {"instruction": "store i32 %0, i32* %3, align 4, !insn.addr !11", "opcode": "store"}, "15": {"instruction": "%7 = add i32 %6, 4, !insn.addr !12", "opcode": "add"}, "16": {"instruction": "%8 = inttoptr i32 %7 to i32*, !insn.addr !12", "opcode": "inttoptr"}, "17": {"instruction": "store i32 %0, i32* %8, align 4, !insn.addr !12", "opcode": "store"}, "18": {"instruction": "store i32 %6, i32* %stack_var_-12.0.reg2mem, align 4, !insn.addr !13", "opcode": "store"}, "19": {"instruction": "br label %dec_label_pc_4c1c4, !insn.addr !13", "opcode": "br"}, "20": {"instruction": "%9 = add i32 %arg1, 4, !insn.addr !14", "opcode": "add", "call_fun_param": "True"}, "21": {"instruction": "%10 = inttoptr i32 %9 to i32*, !insn.addr !14", "opcode": "inttoptr"}, "22": {"instruction": "%11 = load i32, i32* %10, align 4, !insn.addr !14", "opcode": "load"}, "23": {"instruction": "%12 = add i32 %11, 4, !insn.addr !15", "opcode": "add"}, "24": {"instruction": "%13 = inttoptr i32 %12 to i32*, !insn.addr !15", "opcode": "inttoptr"}, "25": {"instruction": "store i32 %0, i32* %13, align 4, !insn.addr !15", "opcode": "store"}, "26": {"instruction": "%14 = load i32, i32* %10, align 4, !insn.addr !16", "opcode": "load"}, "27": {"instruction": "%15 = add i32 %14, 4, !insn.addr !17", "opcode": "add"}, "28": {"instruction": "%16 = inttoptr i32 %15 to i32*, !insn.addr !17", "opcode": "inttoptr"}, "29": {"instruction": "%17 = load i32, i32* %16, align 4, !insn.addr !17", "opcode": "load"}, "30": {"instruction": "store i32 %17, i32* %10, align 4, !insn.addr !18", "opcode": "store"}, "31": {"instruction": "store i32 %arg1, i32* %stack_var_-12.0.reg2mem, align 4, !insn.addr !19", "opcode": "store", "call_fun_param": "True"}, "32": {"instruction": "br label %dec_label_pc_4c1c4, !insn.addr !19", "opcode": "br"}, "33": {"instruction": "%stack_var_-12.0.reload = load i32, i32* %stack_var_-12.0.reg2mem, align 4", "opcode": "load"}, "34": {"instruction": "ret i32 %stack_var_-12.0.reload, !insn.addr !20", "opcode": "ret"}}}, "slist_wc_free_all": {"nodes": ["slist_wc_free_all", "block-dec_label_pc_4c1d0", "35", "36", "37", "38", "block-dec_label_pc_4c208", "block-dec_label_pc_4c1f4", "39", "40", "41", "42", "@45", "43", "44", "45"], "links": [["slist_wc_free_all", "block-dec_label_pc_4c1d0", "Function_Entry"], ["block-dec_label_pc_4c1d0", "35", "Sequential"], ["block-dec_label_pc_4c1d0", "36", "Sequential"], ["35", "37", "Data"], ["35", "42", "Data"], ["35", "44", "Data"], ["36", "38", "Data"], ["38", "block-dec_label_pc_4c208", "Control"], ["38", "block-dec_label_pc_4c1f4", "Control"], ["block-dec_label_pc_4c208", "44", "Sequential"], ["block-dec_label_pc_4c1f4", "39", "Sequential"], ["block-dec_label_pc_4c1f4", "40", "Sequential"], ["block-dec_label_pc_4c1f4", "42", "Sequential"], ["39", "43", "Sequential"], ["40", "41", "Data"], ["41", "43", "Sequential"], ["42", "43", "Sequential"], ["@45", "42", "Global"], ["43", "block-dec_label_pc_4c208", "Control"], ["44", "45", "Data"]], "nodes_info": {"slist_wc_free_all": {"function_params": ["i32 %arg1"], "bb_num": 3}, "block-dec_label_pc_4c1d0": {"block_var_list": ["%r0.0.reg2mem", "%0"], "block_inst_count": 4}, "35": {"instruction": "%r0.0.reg2mem = alloca i32, align 4, !insn.addr !0", "opcode": "alloca"}, "36": {"instruction": "%0 = icmp eq i32 %arg1, 0, !insn.addr !1", "opcode": "icmp", "call_fun_param": "True"}, "37": {"instruction": "store i32 0, i32* %r0.0.reg2mem, align 4, !insn.addr !2", "opcode": "store"}, "38": {"instruction": "br i1 %0, label %dec_label_pc_4c208, label %dec_label_pc_4c1f4, !insn.addr !2", "opcode": "br"}, "block-dec_label_pc_4c208": {"block_var_list": ["%r0.0.reload"], "block_inst_count": 2}, "block-dec_label_pc_4c1f4": {"block_var_list": ["%1", "%2"], "block_inst_count": 5}, "39": {"instruction": "%1 = call i32 @curl_slist_free_all(i32 %arg1), !insn.addr !3", "opcode": "call", "call_fun_param": "True"}, "40": {"instruction": "%2 = inttoptr i32 %arg1 to i32*, !insn.addr !4", "opcode": "inttoptr", "call_fun_param": "True"}, "41": {"instruction": "call void @free(i32* %2), !insn.addr !4", "opcode": "call"}, "42": {"instruction": "store i32 ptrtoint (i32* @45 to i32), i32* %r0.0.reg2mem, align 4, !insn.addr !4", "opcode": "store"}, "@45": {"define": "@45 = external global i32 ", "is_global": "true"}, "43": {"instruction": "br label %dec_label_pc_4c208, !insn.addr !4", "opcode": "br"}, "44": {"instruction": "%r0.0.reload = load i32, i32* %r0.0.reg2mem, align 4", "opcode": "load"}, "45": {"instruction": "ret i32 %r0.0.reload, !insn.addr !5", "opcode": "ret"}}}, "progressbarinit": {"nodes": ["progressbarinit", "block-dec_label_pc_4dd2c", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "block-dec_label_pc_4dd80", "block-dec_label_pc_4dd68", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "@global_var_44f4e", "72", "73", "block-dec_label_pc_4de24", "block-dec_label_pc_4dda0", "74", "75", "76", "77", "78", "79", "block-dec_label_pc_4de1c", "block-dec_label_pc_4ddc4", "80", "81", "82", "83", "84", "85", "86", "block-dec_label_pc_4de10", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "block-dec_label_pc_4de64", "block-dec_label_pc_4de84", "99", "100", "101", "102", "103", "104", "105", "106", "block-dec_label_pc_4de74", "107", "108", "block-dec_label_pc_4dea4", "109", "110", "111", "block-dec_label_pc_4de94", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129"], "links": [["progressbarinit", "block-dec_label_pc_4dd2c", "Function_Entry"], ["block-dec_label_pc_4dd2c", "46", "Sequential"], ["block-dec_label_pc_4dd2c", "47", "Sequential"], ["block-dec_label_pc_4dd2c", "49", "Sequential"], ["block-dec_label_pc_4dd2c", "50", "Sequential"], ["block-dec_label_pc_4dd2c", "52", "Sequential"], ["46", "48", "Data"], ["47", "97", "Data"], ["47", "105", "Data"], ["47", "109", "Data"], ["48", "101", "Data"], ["49", "75", "Data"], ["49", "77", "Data"], ["50", "51", "Data"], ["52", "53", "Data"], ["53", "54", "Data"], ["54", "55", "Data"], ["55", "56", "Data"], ["56", "57", "Data"], ["57", "block-dec_label_pc_4dd80", "Control"], ["57", "block-dec_label_pc_4dd68", "Control"], ["block-dec_label_pc_4dd80", "71", "Sequential"], ["block-dec_label_pc_4dd68", "58", "Sequential"], ["block-dec_label_pc_4dd68", "61", "Sequential"], ["block-dec_label_pc_4dd68", "64", "Sequential"], ["block-dec_label_pc_4dd68", "67", "Sequential"], ["58", "59", "Data"], ["59", "60", "Data"], ["60", "69", "Data"], ["61", "62", "Data"], ["62", "63", "Data"], ["63", "66", "Data"], ["64", "65", "Data"], ["65", "66", "Data"], ["65", "70", "Sequential"], ["66", "70", "Sequential"], ["67", "68", "Data"], ["68", "69", "Data"], ["68", "70", "Sequential"], ["69", "70", "Sequential"], ["70", "block-dec_label_pc_4dd80", "Control"], ["71", "72", "Data"], ["71", "74", "Data"], ["71", "78", "Data"], ["71", "81", "Data"], ["71", "91", "Data"], ["@global_var_44f4e", "71", "Global"], ["72", "73", "Data"], ["73", "block-dec_label_pc_4de24", "Control"], ["73", "block-dec_label_pc_4dda0", "Control"], ["block-dec_label_pc_4de24", "93", "Sequential"], ["block-dec_label_pc_4dda0", "74", "Sequential"], ["block-dec_label_pc_4dda0", "75", "Sequential"], ["block-dec_label_pc_4dda0", "77", "Sequential"], ["74", "76", "Data"], ["74", "80", "Data"], ["75", "76", "Data"], ["76", "83", "Data"], ["76", "89", "Data"], ["77", "78", "Data"], ["77", "82", "Data"], ["78", "79", "Data"], ["79", "block-dec_label_pc_4de1c", "Control"], ["79", "block-dec_label_pc_4ddc4", "Control"], ["block-dec_label_pc_4de1c", "91", "Sequential"], ["block-dec_label_pc_4ddc4", "80", "Sequential"], ["block-dec_label_pc_4ddc4", "83", "Sequential"], ["80", "81", "Data"], ["81", "82", "Data"], ["82", "85", "Data"], ["83", "84", "Data"], ["84", "85", "Data"], ["84", "86", "Sequential"], ["85", "86", "Sequential"], ["86", "block-dec_label_pc_4de1c", "Control"], ["block-dec_label_pc_4de10", "87", "Sequential"], ["87", "88", "Data"], ["88", "89", "Data"], ["89", "90", "Sequential"], ["90", "block-dec_label_pc_4de1c", "Control"], ["91", "92", "Sequential"], ["92", "block-dec_label_pc_4de24", "Control"], ["93", "94", "Data"], ["94", "95", "Data"], ["94", "103", "Data"], ["94", "107", "Data"], ["94", "112", "Data"], ["95", "96", "Data"], ["95", "97", "Data"], ["96", "98", "Data"], ["98", "block-dec_label_pc_4de64", "Control"], ["98", "block-dec_label_pc_4de84", "Control"], ["block-dec_label_pc_4de64", "99", "Sequential"], ["block-dec_label_pc_4de64", "101", "Sequential"], ["block-dec_label_pc_4de84", "109", "Sequential"], ["99", "100", "Data"], ["100", "102", "Data"], ["101", "102", "Data"], ["102", "103", "Data"], ["102", "104", "Data"], ["102", "105", "Data"], ["104", "106", "Data"], ["106", "block-dec_label_pc_4de74", "Control"], ["106", "block-dec_label_pc_4de84", "Control"], ["block-dec_label_pc_4de74", "107", "Sequential"], ["107", "108", "Sequential"], ["108", "block-dec_label_pc_4dea4", "Control"], ["block-dec_label_pc_4dea4", "114", "Sequential"], ["block-dec_label_pc_4dea4", "120", "Sequential"], ["block-dec_label_pc_4dea4", "123", "Sequential"], ["block-dec_label_pc_4dea4", "126", "Sequential"], ["109", "110", "Data"], ["110", "111", "Data"], ["111", "block-dec_label_pc_4dea4", "Control"], ["111", "block-dec_label_pc_4de94", "Control"], ["block-dec_label_pc_4de94", "112", "Sequential"], ["112", "113", "Sequential"], ["113", "block-dec_label_pc_4dea4", "Control"], ["114", "115", "Data"], ["115", "116", "Data"], ["116", "117", "Data"], ["117", "118", "Data"], ["118", "119", "Data"], ["119", "122", "Data"], ["120", "121", "Data"], ["121", "122", "Data"], ["121", "129", "Sequential"], ["122", "129", "Sequential"], ["123", "124", "Data"], ["124", "125", "Data"], ["125", "129", "Sequential"], ["126", "127", "Data"], ["127", "128", "Data"], ["128", "129", "Sequential"]], "nodes_info": {"progressbarinit": {"function_params": ["i32 %arg1", "i32 %arg2"], "bb_num": 13}, "block-dec_label_pc_4dd2c": {"block_var_list": ["%0", "%.reg2mem", "%1", "%stack_var_-24", "%2", "%3", "%4", "%5", "%6", "%7", "%8"], "block_inst_count": 12}, "46": {"instruction": "%0 = alloca i16, align 2", "opcode": "alloca"}, "47": {"instruction": "%.reg2mem = alloca i32, align 4, !insn.addr !0", "opcode": "alloca"}, "48": {"instruction": "%1 = load i16, i16* %0, align 2", "opcode": "load"}, "49": {"instruction": "%stack_var_-24 = alloca i32, align 4", "opcode": "alloca"}, "50": {"instruction": "%2 = inttoptr i32 %arg1 to i32*, !insn.addr !1", "opcode": "inttoptr", "call_fun_param": "True"}, "51": {"instruction": "%3 = call i32* @memset(i32* %2, i32 0, i32 56), !insn.addr !1", "opcode": "call"}, "52": {"instruction": "%4 = add i32 %arg2, 40, !insn.addr !2", "opcode": "add", "call_fun_param": "True"}, "53": {"instruction": "%5 = inttoptr i32 %4 to i8*, !insn.addr !2", "opcode": "inttoptr"}, "54": {"instruction": "%6 = load i8, i8* %5, align 1, !insn.addr !2", "opcode": "load"}, "55": {"instruction": "%7 = urem i8 %6, 2", "opcode": "urem"}, "56": {"instruction": "%8 = icmp eq i8 %7, 0, !insn.addr !3", "opcode": "icmp"}, "57": {"instruction": "br i1 %8, label %dec_label_pc_4dd80, label %dec_label_pc_4dd68, !insn.addr !4", "opcode": "br"}, "block-dec_label_pc_4dd80": {"block_var_list": ["%19", "%20"], "block_inst_count": 3}, "block-dec_label_pc_4dd68": {"block_var_list": ["%9", "%10", "%11", "%12", "%13", "%14", "%15", "%16", "%17", "%18"], "block_inst_count": 13}, "58": {"instruction": "%9 = add i32 %arg2, 72, !insn.addr !5", "opcode": "add", "call_fun_param": "True"}, "59": {"instruction": "%10 = inttoptr i32 %9 to i32*, !insn.addr !5", "opcode": "inttoptr"}, "60": {"instruction": "%11 = load i32, i32* %10, align 4, !insn.addr !5", "opcode": "load"}, "61": {"instruction": "%12 = add i32 %arg2, 76, !insn.addr !6", "opcode": "add", "call_fun_param": "True"}, "62": {"instruction": "%13 = inttoptr i32 %12 to i32*, !insn.addr !6", "opcode": "inttoptr"}, "63": {"instruction": "%14 = load i32, i32* %13, align 4, !insn.addr !6", "opcode": "load"}, "64": {"instruction": "%15 = add i32 %arg1, 36, !insn.addr !7", "opcode": "add", "call_fun_param": "True"}, "65": {"instruction": "%16 = inttoptr i32 %15 to i32*, !insn.addr !7", "opcode": "inttoptr"}, "66": {"instruction": "store i32 %14, i32* %16, align 4, !insn.addr !7", "opcode": "store"}, "67": {"instruction": "%17 = add i32 %arg1, 32, !insn.addr !8", "opcode": "add", "call_fun_param": "True"}, "68": {"instruction": "%18 = inttoptr i32 %17 to i32*, !insn.addr !8", "opcode": "inttoptr"}, "69": {"instruction": "store i32 %11, i32* %18, align 4, !insn.addr !8", "opcode": "store"}, "70": {"instruction": "br label %dec_label_pc_4dd80, !insn.addr !8", "opcode": "br"}, "71": {"instruction": "%19 = call i32 @curl_getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_44f4e, i32 0, i32 0)), !insn.addr !9", "opcode": "call"}, "@global_var_44f4e": {"define": "@global_var_44f4e = constant [8 x i8] c\"COLUMNS\\00\" ", "is_global": "true"}, "72": {"instruction": "%20 = icmp eq i32 %19, 0, !insn.addr !10", "opcode": "icmp"}, "73": {"instruction": "br i1 %20, label %dec_label_pc_4de24, label %dec_label_pc_4dda0, !insn.addr !11", "opcode": "br"}, "block-dec_label_pc_4de24": {"block_var_list": ["%34", "%35", "%36", "%37"], "block_inst_count": 6}, "block-dec_label_pc_4dda0": {"block_var_list": ["%21", "%22", "%23", "%24", "%25"], "block_inst_count": 6}, "74": {"instruction": "%21 = inttoptr i32 %19 to i8*, !insn.addr !12", "opcode": "inttoptr"}, "75": {"instruction": "%22 = bitcast i32* %stack_var_-24 to i8**, !insn.addr !13", "opcode": "bitcast"}, "76": {"instruction": "%23 = call i32 @strtol(i8* %21, i8** nonnull %22, i32 10), !insn.addr !13", "opcode": "call"}, "77": {"instruction": "%24 = load i32, i32* %stack_var_-24, align 4, !insn.addr !14", "opcode": "load"}, "78": {"instruction": "%25 = icmp eq i32 %24, %19, !insn.addr !15", "opcode": "icmp"}, "79": {"instruction": "br i1 %25, label %dec_label_pc_4de1c, label %dec_label_pc_4ddc4, !insn.addr !16", "opcode": "br"}, "block-dec_label_pc_4de1c": {"block_var_list": ["%33"], "block_inst_count": 2}, "block-dec_label_pc_4ddc4": {"block_var_list": ["%26", "%27", "%28", "%.off", "%29", "%30"], "block_inst_count": 7}, "80": {"instruction": "%26 = call i32 @strlen(i8* %21), !insn.addr !17", "opcode": "call"}, "81": {"instruction": "%27 = add i32 %26, %19, !insn.addr !18", "opcode": "add"}, "82": {"instruction": "%28 = icmp ne i32 %24, %27, !insn.addr !19", "opcode": "icmp"}, "83": {"instruction": "%.off = add i32 %23, -21", "opcode": "add"}, "84": {"instruction": "%29 = icmp ugt i32 %.off, 9978", "opcode": "icmp"}, "85": {"instruction": "%30 = or i1 %29, %28", "opcode": "or"}, "86": {"instruction": "br i1 %30, label %dec_label_pc_4de1c, label %dec_label_pc_4de10, !insn.addr !20", "opcode": "br"}, "block-dec_label_pc_4de10": {"block_var_list": ["%31", "%32"], "block_inst_count": 4}, "87": {"instruction": "%31 = add i32 %arg1, 24, !insn.addr !21", "opcode": "add", "call_fun_param": "True"}, "88": {"instruction": "%32 = inttoptr i32 %31 to i32*, !insn.addr !21", "opcode": "inttoptr"}, "89": {"instruction": "store i32 %23, i32* %32, align 4, !insn.addr !21", "opcode": "store"}, "90": {"instruction": "br label %dec_label_pc_4de1c, !insn.addr !21", "opcode": "br"}, "91": {"instruction": "%33 = call i32 @curl_free(i32 %19), !insn.addr !22", "opcode": "call"}, "92": {"instruction": "br label %dec_label_pc_4de24, !insn.addr !22", "opcode": "br"}, "93": {"instruction": "%34 = add i32 %arg1, 24, !insn.addr !23", "opcode": "add", "call_fun_param": "True"}, "94": {"instruction": "%35 = inttoptr i32 %34 to i32*, !insn.addr !23", "opcode": "inttoptr"}, "95": {"instruction": "%36 = load i32, i32* %35, align 4", "opcode": "load"}, "96": {"instruction": "%37 = icmp eq i32 %36, 0, !insn.addr !24", "opcode": "icmp"}, "97": {"instruction": "store i32 %36, i32* %.reg2mem, align 4, !insn.addr !25", "opcode": "store"}, "98": {"instruction": "br i1 %37, label %dec_label_pc_4de64, label %dec_label_pc_4de84, !insn.addr !25", "opcode": "br"}, "block-dec_label_pc_4de64": {"block_var_list": ["%38", "%39", "%phitmp", "%spec.select", "%40"], "block_inst_count": 8}, "block-dec_label_pc_4de84": {"block_var_list": ["%.reload", "%41"], "block_inst_count": 3}, "99": {"instruction": "%38 = call i32 (i32, i32, ...) @ioctl(i32 0, i32 21523), !insn.addr !26", "opcode": "call"}, "100": {"instruction": "%39 = icmp eq i32 %38, 0, !insn.addr !27", "opcode": "icmp"}, "101": {"instruction": "%phitmp = sext i16 %1 to i32", "opcode": "sext"}, "102": {"instruction": "%spec.select = select i1 %39, i32 %phitmp, i32 0", "opcode": "select"}, "103": {"instruction": "store i32 %spec.select, i32* %35, align 4, !insn.addr !28", "opcode": "store"}, "104": {"instruction": "%40 = icmp eq i32 %spec.select, 0, !insn.addr !29", "opcode": "icmp"}, "105": {"instruction": "store i32 %spec.select, i32* %.reg2mem, align 4, !insn.addr !30", "opcode": "store"}, "106": {"instruction": "br i1 %40, label %dec_label_pc_4de74, label %dec_label_pc_4de84, !insn.addr !30", "opcode": "br"}, "block-dec_label_pc_4de74": {"block_var_list": [], "block_inst_count": 2}, "107": {"instruction": "store i32 79, i32* %35, align 4, !insn.addr !31", "opcode": "store"}, "108": {"instruction": "br label %dec_label_pc_4dea4, !insn.addr !32", "opcode": "br"}, "block-dec_label_pc_4dea4": {"block_var_list": ["%42", "%43", "%44", "%45", "%46", "%47", "%48", "%49", "%50", "%51", "%52", "%53"], "block_inst_count": 16}, "109": {"instruction": "%.reload = load i32, i32* %.reg2mem, align 4", "opcode": "load"}, "110": {"instruction": "%41 = icmp slt i32 %.reload, 257, !insn.addr !33", "opcode": "icmp"}, "111": {"instruction": "br i1 %41, label %dec_label_pc_4dea4, label %dec_label_pc_4de94, !insn.addr !33", "opcode": "br"}, "block-dec_label_pc_4de94": {"block_var_list": [], "block_inst_count": 2}, "112": {"instruction": "store i32 256, i32* %35, align 4, !insn.addr !34", "opcode": "store"}, "113": {"instruction": "br label %dec_label_pc_4dea4, !insn.addr !34", "opcode": "br"}, "114": {"instruction": "%42 = add i32 %arg2, 684, !insn.addr !35", "opcode": "add", "call_fun_param": "True"}, "115": {"instruction": "%43 = inttoptr i32 %42 to i32*, !insn.addr !35", "opcode": "inttoptr"}, "116": {"instruction": "%44 = load i32, i32* %43, align 4, !insn.addr !35", "opcode": "load"}, "117": {"instruction": "%45 = add i32 %44, 8, !insn.addr !36", "opcode": "add"}, "118": {"instruction": "%46 = inttoptr i32 %45 to i32*, !insn.addr !36", "opcode": "inttoptr"}, "119": {"instruction": "%47 = load i32, i32* %46, align 4, !insn.addr !36", "opcode": "load"}, "120": {"instruction": "%48 = add i32 %arg1, 28, !insn.addr !37", "opcode": "add", "call_fun_param": "True"}, "121": {"instruction": "%49 = inttoptr i32 %48 to i32*, !insn.addr !37", "opcode": "inttoptr"}, "122": {"instruction": "store i32 %47, i32* %49, align 4, !insn.addr !37", "opcode": "store"}, "123": {"instruction": "%50 = add i32 %arg1, 40, !insn.addr !38", "opcode": "add", "call_fun_param": "True"}, "124": {"instruction": "%51 = inttoptr i32 %50 to i32*, !insn.addr !38", "opcode": "inttoptr"}, "125": {"instruction": "store i32 150, i32* %51, align 4, !insn.addr !38", "opcode": "store"}, "126": {"instruction": "%52 = add i32 %arg1, 48, !insn.addr !39", "opcode": "add", "call_fun_param": "True"}, "127": {"instruction": "%53 = inttoptr i32 %52 to i32*, !insn.addr !39", "opcode": "inttoptr"}, "128": {"instruction": "store i32 1, i32* %53, align 4, !insn.addr !39", "opcode": "store"}, "129": {"instruction": "ret i32 1, !insn.addr !40", "opcode": "ret"}}}}