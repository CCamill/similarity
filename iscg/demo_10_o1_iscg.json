{"main": {"nodes": ["main", "block-0", "0", "1", "2", "3", "@.str", "4", "@.str.1", "5", "6", "7", "8", "block-8", "block-10", "9", "@str.23", "10", "block-32", "11", "12", "13", "14", "15", "16", "17", "block-16", "block-18", "18", "@str.22", "19", "20", "21", "22", "23", "@str", "24", "25", "26", "block-23", "block-30", "27", "30", "28", "29", "31", "32", "33", "34", "35", "36", "@str.21", "37", "38", "39", "40", "41", "42", "43", "44", "45"], "links": [["main", "block-0", "Function_Entry"], ["block-0", "0", "Sequential"], ["block-0", "3", "Sequential"], ["0", "1", "Data"], ["0", "4", "Data"], ["0", "5", "Data"], ["0", "21", "Data"], ["0", "24", "Data"], ["0", "31", "Data"], ["1", "2", "Data"], ["1", "44", "Data"], ["@.str", "3", "Global"], ["@.str.1", "4", "Global"], ["5", "6", "Data"], ["5", "11", "Data"], ["5", "12", "Data"], ["5", "20", "Data"], ["6", "7", "Data"], ["7", "8", "Data"], ["8", "block-8", "Control"], ["8", "block-10", "Control"], ["block-8", "9", "Sequential"], ["block-10", "11", "Sequential"], ["block-10", "12", "Sequential"], ["9", "10", "Sequential"], ["@str.23", "9", "Global"], ["10", "block-32", "Control"], ["block-32", "43", "Sequential"], ["block-32", "44", "Sequential"], ["12", "13", "Data"], ["13", "14", "Data"], ["14", "15", "Data"], ["14", "16", "Data"], ["14", "41", "Data"], ["15", "20", "Data"], ["15", "22", "Data"], ["15", "28", "Data"], ["16", "17", "Data"], ["17", "block-16", "Control"], ["17", "block-18", "Control"], ["block-16", "18", "Sequential"], ["block-18", "20", "Sequential"], ["block-18", "21", "Sequential"], ["block-18", "23", "Sequential"], ["block-18", "24", "Sequential"], ["18", "19", "Sequential"], ["@str.22", "18", "Global"], ["19", "block-32", "Control"], ["21", "22", "Data"], ["@str", "23", "Global"], ["24", "25", "Data"], ["25", "26", "Data"], ["26", "block-23", "Control"], ["26", "block-30", "Control"], ["block-23", "31", "Sequential"], ["block-30", "35", "Sequential"], ["block-30", "36", "Sequential"], ["block-30", "37", "Sequential"], ["block-30", "38", "Sequential"], ["block-30", "39", "Sequential"], ["block-30", "40", "Sequential"], ["block-30", "41", "Sequential"], ["27", "28", "Data"], ["27", "30", "Data"], ["30", "27", "Data"], ["30", "33", "Data"], ["28", "29", "Data"], ["31", "32", "Data"], ["32", "33", "Data"], ["33", "34", "Data"], ["34", "block-23", "Control"], ["34", "block-30", "Control"], ["35", "42", "Sequential"], ["36", "42", "Sequential"], ["@str.21", "36", "Global"], ["37", "42", "Sequential"], ["38", "42", "Sequential"], ["39", "42", "Sequential"], ["40", "42", "Sequential"], ["41", "42", "Sequential"], ["42", "block-32", "Control"], ["43", "45", "Data"]], "nodes_info": {"main": {"function_params": [], "bb_num": 8}, "block-0": {"block_var_list": ["%1", "%2", "%3", "%4", "%5", "%6", "%7"], "block_inst_count": 9}, "0": {"instruction": "%1 = alloca i32, align 4", "opcode": "alloca"}, "1": {"instruction": "%2 = bitcast i32* %1 to i8*", "opcode": "bitcast"}, "2": {"instruction": "call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8", "opcode": "call"}, "3": {"instruction": "%3 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 100)", "opcode": "call"}, "@.str": {"define": "@.str = private unnamed_addr constant [39 x i8] c\"Enter the number of persons (max %d): \\00\", align 1 ", "is_global": "true"}, "4": {"instruction": "%4 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %1)", "opcode": "call"}, "@.str.1": {"define": "@.str.1 = private unnamed_addr constant [3 x i8] c\"%d\\00\", align 1 ", "is_global": "true"}, "5": {"instruction": "%5 = load i32, i32* %1, align 4, !tbaa !2", "opcode": "load"}, "6": {"instruction": "%6 = add i32 %5, -1", "opcode": "add"}, "7": {"instruction": "%7 = icmp ugt i32 %6, 99", "opcode": "icmp"}, "8": {"instruction": "br i1 %7, label %8, label %10", "opcode": "br"}, "block-8": {"block_var_list": ["%9"], "block_inst_count": 2}, "block-10": {"block_var_list": ["%11", "%12", "%13", "%14", "%15"], "block_inst_count": 7}, "9": {"instruction": "%9 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([27 x i8], [27 x i8]* @str.23, i64 0, i64 0))", "opcode": "call"}, "@str.23": {"define": "@str.23 = private unnamed_addr constant [27 x i8] c\"Invalid number of persons.\\00\", align 1 ", "is_global": "true"}, "10": {"instruction": "br label %32", "opcode": "br"}, "block-32": {"block_var_list": ["%33"], "block_inst_count": 3}, "11": {"instruction": "store i32 %5, i32* @global_count, align 4, !tbaa !2", "opcode": "store"}, "12": {"instruction": "%11 = sext i32 %5 to i64", "opcode": "sext"}, "13": {"instruction": "%12 = mul nsw i64 %11, 80", "opcode": "mul"}, "14": {"instruction": "%13 = call noalias i8* @malloc(i64 %12) #8", "opcode": "call"}, "15": {"instruction": "%14 = bitcast i8* %13 to %struct.Person*", "opcode": "bitcast"}, "16": {"instruction": "%15 = icmp eq i8* %13, null", "opcode": "icmp"}, "17": {"instruction": "br i1 %15, label %16, label %18", "opcode": "br"}, "block-16": {"block_var_list": ["%17"], "block_inst_count": 2}, "block-18": {"block_var_list": ["%19", "%20", "%21", "%22"], "block_inst_count": 7}, "18": {"instruction": "%17 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @str.22, i64 0, i64 0))", "opcode": "call"}, "@str.22": {"define": "@str.22 = private unnamed_addr constant [25 x i8] c\"Memory allocation failed\\00\", align 1 ", "is_global": "true"}, "19": {"instruction": "br label %32", "opcode": "br"}, "20": {"instruction": "call void @initializePersons(%struct.Person* nonnull %14, i32 %5)", "opcode": "call"}, "21": {"instruction": "%19 = load i32, i32* %1, align 4, !tbaa !2", "opcode": "load"}, "22": {"instruction": "call void @sortPersons(%struct.Person* nonnull %14, i32 %19)", "opcode": "call"}, "23": {"instruction": "%20 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @str, i64 0, i64 0))", "opcode": "call"}, "@str": {"define": "@str = private unnamed_addr constant [17 x i8] c\"\\0ASorted Persons:\\00\", align 1 ", "is_global": "true"}, "24": {"instruction": "%21 = load i32, i32* %1, align 4, !tbaa !2", "opcode": "load"}, "25": {"instruction": "%22 = icmp sgt i32 %21, 0", "opcode": "icmp"}, "26": {"instruction": "br i1 %22, label %23, label %30", "opcode": "br"}, "block-23": {"block_var_list": ["%24", "%25", "%26", "%27", "%28", "%29"], "block_inst_count": 8}, "block-30": {"block_var_list": ["%31"], "block_inst_count": 8}, "27": {"instruction": "%24 = phi i64 [ %26, %23 ], [ 0, %18 ]", "opcode": "phi"}, "30": {"instruction": "%26 = add nuw nsw i64 %24, 1", "opcode": "add"}, "28": {"instruction": "%25 = getelementptr inbounds %struct.Person, %struct.Person* %14, i64 %24", "opcode": "getelementptr"}, "29": {"instruction": "call void @displayPerson(%struct.Person* nonnull %25)", "opcode": "call"}, "31": {"instruction": "%27 = load i32, i32* %1, align 4, !tbaa !2", "opcode": "load"}, "32": {"instruction": "%28 = sext i32 %27 to i64", "opcode": "sext"}, "33": {"instruction": "%29 = icmp slt i64 %26, %28", "opcode": "icmp"}, "34": {"instruction": "br i1 %29, label %23, label %30", "opcode": "br"}, "35": {"instruction": "call void @performArithmeticOperations(i32 10, i32 5)", "opcode": "call"}, "36": {"instruction": "%31 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @str.21, i64 0, i64 0))", "opcode": "call"}, "@str.21": {"define": "@str.21 = private unnamed_addr constant [53 x i8] c\"\\0AUsing callback functions for arithmetic operations:\\00\", align 1 ", "is_global": "true"}, "37": {"instruction": "call void @callbackFunction(i32 10, i32 5, i32 (i32, i32)* nonnull @add)", "opcode": "call"}, "38": {"instruction": "call void @callbackFunction(i32 10, i32 5, i32 (i32, i32)* nonnull @subtract)", "opcode": "call"}, "39": {"instruction": "call void @callbackFunction(i32 10, i32 5, i32 (i32, i32)* nonnull @multiply)", "opcode": "call"}, "40": {"instruction": "call void @callbackFunction(i32 10, i32 5, i32 (i32, i32)* nonnull @divide)", "opcode": "call"}, "41": {"instruction": "call void @free(i8* %13) #8", "opcode": "call"}, "42": {"instruction": "br label %32", "opcode": "br"}, "43": {"instruction": "%33 = phi i32 [ 1, %8 ], [ 1, %16 ], [ 0, %30 ]", "opcode": "phi"}, "44": {"instruction": "call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8", "opcode": "call"}, "45": {"instruction": "ret i32 %33", "opcode": "ret"}}}, "initializePersons": {"nodes": ["initializePersons", "block-0", "46", "47", "block-4", "block-6", "48", "49", "block-7", "50", "51", "52", "53", "54", "@.str.18", "55", "56", "57", "58", "59", "60", "@.str.19", "61", "62"], "links": [["initializePersons", "block-0", "Function_Entry"], ["block-0", "46", "Sequential"], ["46", "47", "Data"], ["47", "block-4", "Control"], ["47", "block-6", "Control"], ["block-4", "48", "Sequential"], ["block-6", "50", "Sequential"], ["48", "49", "Sequential"], ["48", "61", "Data"], ["49", "block-7", "Control"], ["51", "52", "Data"], ["51", "55", "Data"], ["51", "56", "Data"], ["51", "57", "Data"], ["51", "58", "Data"], ["51", "59", "Data"], ["52", "51", "Data"], ["52", "53", "Data"], ["52", "61", "Data"], ["53", "54", "Data"], ["@.str.18", "54", "Global"], ["55", "60", "Data"], ["56", "60", "Data"], ["57", "60", "Data"], ["58", "60", "Data"], ["59", "60", "Data"], ["@.str.19", "60", "Global"], ["61", "62", "Data"], ["62", "block-6", "Control"], ["62", "block-7", "Control"]], "nodes_info": {"initializePersons": {"function_params": ["%struct.Person* %0", "i32 %1"], "bb_num": 4}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "46": {"instruction": "%3 = icmp sgt i32 %1, 0", "opcode": "icmp", "call_fun_param": "True"}, "47": {"instruction": "br i1 %3, label %4, label %6", "opcode": "br"}, "block-4": {"block_var_list": ["%5"], "block_inst_count": 2}, "block-6": {"block_var_list": [], "block_inst_count": 1}, "48": {"instruction": "%5 = zext i32 %1 to i64", "opcode": "zext", "call_fun_param": "True"}, "49": {"instruction": "br label %7", "opcode": "br"}, "block-7": {"block_var_list": ["%8", "%9", "%10", "%11", "%12", "%13", "%14", "%15", "%16", "%17", "%18"], "block_inst_count": 12}, "50": {"instruction": "ret void", "opcode": "ret"}, "51": {"instruction": "%8 = phi i64 [ 0, %4 ], [ %9, %7 ]", "opcode": "phi"}, "52": {"instruction": "%9 = add nuw nsw i64 %8, 1", "opcode": "add"}, "53": {"instruction": "%10 = trunc i64 %9 to i32", "opcode": "trunc"}, "54": {"instruction": "%11 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([96 x i8], [96 x i8]* @.str.18, i64 0, i64 0), i32 %10)", "opcode": "call"}, "@.str.18": {"define": "@.str.18 = private unnamed_addr constant [96 x i8] c\"Enter name, age, height (m), weight (kg) and gender (0-Male, 1-Female, 2-Other) for person %d: \\00\", align 1 ", "is_global": "true"}, "55": {"instruction": "%12 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %8, i32 0, i64 0", "opcode": "getelementptr", "call_fun_param": "True"}, "56": {"instruction": "%13 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %8, i32 1", "opcode": "getelementptr", "call_fun_param": "True"}, "57": {"instruction": "%14 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %8, i32 2", "opcode": "getelementptr", "call_fun_param": "True"}, "58": {"instruction": "%15 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %8, i32 3", "opcode": "getelementptr", "call_fun_param": "True"}, "59": {"instruction": "%16 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %8, i32 4", "opcode": "getelementptr", "call_fun_param": "True"}, "60": {"instruction": "%17 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i8* %12, i32* nonnull %13, float* nonnull %14, double* nonnull %15, i32* nonnull %16)", "opcode": "call"}, "@.str.19": {"define": "@.str.19 = private unnamed_addr constant [16 x i8] c\"%s %d %f %lf %d\\00\", align 1 ", "is_global": "true"}, "61": {"instruction": "%18 = icmp eq i64 %9, %5", "opcode": "icmp"}, "62": {"instruction": "br i1 %18, label %6, label %7", "opcode": "br"}}}, "sortPersons": {"nodes": ["sortPersons", "block-0", "63", "64", "65", "block-5", "block-16", "66", "67", "68", "block-8", "69", "79", "70", "78", "71", "72", "73", "74", "block-14", "block-17", "75", "76", "block-21", "77", "80", "81", "82", "85", "83", "84", "86", "87", "88", "89", "block-29", "block-32", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99"], "links": [["sortPersons", "block-0", "Function_Entry"], ["block-0", "63", "Sequential"], ["block-0", "64", "Sequential"], ["63", "66", "Data"], ["64", "65", "Data"], ["65", "block-5", "Control"], ["65", "block-16", "Control"], ["block-5", "66", "Sequential"], ["block-5", "67", "Sequential"], ["block-16", "77", "Sequential"], ["66", "68", "Sequential"], ["66", "90", "Data"], ["66", "92", "Data"], ["66", "95", "Data"], ["66", "96", "Data"], ["67", "68", "Sequential"], ["67", "69", "Data"], ["67", "80", "Data"], ["68", "block-8", "Control"], ["block-8", "69", "Sequential"], ["block-8", "70", "Sequential"], ["69", "75", "Data"], ["69", "79", "Data"], ["79", "69", "Data"], ["70", "71", "Data"], ["70", "78", "Data"], ["78", "70", "Data"], ["78", "80", "Data"], ["71", "72", "Data"], ["72", "73", "Data"], ["73", "74", "Data"], ["74", "block-14", "Control"], ["74", "block-17", "Control"], ["block-14", "75", "Sequential"], ["block-17", "78", "Sequential"], ["block-17", "79", "Sequential"], ["75", "76", "Sequential"], ["75", "98", "Data"], ["76", "block-21", "Control"], ["80", "81", "Data"], ["81", "block-16", "Control"], ["81", "block-8", "Control"], ["82", "83", "Data"], ["82", "85", "Data"], ["82", "91", "Data"], ["85", "82", "Data"], ["85", "86", "Data"], ["85", "93", "Data"], ["85", "98", "Data"], ["83", "84", "Data"], ["84", "88", "Data"], ["86", "87", "Data"], ["87", "88", "Data"], ["88", "89", "Data"], ["89", "block-29", "Control"], ["89", "block-32", "Control"], ["block-29", "90", "Sequential"], ["block-29", "91", "Sequential"], ["block-29", "93", "Sequential"], ["block-29", "96", "Sequential"], ["block-32", "98", "Sequential"], ["90", "97", "Sequential"], ["91", "92", "Data"], ["91", "94", "Data"], ["92", "97", "Sequential"], ["93", "94", "Data"], ["93", "95", "Data"], ["94", "97", "Sequential"], ["95", "97", "Sequential"], ["96", "97", "Sequential"], ["97", "block-32", "Control"], ["98", "99", "Data"], ["99", "block-17", "Control"], ["99", "block-21", "Control"]], "nodes_info": {"sortPersons": {"function_params": ["%struct.Person* %0", "i32 %1"], "bb_num": 9}, "block-0": {"block_var_list": ["%3", "%4"], "block_inst_count": 3}, "63": {"instruction": "%3 = alloca %struct.Person, align 8", "opcode": "alloca"}, "64": {"instruction": "%4 = icmp sgt i32 %1, 1", "opcode": "icmp", "call_fun_param": "True"}, "65": {"instruction": "br i1 %4, label %5, label %16", "opcode": "br"}, "block-5": {"block_var_list": ["%6", "%7"], "block_inst_count": 3}, "block-16": {"block_var_list": [], "block_inst_count": 1}, "66": {"instruction": "%6 = getelementptr inbounds %struct.Person, %struct.Person* %3, i64 0, i32 0, i64 0", "opcode": "getelementptr"}, "67": {"instruction": "%7 = add i32 %1, -1", "opcode": "add", "call_fun_param": "True"}, "68": {"instruction": "br label %8", "opcode": "br"}, "block-8": {"block_var_list": ["%9", "%10", "%11", "%12", "%13"], "block_inst_count": 6}, "69": {"instruction": "%9 = phi i32 [ %7, %5 ], [ %19, %17 ]", "opcode": "phi"}, "79": {"instruction": "%19 = add i32 %9, -1", "opcode": "add"}, "70": {"instruction": "%10 = phi i32 [ 0, %5 ], [ %18, %17 ]", "opcode": "phi"}, "78": {"instruction": "%18 = add nuw nsw i32 %10, 1", "opcode": "add"}, "71": {"instruction": "%11 = xor i32 %10, -1", "opcode": "xor"}, "72": {"instruction": "%12 = add i32 %11, %1", "opcode": "add", "call_fun_param": "True"}, "73": {"instruction": "%13 = icmp sgt i32 %12, 0", "opcode": "icmp"}, "74": {"instruction": "br i1 %13, label %14, label %17", "opcode": "br"}, "block-14": {"block_var_list": ["%15"], "block_inst_count": 2}, "block-17": {"block_var_list": ["%18", "%19", "%20"], "block_inst_count": 4}, "75": {"instruction": "%15 = zext i32 %9 to i64", "opcode": "zext"}, "76": {"instruction": "br label %21", "opcode": "br"}, "block-21": {"block_var_list": ["%22", "%23", "%24", "%25", "%26", "%27", "%28"], "block_inst_count": 8}, "77": {"instruction": "ret void", "opcode": "ret"}, "80": {"instruction": "%20 = icmp eq i32 %18, %7", "opcode": "icmp"}, "81": {"instruction": "br i1 %20, label %16, label %8", "opcode": "br"}, "82": {"instruction": "%22 = phi i64 [ 0, %14 ], [ %25, %32 ]", "opcode": "phi"}, "85": {"instruction": "%25 = add nuw nsw i64 %22, 1", "opcode": "add"}, "83": {"instruction": "%23 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %22, i32 1", "opcode": "getelementptr", "call_fun_param": "True"}, "84": {"instruction": "%24 = load i32, i32* %23, align 4, !tbaa !2", "opcode": "load"}, "86": {"instruction": "%26 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %25, i32 1", "opcode": "getelementptr", "call_fun_param": "True"}, "87": {"instruction": "%27 = load i32, i32* %26, align 4, !tbaa !2", "opcode": "load"}, "88": {"instruction": "%28 = icmp sgt i32 %24, %27", "opcode": "icmp"}, "89": {"instruction": "br i1 %28, label %29, label %32", "opcode": "br"}, "block-29": {"block_var_list": ["%30", "%31"], "block_inst_count": 8}, "block-32": {"block_var_list": ["%33"], "block_inst_count": 2}, "90": {"instruction": "call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6)", "opcode": "call"}, "91": {"instruction": "%30 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %22, i32 0, i64 0", "opcode": "getelementptr", "call_fun_param": "True"}, "92": {"instruction": "call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %6, i8* nonnull align 8 dereferenceable(80) %30, i64 80, i1 false), !tbaa.struct !9", "opcode": "call"}, "93": {"instruction": "%31 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 %25, i32 0, i64 0", "opcode": "getelementptr", "call_fun_param": "True"}, "94": {"instruction": "call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %30, i8* nonnull align 8 dereferenceable(80) %31, i64 80, i1 false), !tbaa.struct !9", "opcode": "call"}, "95": {"instruction": "call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(80) %31, i8* nonnull align 8 dereferenceable(80) %6, i64 80, i1 false), !tbaa.struct !9", "opcode": "call"}, "96": {"instruction": "call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6)", "opcode": "call"}, "97": {"instruction": "br label %32", "opcode": "br"}, "98": {"instruction": "%33 = icmp eq i64 %25, %15", "opcode": "icmp"}, "99": {"instruction": "br i1 %33, label %17, label %21", "opcode": "br"}}}, "displayPerson": {"nodes": ["displayPerson", "block-0", "100", "101", "102", "103", "block-5", "block-9", "104", "105", "@.str.6", "@.str.7", "@.str.8", "106", "107", "108", "@.str.9", "109", "110", "111", "112", "113", "114", "115", "116", "117", "@.str.10", "118"], "links": [["displayPerson", "block-0", "Function_Entry"], ["block-0", "100", "Sequential"], ["100", "101", "Data"], ["101", "102", "Data"], ["101", "104", "Data"], ["102", "103", "Data"], ["103", "block-5", "Control"], ["103", "block-9", "Control"], ["block-5", "104", "Sequential"], ["block-9", "108", "Sequential"], ["block-9", "109", "Sequential"], ["block-9", "110", "Sequential"], ["block-9", "112", "Sequential"], ["block-9", "115", "Sequential"], ["104", "105", "Data"], ["105", "106", "Data"], ["@.str.6", "105", "Global"], ["@.str.7", "105", "Global"], ["@.str.8", "105", "Global"], ["106", "107", "Sequential"], ["106", "108", "Data"], ["107", "block-9", "Control"], ["108", "117", "Data"], ["@.str.9", "108", "Global"], ["109", "117", "Data"], ["109", "118", "Sequential"], ["110", "111", "Data"], ["111", "117", "Data"], ["111", "118", "Sequential"], ["112", "113", "Data"], ["113", "114", "Data"], ["114", "117", "Data"], ["114", "118", "Sequential"], ["115", "116", "Data"], ["116", "117", "Data"], ["116", "118", "Sequential"], ["117", "118", "Sequential"], ["@.str.10", "117", "Global"]], "nodes_info": {"displayPerson": {"function_params": ["%struct.Person* %0"], "bb_num": 3}, "block-0": {"block_var_list": ["%2", "%3", "%4"], "block_inst_count": 4}, "100": {"instruction": "%2 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 0, i32 4", "opcode": "getelementptr", "call_fun_param": "True"}, "101": {"instruction": "%3 = load i32, i32* %2, align 8, !tbaa !2", "opcode": "load"}, "102": {"instruction": "%4 = icmp ult i32 %3, 3", "opcode": "icmp"}, "103": {"instruction": "br i1 %4, label %5, label %9", "opcode": "br"}, "block-5": {"block_var_list": ["%6", "%7", "%8"], "block_inst_count": 4}, "block-9": {"block_var_list": ["%10", "%11", "%12", "%13", "%14", "%15", "%16", "%17", "%18", "%19"], "block_inst_count": 11}, "104": {"instruction": "%6 = sext i32 %3 to i64", "opcode": "sext"}, "105": {"instruction": "%7 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.displayPerson, i64 0, i64 %6", "opcode": "getelementptr"}, "@.str.6": {"define": "@.str.6 = private unnamed_addr constant [5 x i8] c\"Male\\00\", align 1 ", "is_global": "true"}, "@.str.7": {"define": "@.str.7 = private unnamed_addr constant [7 x i8] c\"Female\\00\", align 1 ", "is_global": "true"}, "@.str.8": {"define": "@.str.8 = private unnamed_addr constant [6 x i8] c\"Other\\00\", align 1 ", "is_global": "true"}, "106": {"instruction": "%8 = load i8*, i8** %7, align 8", "opcode": "load"}, "107": {"instruction": "br label %9", "opcode": "br"}, "108": {"instruction": "%10 = phi i8* [ %8, %5 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), %1 ]", "opcode": "phi"}, "@.str.9": {"define": "@.str.9 = private unnamed_addr constant [8 x i8] c\"Unknown\\00\", align 1 ", "is_global": "true"}, "109": {"instruction": "%11 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 0, i32 0, i64 0", "opcode": "getelementptr", "call_fun_param": "True"}, "110": {"instruction": "%12 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 0, i32 1", "opcode": "getelementptr", "call_fun_param": "True"}, "111": {"instruction": "%13 = load i32, i32* %12, align 4, !tbaa !9", "opcode": "load"}, "112": {"instruction": "%14 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 0, i32 2", "opcode": "getelementptr", "call_fun_param": "True"}, "113": {"instruction": "%15 = load float, float* %14, align 8, !tbaa !10", "opcode": "load"}, "114": {"instruction": "%16 = fpext float %15 to double", "opcode": "fpext"}, "115": {"instruction": "%17 = getelementptr inbounds %struct.Person, %struct.Person* %0, i64 0, i32 3", "opcode": "getelementptr", "call_fun_param": "True"}, "116": {"instruction": "%18 = load double, double* %17, align 8, !tbaa !11", "opcode": "load"}, "117": {"instruction": "%19 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i8* %11, i32 %13, double %16, double %18, i8* %10)", "opcode": "call"}, "@.str.10": {"define": "@.str.10 = private unnamed_addr constant [64 x i8] c\"Name: %s, Age: %d, Height: %.2f m, Weight: %.2f kg, Gender: %s\\0A\\00\", align 1 ", "is_global": "true"}, "118": {"instruction": "ret void", "opcode": "ret"}}}, "performArithmeticOperations": {"nodes": ["performArithmeticOperations", "block-0", "119", "@str.24", "120", "121", "@.str.12", "122", "123", "@.str.13", "124", "125", "@.str.14", "126", "127", "block-19", "block-11", "128", "129", "130", "131", "132", "@.str.15", "133", "134", "@.str.16", "135", "block-21", "136", "@str.25", "137", "138"], "links": [["performArithmeticOperations", "block-0", "Function_Entry"], ["block-0", "119", "Sequential"], ["block-0", "120", "Sequential"], ["block-0", "122", "Sequential"], ["block-0", "124", "Sequential"], ["block-0", "126", "Sequential"], ["@str.24", "119", "Global"], ["120", "121", "Data"], ["@.str.12", "121", "Global"], ["122", "123", "Data"], ["@.str.13", "123", "Global"], ["124", "125", "Data"], ["@.str.14", "125", "Global"], ["126", "127", "Data"], ["127", "block-19", "Control"], ["127", "block-11", "Control"], ["block-19", "136", "Sequential"], ["block-11", "128", "Sequential"], ["block-11", "129", "Sequential"], ["block-11", "133", "Sequential"], ["128", "130", "Data"], ["129", "130", "Data"], ["129", "135", "Sequential"], ["130", "131", "Data"], ["131", "132", "Data"], ["132", "135", "Sequential"], ["@.str.15", "132", "Global"], ["133", "134", "Data"], ["134", "135", "Sequential"], ["@.str.16", "134", "Global"], ["135", "block-21", "Control"], ["block-21", "138", "Sequential"], ["136", "137", "Sequential"], ["@str.25", "136", "Global"], ["137", "block-21", "Control"]], "nodes_info": {"performArithmeticOperations": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 4}, "block-0": {"block_var_list": ["%3", "%4", "%5", "%6", "%7", "%8", "%9", "%10"], "block_inst_count": 9}, "119": {"instruction": "%3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @str.24, i64 0, i64 0))", "opcode": "call"}, "@str.24": {"define": "@str.24 = private unnamed_addr constant [24 x i8] c\"\\0AArithmetic Operations:\\00\", align 1 ", "is_global": "true"}, "120": {"instruction": "%4 = add nsw i32 %1, %0", "opcode": "add", "call_fun_param": "True"}, "121": {"instruction": "%5 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i32 %0, i32 %1, i32 %4)", "opcode": "call", "call_fun_param": "True"}, "@.str.12": {"define": "@.str.12 = private unnamed_addr constant [24 x i8] c\"Addition: %d + %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "122": {"instruction": "%6 = sub nsw i32 %0, %1", "opcode": "sub", "call_fun_param": "True"}, "123": {"instruction": "%7 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i32 %0, i32 %1, i32 %6)", "opcode": "call", "call_fun_param": "True"}, "@.str.13": {"define": "@.str.13 = private unnamed_addr constant [27 x i8] c\"Subtraction: %d - %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "124": {"instruction": "%8 = mul nsw i32 %1, %0", "opcode": "mul", "call_fun_param": "True"}, "125": {"instruction": "%9 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i32 %0, i32 %1, i32 %8)", "opcode": "call", "call_fun_param": "True"}, "@.str.14": {"define": "@.str.14 = private unnamed_addr constant [30 x i8] c\"Multiplication: %d * %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "126": {"instruction": "%10 = icmp eq i32 %1, 0", "opcode": "icmp", "call_fun_param": "True"}, "127": {"instruction": "br i1 %10, label %19, label %11", "opcode": "br"}, "block-19": {"block_var_list": ["%20"], "block_inst_count": 2}, "block-11": {"block_var_list": ["%12", "%13", "%14", "%15", "%16", "%17", "%18"], "block_inst_count": 8}, "128": {"instruction": "%12 = sitofp i32 %0 to float", "opcode": "sitofp", "call_fun_param": "True"}, "129": {"instruction": "%13 = sitofp i32 %1 to float", "opcode": "sitofp", "call_fun_param": "True"}, "130": {"instruction": "%14 = fdiv float %12, %13", "opcode": "fdiv"}, "131": {"instruction": "%15 = fpext float %14 to double", "opcode": "fpext"}, "132": {"instruction": "%16 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i32 %0, i32 %1, double %15)", "opcode": "call", "call_fun_param": "True"}, "@.str.15": {"define": "@.str.15 = private unnamed_addr constant [26 x i8] c\"Division: %d / %d = %.2f\\0A\\00\", align 1 ", "is_global": "true"}, "133": {"instruction": "%17 = srem i32 %0, %1", "opcode": "srem", "call_fun_param": "True"}, "134": {"instruction": "%18 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i32 %0, i32 %1, i32 %17)", "opcode": "call", "call_fun_param": "True"}, "@.str.16": {"define": "@.str.16 = private unnamed_addr constant [23 x i8] c\"Modulo: %d %% %d = %d\\0A\\00\", align 1 ", "is_global": "true"}, "135": {"instruction": "br label %21", "opcode": "br"}, "block-21": {"block_var_list": [], "block_inst_count": 1}, "136": {"instruction": "%20 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @str.25, i64 0, i64 0))", "opcode": "call"}, "@str.25": {"define": "@str.25 = private unnamed_addr constant [31 x i8] c\"Division by zero is undefined.\\00\", align 1 ", "is_global": "true"}, "137": {"instruction": "br label %21", "opcode": "br"}, "138": {"instruction": "ret void", "opcode": "ret"}}}, "callbackFunction": {"nodes": ["callbackFunction", "block-0", "139", "140", "@.str.20", "141"], "links": [["callbackFunction", "block-0", "Function_Entry"], ["block-0", "139", "Sequential"], ["139", "140", "Data"], ["140", "141", "Sequential"], ["@.str.20", "140", "Global"]], "nodes_info": {"callbackFunction": {"function_params": ["i32 %0", "i32 %1", "i32 (i32, i32)* %2"], "bb_num": 1}, "block-0": {"block_var_list": ["%4", "%5"], "block_inst_count": 3}, "139": {"instruction": "%4 = call i32 %2(i32 %0, i32 %1) #8", "opcode": "call", "call_fun_param": "True"}, "140": {"instruction": "%5 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 %4)", "opcode": "call"}, "@.str.20": {"define": "@.str.20 = private unnamed_addr constant [25 x i8] c\"Result of operation: %d\\0A\\00\", align 1 ", "is_global": "true"}, "141": {"instruction": "ret void", "opcode": "ret"}}}, "add": {"nodes": ["add", "block-0", "142", "143"], "links": [["add", "block-0", "Function_Entry"], ["block-0", "142", "Sequential"], ["142", "143", "Data"]], "nodes_info": {"add": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 1}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "142": {"instruction": "%3 = add nsw i32 %1, %0", "opcode": "add", "call_fun_param": "True"}, "143": {"instruction": "ret i32 %3", "opcode": "ret"}}}, "subtract": {"nodes": ["subtract", "block-0", "144", "145"], "links": [["subtract", "block-0", "Function_Entry"], ["block-0", "144", "Sequential"], ["144", "145", "Data"]], "nodes_info": {"subtract": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 1}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "144": {"instruction": "%3 = sub nsw i32 %0, %1", "opcode": "sub", "call_fun_param": "True"}, "145": {"instruction": "ret i32 %3", "opcode": "ret"}}}, "multiply": {"nodes": ["multiply", "block-0", "146", "147"], "links": [["multiply", "block-0", "Function_Entry"], ["block-0", "146", "Sequential"], ["146", "147", "Data"]], "nodes_info": {"multiply": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 1}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "146": {"instruction": "%3 = mul nsw i32 %1, %0", "opcode": "mul", "call_fun_param": "True"}, "147": {"instruction": "ret i32 %3", "opcode": "ret"}}}, "divide": {"nodes": ["divide", "block-0", "148", "149", "block-6", "block-4", "150", "151", "block-8", "152", "@str.26", "153", "154", "155"], "links": [["divide", "block-0", "Function_Entry"], ["block-0", "148", "Sequential"], ["148", "149", "Data"], ["149", "block-6", "Control"], ["149", "block-4", "Control"], ["block-6", "152", "Sequential"], ["block-4", "150", "Sequential"], ["150", "151", "Sequential"], ["150", "154", "Data"], ["151", "block-8", "Control"], ["block-8", "154", "Sequential"], ["152", "153", "Sequential"], ["@str.26", "152", "Global"], ["153", "block-8", "Control"], ["154", "155", "Data"]], "nodes_info": {"divide": {"function_params": ["i32 %0", "i32 %1"], "bb_num": 4}, "block-0": {"block_var_list": ["%3"], "block_inst_count": 2}, "148": {"instruction": "%3 = icmp eq i32 %1, 0", "opcode": "icmp", "call_fun_param": "True"}, "149": {"instruction": "br i1 %3, label %6, label %4", "opcode": "br"}, "block-6": {"block_var_list": ["%7"], "block_inst_count": 2}, "block-4": {"block_var_list": ["%5"], "block_inst_count": 2}, "150": {"instruction": "%5 = sdiv i32 %0, %1", "opcode": "sdiv", "call_fun_param": "True"}, "151": {"instruction": "br label %8", "opcode": "br"}, "block-8": {"block_var_list": ["%9"], "block_inst_count": 2}, "152": {"instruction": "%7 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @str.26, i64 0, i64 0))", "opcode": "call"}, "@str.26": {"define": "@str.26 = private unnamed_addr constant [31 x i8] c\"Division by zero is undefined.\\00\", align 1 ", "is_global": "true"}, "153": {"instruction": "br label %8", "opcode": "br"}, "154": {"instruction": "%9 = phi i32 [ %5, %4 ], [ 0, %6 ]", "opcode": "phi"}, "155": {"instruction": "ret i32 %9", "opcode": "ret"}}}}